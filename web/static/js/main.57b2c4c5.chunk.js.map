{"version":3,"sources":["components/bar-graph.tsx","components/icons.tsx","helpers/urls.ts","helpers/delay.ts","components/lazy-component.tsx","components/smart-image.tsx","components/nft-card.tsx","helpers/open-sea.ts","helpers/theme.ts","components/nft-loader.tsx","components/lazy-list.tsx","components/nft-project.tsx","components/layout.tsx","components/nft-projects.tsx","components/home-page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BarGraphCell","ratio","text","textRight","className","style","position","zIndex","width","toFixed","height","display","flexDirection","opacity","flex","Icon","icon","LoadingIndicator","IconLink","url","iconUrl","href","fontSize","src","alt","getProjectJsonUrl","projectKey","getNftJsonUrl","tokenId","getIpfsUrl","nftUrl","replace","delay","timeout","a","Promise","resolve","setTimeout","Date","now","globalRelayoutCallbacks","activeNotifyRelayoutId","notifyRelayout","notifyRelayoutId","i","length","callback","window","addEventListener","IntersectionObserver","observe","document","getElementsByTagName","nextLazyComponentId","LazyComponent","children","onLoad","placeholderRef","useRef","useState","shouldLoad","setShouldLoad","isDoneRef","useEffect","current","placeholder","iRelayout","push","divRect","getBoundingClientRect","screenBottom","scrollY","innerHeight","top","unsub","ref","minWidth","minHeight","SmartImage","loading","setLoading","error","setError","attemptsRef","timeoutRef","onLoadStart","clearTimeout","Math","pow","onError","Price","price","symbol","toLowerCase","color","priceUsd","NftCardPlaceholder","props","NftCard","nft","onSelect","rarityScore","rank","lastSell","listing","name","justifyContent","external_url","openSeaLink","image","textAlign","attributeRarities","map","x","Fragment","trait_type","ratioScore","onClick","e","preventDefault","stopPropagation","traitType","value","fontWeight","getOpenSeaData","contractAddress","openSeaUrl","fetch","result","json","changeTheme","projectTheme","target","toCssName","key","t","theme","Object","keys","filter","join","isDark","themeTagId","existing","getElementById","remove","newElement","createElement","innerHTML","id","head","appendChild","ThemeSubscription","_callbacks","subscribe","forEach","NftLoader","setNft","obj","sort","b","localeCompare","nftProjectUrl","project","contract","openSeaData","lastSellPrice","parseFloat","last_sale","total_price","payment_token","decimals","lastSellSymbol","lastSellPriceUsd","usd_price","order","orders","side","listingPrice","current_price","payment_token_contract","listingSymbol","listingPriceUsd","undefined","permalink","LazyList","items","getItemKey","ItemComponent","loadCount","setLoadCount","lastLoadCount","itemsLoaded","slice","index","s","onLoaded","item","NftProjectLoader","projectRarity","setProjectRarity","loaded","loadProjectRarityData","ALL_TRAIT_VALUE","doc","traitTypes","Set","tokenLookups","traitTypeTokenLookups","includedTokenIds","flatMap","tokenIds","missingTokenIds","tokenIdsByRank","has","unshift","trait_value","NftProject","setTokenIds","nftListRef","traitFilters","args","tokenIdsSelected","entries","traitKey","traitValue","tokenLookup","find","v","selected","onReset","location","ProjectInfo","objectFit","external_link","links","opensea","openSea","twitter","discord","k","includes","description","TraitTypesList","isExpanded","setIsExpanded","left","values","some","right","TraitValuesList","selectedTraitValue","isAllSelected","Layout","setIsDark","padding","NftProjectsLoader","projects","NftProjects","projectMetadata","NftProjectCard","targetId","HomePage","alignItems","CharacterArea","punkId","link","Character","open","Routing","route","pathname","split","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.57b2c4c5.chunk.js","sourcesContent":["import React, { useRef } from 'react';\n\nexport const BarGraphCell = ({ ratio, text, textRight }:{ ratio: number, text?: string, textRight?: string })=>{\n    return (\n        <div className='bar-graph' style={{position:'relative'}}>\n            <div className='bar-graph-background' style={{\n                position:'absolute',\n                zIndex: 0,\n                width: `${(100 * ratio).toFixed(0)}%`,\n                height: '100%',\n                }}>\n            </div>\n            <div style={{position:'relative', zIndex: 10, display:'flex', flexDirection:'row'}}>\n                {/* Used to center main text */}\n                <div className='bar-graph-text-right' style={{opacity:0}}>\n                    {textRight}\n                </div>\n                <div className='bar-graph-text' style={{flex:1}}>\n                    {text ?? `${(100 * ratio).toFixed(2)}%`}\n                </div>\n                <div className='bar-graph-text-right' style={{}}>\n                    {textRight}\n                </div>\n            </div>\n            \n        </div>\n    );\n}","import React from 'react';\nimport { AiFillTwitterCircle } from \"react-icons/ai\";\nimport { FaDiscord, FaEthereum } from \"react-icons/fa\";\nimport { HiLink } from \"react-icons/hi\";\nimport { VscChevronDown, VscChevronRight, VscLoading } from \"react-icons/vsc\";\n\nexport type IconName = \n| 'twitter'\n| 'discord'\n| 'link'\n| 'eth'\n| 'collapsed'\n| 'expanded'\n| 'loading'\n;\nexport const Icon = ({icon}:{icon:IconName})=>{\n    switch(icon){\n        case 'twitter': return <AiFillTwitterCircle/>;\n        case 'discord': return <FaDiscord/>;\n        case 'link': return <HiLink/>;\n        case 'eth': return <FaEthereum/>;\n        case 'collapsed': return <VscChevronRight/>;\n        case 'expanded': return <VscChevronDown/>;\n        case 'loading': return <VscLoading/>;\n    }\n\n    return <></>;\n};\n\nexport const LoadingIndicator = ()=>{\n    return (\n        <div className='loading'>\n            <Icon icon='loading'/>\n        </div>\n    );\n};\n\nexport const IconLink = ({url, icon, iconUrl}: {url?:string, icon?: IconName, iconUrl?:string})=>{\n    return (\n        <>\n            {!!url && <a href={url}\n                style={{display:'inline-block', width: 32, height: 32, fontSize: 20 }}\n            >\n                {!!icon && <Icon icon={icon}/>}\n                {!!iconUrl && <img style={{width:20, height: 20}} src={iconUrl} alt='link'/>}\n            </a>}\n        </>\n    );\n};","export const getProjectsJsonUrl = ()=>`/data/projects.json`;\nexport const getProjectJsonUrl = (projectKey:string)=>`/data/${projectKey}/project.json`;\nexport const getNftJsonUrl = (projectKey:string, tokenId: string)=>`/data/${projectKey}/${tokenId}.json`;\nexport const getIpfsUrl = (nftUrl:string) => nftUrl.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/');\nexport const getOpenSeaTokenUrl = (contractAddress:string, tokenId:string) => `https://opensea.io/assets/${contractAddress}/${tokenId}`;\n\n","export async function delay(timeout: number): Promise<void> {\n    return await new Promise((resolve) => {\n        setTimeout(resolve, timeout);\n    });\n}","import React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport { delay } from '../helpers/delay';\n\nconst debug_timeStart = Date.now();\nconst globalRelayoutCallbacks = [] as (null | (()=>boolean))[];\nlet activeNotifyRelayoutId = 0;\nconst notifyRelayout = async () => {\n\n    // Cancellable\n    activeNotifyRelayoutId++;\n    let notifyRelayoutId = activeNotifyRelayoutId;\n    await delay(100);\n\n    // console.log('LazyComponent notifyRelayout', {notifyRelayoutId});\n    \n    let i = 0;\n    while(i < globalRelayoutCallbacks.length){\n        const callback = globalRelayoutCallbacks[i];\n        if(callback && callback()){\n            await delay(25);\n        }\n        i++;\n\n        if(notifyRelayoutId !== activeNotifyRelayoutId){\n            // Cancelled\n            // console.log('LazyComponent notifyRelayout - Cancelled', {notifyRelayoutId});\n            return;\n        }\n    }\n};\nwindow.addEventListener('scroll', notifyRelayout);\nwindow.addEventListener('load', ()=>{\n    const observer = new IntersectionObserver(notifyRelayout);\n    // Observe any element\n    observer.observe(document.getElementsByTagName('body')[0]);\n});\n\nlet nextLazyComponentId = 0;\n\nexport const LazyComponent = ({ \n    children,\n    onLoad,\n}:{ \n    children: ReactNode,\n    onLoad?: () => void,\n })=>{\n\n    const placeholderRef = useRef(null as null | HTMLDivElement);\n    const [shouldLoad, setShouldLoad] = useState(false);\n    const isDoneRef = useRef(false);\n    const lazyComponentId = useRef(nextLazyComponentId++);\n\n    useEffect(() => {\n        // console.log('LazyComponent useEffect', {lazyComponentId});\n\n        if( !placeholderRef.current ){ \n            // console.log('LazyComponent useEffect - SKIP placeholderRef is missing', {lazyComponentId});\n            return; \n        }\n        const placeholder = placeholderRef.current;\n        isDoneRef.current = false;\n      \n        const loadIfVisible = () => {\n            // console.log('LazyComponent useEffect:loadIfVisible', {lazyComponentId});\n\n            if( !placeholderRef.current ){ \n                // console.log('LazyComponent useEffect:loadIfVisible - SKIP placeholderRef is missing', {lazyComponentId});\n                return false; \n            }\n            if( isDoneRef.current ){ \n                // console.log('LazyComponent useEffect:loadIfVisible - SKIP isDone', {lazyComponentId});\n                return false; \n            }\n\n            const divRect = placeholder.getBoundingClientRect();\n            const screenBottom = window.scrollY + window.innerHeight;\n            const isOnScreen = divRect.top < screenBottom;\n\n            if(!isOnScreen){ return false; }\n            // console.log(`isOnScreen`,{ time: Date.now() - debug_timeStart, iRelayout, divRect, screenBottom, isOnScreen });\n            \n            isDoneRef.current = true;\n            unsub();\n            setShouldLoad(true);\n            notifyRelayout();\n            onLoad?.();\n\n            return true;\n        };\n\n        const iRelayout = globalRelayoutCallbacks.length;\n        globalRelayoutCallbacks.push(loadIfVisible);\n        const unsub = ()=>{\n            globalRelayoutCallbacks[iRelayout] = null;\n        };\n\n        notifyRelayout();\n\n        return () => {\n            isDoneRef.current = true;\n            unsub();\n        };\n    },[children, onLoad]);\n\n    // console.log('LazyComponent RENDER', {lazyComponentId});\n    return (\n        <>  \n            {!shouldLoad && <div ref={placeholderRef} style={{minWidth: 100, minHeight: 100}}/>}\n            {shouldLoad && children}\n        </>\n    );\n};","import React, { CSSProperties, useEffect, useRef, useState } from \"react\";\r\nimport { getIpfsUrl } from \"../helpers/urls\";\r\nimport { LoadingIndicator } from \"./icons\";\r\nimport { LazyComponent } from \"./lazy-component\";\r\n\r\nexport const SmartImage = ({src, alt, style}:{src:undefined |null|string, alt: string, style?: CSSProperties})=>{\r\n\r\n    const MAX_ATTEMPTS = 5;\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const attemptsRef = useRef(1);\r\n\r\n    const timeoutRef = useRef(0 as unknown as ReturnType<typeof setTimeout>);\r\n\r\n    const onRetry = () => {\r\n        clearTimeout(timeoutRef.current);\r\n        if(attemptsRef.current > MAX_ATTEMPTS){ return; }\r\n    \r\n        setError(true);\r\n        onLoadStart();\r\n    };\r\n    const onLoadStart = () => {\r\n        clearTimeout(timeoutRef.current);\r\n        if(attemptsRef.current > MAX_ATTEMPTS){ return; }\r\n\r\n        timeoutRef.current = setTimeout(()=>{\r\n            attemptsRef.current++;\r\n            setError(false);\r\n        }, Math.pow(2, attemptsRef.current) * 1000);\r\n    };\r\n    const onLoad = () => {\r\n        clearTimeout(timeoutRef.current);\r\n        setLoading(false);\r\n    };\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            clearTimeout(timeoutRef.current);\r\n        };\r\n    },[]);\r\n\r\n    if(!src){ return <></>; }\r\n    return (\r\n        <>\r\n            <LazyComponent>\r\n                {loading && (<LoadingIndicator/>)}\r\n                {!error && (\r\n                    <img key={attemptsRef.current} alt={alt} style={style} src={getIpfsUrl(src)} onLoadStart={onLoadStart} onLoad={onLoad} onError={onRetry}/>\r\n                )}\r\n            </LazyComponent>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport { INftRarity } from '@crypto-dev-amigos/common';\nimport { LazyComponent } from './lazy-component';\nimport { getIpfsUrl } from '../helpers/urls';\nimport { BarGraphCell } from './bar-graph';\nimport { Icon, IconLink, LoadingIndicator } from './icons';\nimport { SmartImage } from './smart-image';\nimport { OnSelectTraitValue } from './types';\n\nexport type INftRarityWithExtra = INftRarity & {\n    openSeaLink?: string;\n    lastSell?: {\n        price: number;\n        symbol?: string;\n        priceUsd?: number;\n    },\n    listing?: {\n        price: number;\n        symbol?: string;\n        priceUsd?: number;\n    },\n};\n\nconst Price = ({price}:{price?: {\n    price: number;\n    symbol?: string;\n    priceUsd?: number;\n}}) => {\n    \n    if(!price){ return <span>{'-?-'}</span>}\n\n    return (\n        <>\n            <div style={{display:'inline-block', minWidth: 100}}>\n                <span>{price.price.toFixed(3)}</span>\n                {price.symbol && (\n                    price.symbol.toLowerCase() === 'eth' ? <span className='black-or-white'><Icon icon='eth'/></span> \n                    : price.symbol.toLowerCase() === 'weth' ? <span style={{color: '#ca477b'}}><Icon icon='eth'/></span> \n                    : <span>{price.symbol}</span>\n                )}\n            </div>\n            <div style={{display:'inline-block', minWidth: 100}}>\n                <span>{price.priceUsd ? ` $${price.priceUsd.toFixed(2)}`:''}</span>\n            </div>\n        </>\n    );\n}\n\nexport const NftCardPlaceholder = (props:{})=>{\n    return (\n        <>\n            <div className={'nft-card'}>\n                <LoadingIndicator/>\n                <div style={{height: 300}}></div>\n            </div>\n        </>\n    );\n}\n\nexport const NftCard = ({nft, onSelect}:{ nft: INftRarityWithExtra, onSelect?: OnSelectTraitValue }) => {\n\n    return (\n        <>\n            <div className={'nft-card'}>\n                <div className='nft-card-header'>\n                    <div className='nft-card-header-item'>\n                        <div className='nft-card-header-item-label'>Rarity Score:</div>\n                        <div className='nft-card-header-item-value'>{nft.rarityScore.toFixed(2)}</div>\n                    </div>\n                    <div className='nft-card-header-item'>\n                        <div className='nft-card-header-item-label'>Rank:</div>\n                        <div className='nft-card-header-item-value'>{nft.rank}</div>\n                    </div>\n                    <div className='nft-card-header-item-2'>\n                        <div className='nft-card-header-item-label'>Last Sell:</div>\n                        <div className='nft-card-header-item-value'><Price price={nft.lastSell}/></div>\n                    </div>\n                    <div className='nft-card-header-item-2'>\n                        <div className='nft-card-header-item-label'>Listing:</div>\n                        <div className='nft-card-header-item-value'><Price price={nft.listing}/></div>\n                    </div>\n                    <div className='nft-card-header-title'>{nft.nft.name}</div>\n                </div>\n\n                <div className='nft-card-content'>\n                    <div style={{display:'flex', flexDirection:'row', justifyContent:'flex-end'}}>\n                        <IconLink url={nft.nft.external_url} icon='link'/>\n                        <IconLink url={nft.openSeaLink} iconUrl='/media/opensea.png'/>\n                    </div>\n                    <div className={'nft-card-image'}>\n                        <SmartImage alt='nft' src={nft.nft.image}/>\n                    </div>\n\n                    <div className='nft-card-stats'>\n                        <div className='nft-card-stats-row nft-card-stats-title' style={{ fontSize:`0.8em` }}>\n                            <div className='nft-card-stats-cell' style={{textAlign:'left'}}>{'Trait'}</div>\n                            <div className='nft-card-stats-cell' style={{textAlign:'right'}}>{'Rarity Score'}</div>\n                        </div>\n                        <div className='nft-card-stats-row nft-card-stats-title' style={{ fontSize:`0.8em` }}>\n                            <div className='nft-card-stats-cell' style={{textAlign:'right'}}>{''}</div>\n                            <div className='nft-card-stats-cell'>{'Commonality'}</div>\n                        </div>\n                        {nft.attributeRarities.map(x=>(\n                            <React.Fragment key={x.trait_type}>\n                                <div className='nft-card-stats-row'>\n                                    <div className='nft-card-stats-cell nft-card-stats-title' style={{textAlign:'left'}}>{x.trait_type}</div>\n                                    <div className='nft-card-stats-cell numeric-value' style={{textAlign:'right'}}>{`${x.ratioScore.toFixed(2)}`}</div>  \n                                </div>\n                                <div className='nft-card-stats-row'>\n                                    <div className={`nft-card-stats-cell ${onSelect?'link':''}`} style={{textAlign:'right'}}>\n                                        <span \n                                            onClick={(e) => {\n                                                if(!onSelect){return;}\n\n                                                e.preventDefault();\n                                                e.stopPropagation();\n                                                onSelect({traitType: x.trait_type, value: x.value});\n                                            }}\n                                            style={x.value !== \"[Missing]\"?{fontWeight:'bold'}:{}}>{x.value}</span>\n                                    </div>\n                                    <div className='nft-card-stats-cell numeric-value'>\n                                        <BarGraphCell ratio={x.ratio} />\n                                    </div>                              \n                                </div>\n                            </React.Fragment>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\n","export const getOpenSeaData = async ({contractAddress, tokenId}: {contractAddress:string, tokenId:string})=>{\n\n    const openSeaUrl = `https://api.opensea.io/api/v1/asset/${contractAddress}/${tokenId}/`;\n    const result = await fetch(openSeaUrl);\n    const json = await result.json() as {\n        token_id: string,\n        num_sales?: number,    \n        last_sale?: {\n            /** BigNumber */\n            total_price: string,\n            payment_token: {\n                symbol: string,\n                decimals: number,\n                usd_price: string,\n            },\n        },\n        orders?: {\n            current_price: string,\n            payment_token_contract: {\n                symbol: string,\n                decimals: number,\n                usd_price: string,\n            },\n            /** \n             * - 1 for buy orders \n             * - 1 for sell orders \n             * */\n            side: 0|1,\n        }[],\n        /** Open sea link */\n        permalink:string,\n    };\n\n    return json;\n};\n","import { IProjectTheme } from \"@crypto-dev-amigos/common\";\n\nexport const changeTheme = (projectTheme: undefined | null | IProjectTheme, target = ':root') => {\n\n    const toCssName = (key: string)=> key.replace(/[A-Z]/g,(x)=>'-' + x.toLowerCase());\n\n    const t = projectTheme ?? {} as Record<string,string | boolean>;\n    const theme = `\n${target} {\n    ${Object.keys(t)\n        .filter(key => t[key] && typeof t[key] === 'string')\n        .map(key => `\n    --${toCssName(key)}: ${t[key]};`).join('')}\n\n    --black-or-white: ${projectTheme?.isDark ? '#FFFFFF' : '#000000'}\n}\n    `;\n\n    const themeTagId = '__themeStyleOverride' + target;\n\n    const existing = document.getElementById(themeTagId);\n    existing?.remove();\n    \n    const newElement = document.createElement('style');\n    newElement.innerHTML = theme;\n    newElement.id = themeTagId;\n    document.head.appendChild(newElement);\n\n    ThemeSubscription.changeTheme(projectTheme?.isDark ?? true);\n};\n\n\ntype Callback = (isDark:boolean) => void;\nconst _callbacks = [] as Callback[];\nexport const ThemeSubscription = {\n    subscribe: (callback: Callback) => {\n        _callbacks.push(callback);\n    },\n    changeTheme: (isDark:boolean)=>{_callbacks.forEach(x=>x(isDark))},\n};","import React, { useEffect, useState } from 'react';\nimport { INftProjectRarityDocument, INftRarityDocument } from '@crypto-dev-amigos/common';\nimport { INftRarityWithExtra, NftCard, NftCardPlaceholder } from './nft-card';\nimport { getNftJsonUrl, getProjectJsonUrl } from '../helpers/urls';\nimport { getOpenSeaData } from '../helpers/open-sea';\nimport { changeTheme } from '../helpers/theme';\nimport { OnSelectTraitValue } from './types';\n\nexport const NftLoader = ({ \n    projectKey, tokenId, contractAddress, onSelect\n }:{ \n     projectKey: string, tokenId: string, contractAddress?: string, onSelect?: OnSelectTraitValue\n})=>{\n\n    const [nft, setNft] = useState(null as null | INftRarityWithExtra);\n\n    useEffect(() => {\n        (async () => {\n            const nftUrl = getNftJsonUrl(projectKey, tokenId);\n            // console.log('NftLoader', {nftUrl});\n            const result = await fetch(nftUrl);\n            const obj = await result.json() as INftRarityDocument;\n\n            obj.attributeRarities.sort((a,b)=>a.trait_type.localeCompare(b.trait_type));\n            setNft(obj);\n\n            // Try to get contractAddress from project data\n            if(!contractAddress){\n                // Load from project\n                const nftProjectUrl = getProjectJsonUrl(projectKey);\n                // console.log('projectKey', { projectKey, nftProjectUrl });\n                const result = await fetch(nftProjectUrl);\n                const obj = await result.json() as INftProjectRarityDocument;\n                contractAddress = obj.project.contract;\n\n                changeTheme(obj.project.theme);\n\n                if(!contractAddress){ return; }\n            }\n\n            // Load open sea data\n            const openSeaData = await getOpenSeaData({ contractAddress, tokenId });\n            const lastSellPrice = parseFloat(openSeaData.last_sale?.total_price ?? '0') / Math.pow(10, openSeaData.last_sale?.payment_token.decimals ?? 0);\n            const lastSellSymbol = openSeaData.last_sale?.payment_token.symbol;\n            const lastSellPriceUsd = lastSellPrice * parseFloat(openSeaData.last_sale?.payment_token.usd_price ?? '1');\n\n            const order = openSeaData.orders?.filter(x=>x.side===1)?.[0];\n            const listingPrice = parseFloat(order?.current_price ?? '0') / Math.pow(10, order?.payment_token_contract.decimals ?? 0);\n            const listingSymbol =order?.payment_token_contract.symbol;\n            const listingPriceUsd = listingPrice * parseFloat(order?.payment_token_contract.usd_price ?? '1');\n\n            setNft({\n                ...obj, \n                lastSell: openSeaData.last_sale ? {\n                    price: lastSellPrice, \n                    symbol: lastSellSymbol, \n                    priceUsd : lastSellPriceUsd,\n                } : undefined,\n                listing: order ? {\n                    price: listingPrice, \n                    symbol: listingSymbol, \n                    priceUsd : listingPriceUsd,\n                } : undefined,\n                openSeaLink: openSeaData.permalink,\n            })\n\n        })();\n    }, [projectKey, tokenId]);\n\n    // console.log('NftLoader RENDER', {projectKey, tokenId});\n    return (\n        <>\n            {!nft && <NftCardPlaceholder />}\n            {nft && <NftCard nft={nft} onSelect={onSelect}/>}\n        </>\n    );\n};\n\n","import React, { useRef } from 'react';\nimport { useState } from 'react';\nimport { LazyComponent } from './lazy-component';\n\nexport const LazyList = <T extends {}>({\n    items, \n    getItemKey, \n    ItemComponent \n}:{ \n    items:T[], \n    getItemKey:(item:T)=>string, \n    ItemComponent: (props:{item:T}) => JSX.Element,\n})=>{\n\n    const PAGE_SIZE = 12;\n    const NEAR_END_COUNT = 3;\n    const [loadCount, setLoadCount] = useState(PAGE_SIZE);\n    const lastLoadCount = useRef(PAGE_SIZE);\n    lastLoadCount.current = loadCount;\n\n    const onLoaded = (index:number)=>{\n        // Skip if already loaded more\n        if(lastLoadCount.current !== loadCount){ return; }\n\n        // Skip if not near the end\n        if(index + NEAR_END_COUNT < loadCount){ return; }\n\n        // Load more\n        // console.log('# LazyList: loadMore', {loadCount});\n        setLoadCount(s=> s + PAGE_SIZE);\n    }\n\n    const itemsLoaded = items.slice(0, loadCount);\n\n    \n    // console.log('LazyList RENDER', {itemsLength: items.length, loadedLength: itemsLoaded.length});\n    return (\n        <>\n            {itemsLoaded.map((x,index)=>(\n                <React.Fragment key={getItemKey(x)} >\n                    <LazyComponent onLoad={() => onLoaded(index)}>\n                        <ItemComponent item={x}/>\n                    </LazyComponent>\n                </React.Fragment>\n            ))}\n        </>\n    );\n};\n\n","import React, { useEffect, useRef, useState } from 'react';\nimport type { INftProjectMetadataDocument, INftProjectRarityDocument, INftRarity, MISSING_ATTRIBUTE_VALUE as MISSING_ATTRIBUTE_VALUE_TYPE } from '@crypto-dev-amigos/common';\nimport { NftCard } from './nft-card';\nimport { LazyList } from './lazy-list';\nimport { NftLoader } from './nft-loader';\nimport { getIpfsUrl, getNftJsonUrl, getProjectJsonUrl } from '../helpers/urls';\nimport { BarGraphCell } from './bar-graph';\nimport { changeTheme } from '../helpers/theme';\nimport { Icon, IconLink, IconName, LoadingIndicator } from './icons';\nimport { SmartImage } from './smart-image';\nimport { OnSelectTraitValue } from './types';\n\n// Workaround for importing implementation\nconst MISSING_ATTRIBUTE_VALUE: typeof MISSING_ATTRIBUTE_VALUE_TYPE = `[Missing]`;\n\nexport const NftProjectLoader = ({ projectKey }:{ projectKey:string })=>{\n\n    const [projectRarity, setProjectRarity] = useState(null as null | INftProjectRarityData);\n\n    useEffect(() => {\n        (async () => {\n            const nftProjectUrl = getProjectJsonUrl(projectKey);\n            // console.log('projectKey', { projectKey, nftProjectUrl });\n            const result = await fetch(nftProjectUrl);\n            const obj = await result.json() as INftProjectRarityDocument;\n\n            changeTheme(obj.project.theme);\n\n            const loaded = loadProjectRarityData(obj);\n\n            setProjectRarity(loaded);\n        })();\n    }, [projectKey]);\n\nreturn (\n    <>\n        {!projectRarity && <LoadingIndicator/>}\n        {projectRarity && <NftProject projectKey={projectKey} projectRarity={projectRarity} />}\n    </>\n);\n};\n\nconst ALL_TRAIT_VALUE ='[All]';\ntype INftProjectRarityData = {\n    project: INftProjectMetadataDocument;\n    tokenIdsByRank: INftProjectRarityDocument['tokenIdsByRank']\n    tokenLookups: (INftProjectRarityDocument['tokenLookups'][number] & {\n        ratio: number;\n    })[],\n    traitTypes: string[];\n    contractAddress?: string;\n};\nconst loadProjectRarityData = (doc: INftProjectRarityDocument): INftProjectRarityData => {\n    const traitTypes = [...new Set(doc.tokenLookups.map(x=>x.trait_type))];\n\n    // Add [Missing] and [All]\n    traitTypes.forEach(traitType => {\n        const traitTypeTokenLookups = doc.tokenLookups\n            .filter(x=>x.trait_type === traitType);\n        const includedTokenIds = new Set(traitTypeTokenLookups.flatMap(x=>x.tokenIds));\n        const missingTokenIds = doc.tokenIdsByRank.filter(t => !includedTokenIds.has(t));\n        // Missing\n        if(missingTokenIds.length){\n            doc.tokenLookups.unshift({\n                trait_type: traitType,\n                trait_value: MISSING_ATTRIBUTE_VALUE,\n                tokenIds: missingTokenIds\n            });\n        }\n\n        // All\n        doc.tokenLookups.unshift({\n            trait_type: traitType,\n            trait_value: ALL_TRAIT_VALUE,\n            tokenIds: doc.tokenIdsByRank,\n        });\n    });\n\n    const tokenLookups = doc.tokenLookups.map(x=>({\n        ...x,\n        ratio: x.tokenIds.length / doc.tokenIdsByRank.length,\n    }));\n\n    // Sort tokenLookups\n    tokenLookups.sort();\n\n    return {\n        project: doc.project,\n        contractAddress: doc.project.contract,\n        tokenIdsByRank: doc.tokenIdsByRank,\n        tokenLookups,\n        traitTypes,\n    };\n};\n\ntype TraitFilters = { [traitType: string]: string };\nexport const NftProject = ({ projectKey, projectRarity }:{ projectKey:string, projectRarity:INftProjectRarityData}) => {\n\n    const [tokenIds, setTokenIds] = useState(new Set(projectRarity.tokenIdsByRank));\n    const nftListRef = useRef(null as null | HTMLDivElement)\n    const traitFilters = useRef({} as TraitFilters);\n\n    const onSelect = (args: { traitType: string, value: string }) => {\n        traitFilters.current[args.traitType] = args.value;\n        let tokenIdsSelected = new Set(projectRarity.tokenIdsByRank);\n        Object.entries(traitFilters.current).forEach(([traitKey,traitValue])=>{\n            const tokenLookup = projectRarity.tokenLookups.find(v => v.trait_type === traitKey && v.trait_value === traitValue);\n            if(!tokenLookup){ return; }\n\n            tokenIdsSelected = new Set(tokenLookup.tokenIds.filter(t => tokenIdsSelected.has(t) ));\n        });\n        setTokenIds(tokenIdsSelected);\n        // nftListRef.current?.scrollIntoView({behavior:'smooth'});\n    };\n    const onReset = () => {\n        traitFilters.current = {};\n        setTokenIds(new Set(projectRarity.tokenIdsByRank));\n    };\n\n    return (\n        <>\n            <div className='panel-container'>\n                <div className='panel-project-info'>\n                    <ProjectInfo project={projectRarity.project}/>\n                </div>\n                <div className='panel-trait-types'>\n                    <TraitTypesList projectRarity={projectRarity} tokenIds={tokenIds} selected={traitFilters.current} onSelect={onSelect} onReset={onReset}/>\n                </div>\n                <div className='panel-nft-list'>\n                    <div className='nft-list' ref={nftListRef}>\n                        {projectRarity && (\n                            <LazyList items={[...tokenIds]} getItemKey={x=>`${x}`} ItemComponent={({item})=>(\n                                <div\n                                    className='link'\n                                    onClick={()=>window.location.href=`${projectKey}/${item}`}\n                                >\n                                    <NftLoader projectKey={projectKey} tokenId={`${item}`} contractAddress={projectRarity.contractAddress} onSelect={onSelect} />\n                                </div>\n                            )}/>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport const ProjectInfo = ({project}:{ project:INftProjectMetadataDocument})=>{\n    return (\n        <>\n            <div className='project-info'>\n                <div style={{}}>\n                    <SmartImage alt='project' src={project.image} style={{objectFit:'contain', width: 150}}/>\n                </div>\n                <div style={{}}>\n                    <div style={{display:'flex', flexDirection:'row', justifyContent:'flex-end'}}>\n                        <IconLink url={project.external_link} icon='link'/>\n                        <IconLink url={project.links?.opensea} iconUrl='/media/opensea.png'/>\n                        <IconLink url={project.links?.openSea} iconUrl='/media/opensea.png'/>\n                        <IconLink url={project.links?.twitter} icon='twitter'/>\n                        <IconLink url={project.links?.discord} icon='discord'/>\n                        {Object.entries(project.links??{})\n                            .filter(([k])=> !'opensea openSea discord twitter'.includes(k))\n                            .map(([k,v])=>(\n                                <IconLink key={k} url={v} icon='link'/>\n                            ))}\n                    </div>\n                    <div className='project-info-title'>{project.name}</div>\n                    <div className='project-info-description'>{project.description}</div>\n                    {!!project.external_link && (\n                        <div className='project-info-link'>\n                            <a href={getIpfsUrl(project.external_link)}>{project.external_link}</a>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport const TraitTypesList = ({ \n    projectRarity, tokenIds, selected, onSelect, onReset\n}:{ \n    projectRarity:INftProjectRarityData, tokenIds: Set<number>, \n    selected:TraitFilters, \n    onSelect: OnSelectTraitValue,\n    onReset: () => void,\n})=>{\n    const [isExpanded, setIsExpanded] = useState(true);\n   \n    return (\n        <>\n            <div className='nft-trait-types-header'>\n                <div className='nft-trait-types-header-expandable link' onClick={()=>setIsExpanded(s=>!s)}>\n                    <div style={{position:'relative'}}>\n                        <div style={{\n                            position:'absolute',\n                            left: 4,\n                            fontSize: 18\n                            }}>\n                            {isExpanded ? <Icon icon='expanded'/> : <Icon icon='collapsed'/> }\n                        </div>\n                        Trait Filters \n                    </div>\n                </div>\n                <div className='nft-trait-types-header-simple'>\n                    <div>Trait Filters</div>\n                </div>\n            </div>\n                <div className='nft-trait-type-header link' onClick={onReset}>\n                    <div style={{position:'relative'}}>\n                        {Object.values(selected).some(x=>x !==ALL_TRAIT_VALUE) && (\n                            <>\n                                <div style={{\n                                    position:'absolute',\n                                    right: 4,\n                                    }}>\n                                    {'❌'}\n                                </div>\n                                <span>Reset</span>\n                            </>\n                        )}\n                        <span>&nbsp;</span>\n                    </div>\n                </div>\n            <div className='nft-trait-types'>\n                {projectRarity.traitTypes.map(x=>(\n                    <React.Fragment key={x}>\n                        <TraitValuesList traitType={x} projectRarity={projectRarity} isExpanded={isExpanded} tokenIds={tokenIds} selected={selected} onSelect={onSelect} />\n                    </React.Fragment>\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport const TraitValuesList = ({ \n    traitType, projectRarity, isExpanded, tokenIds, selected, onSelect\n}:{ \n     traitType: string, projectRarity:INftProjectRarityData, isExpanded: boolean, tokenIds: Set<number>, selected:TraitFilters, onSelect: OnSelectTraitValue\n})=>{\n   \n    const traitTypeTokenLookups = projectRarity.tokenLookups\n        .filter(x=>x.trait_type === traitType);\n    const tokenIdsOfAll = traitTypeTokenLookups\n        .find(x => x.trait_value===ALL_TRAIT_VALUE)\n        ?.tokenIds.filter(x => tokenIds.has(x)) ?? [];\n   \n    const selectedTraitValue = selected[traitType] ?? ALL_TRAIT_VALUE;\n    const isAllSelected = selectedTraitValue === ALL_TRAIT_VALUE;\n\n    if(!isExpanded){\n\n        if(!selectedTraitValue || isAllSelected){\n            return <></>;\n        }\n\n        return (\n            <div className='nft-trait-type link' onClick={()=>onSelect({traitType, value: ALL_TRAIT_VALUE})}>\n                <div style={{position:'relative'}}>\n                    <div style={{\n                        position:'absolute',\n                        right: 4,\n                        }}>\n                        {'❌'}\n                    </div>\n                    {traitType} = {selectedTraitValue}\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className='nft-trait-type'>\n            <div className='nft-trait-type-header link' onClick={()=>onSelect({traitType, value: ALL_TRAIT_VALUE})}>\n                <div style={{position:'relative'}}>\n                    <div style={{\n                        position:'absolute',\n                        right: 4,\n                        }}>\n                        {isAllSelected ? '':'❌'}\n                    </div>\n                    {traitType}\n                </div>\n            </div>\n            <div className='nft-trait-values'>\n                {traitTypeTokenLookups.map(x=>(\n                    <React.Fragment key={`${x.trait_type}:${x.trait_value}`}>\n                        <div className={`nft-trait-value link ${selectedTraitValue === x.trait_value ? 'nft-trait-value-selected':''}`} onClick={()=>onSelect({traitType: x.trait_type, value: x.trait_value})}>\n                            <BarGraphCell ratio={x.ratio} text={x.trait_value} textRight={isAllSelected || selectedTraitValue === x.trait_value ? `${x.tokenIds.filter(t=>tokenIds.has(t)).length}`:``}/>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport { ThemeSubscription } from \"../helpers/theme\";\n\nexport const Layout = ({ children }:{ children:JSX.Element }) => {\n\n    const [isDark, setIsDark] = useState(true);\n\n    useEffect(()=>{\n        ThemeSubscription.subscribe(setIsDark);\n    },[]);\n\n    return (\n        <>\n            <div style={{display: 'flex', flexDirection:'row', padding: 8}}>\n                <a href=\"/\">\n                 <img style={{width: 256}}\n                    src={isDark ? '/media/logo_white.png' : '/media/logo_black.png'} alt='site-logo'/>\n                </a>\n            </div>\n            <div>\n                {children}\n            </div>\n        </>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { INftProjectMetadata, INftProjectsDocument } from '@crypto-dev-amigos/common';\nimport { LazyList } from './lazy-list';\nimport { NftLoader } from './nft-loader';\nimport { getIpfsUrl, getProjectsJsonUrl } from '../helpers/urls';\nimport { LazyComponent } from './lazy-component';\nimport { changeTheme } from '../helpers/theme';\nimport { SmartImage } from './smart-image';\nimport { LoadingIndicator } from './icons';\nimport { ProjectInfo } from './nft-project';\n\nexport const NftProjectsLoader = (props:{ })=>{\n\n    const [projects, setProjectRarity] = useState(null as null | INftProjectsDocument);\n\n    useEffect(() => {\n        (async () => {\n            const nftProjectUrl = getProjectsJsonUrl();\n            // console.log('projectKey', { projectKey, nftProjectUrl });\n            const result = await fetch(nftProjectUrl);\n            const obj = await result.json() as INftProjectsDocument;\n            setProjectRarity(obj);\n        })();\n    }, []);\n\nreturn (\n    <>\n        {!projects && <LoadingIndicator/>}\n        {projects && <NftProjects projects={projects} />}\n    </>\n);\n};\n\nexport const NftProjects = ({ projects }:{ projects: INftProjectsDocument }) => {\n    return (\n        <>\n            <div className='project-list'>\n                {projects && (\n                    <LazyList items={projects.projects} getItemKey={x=>`${x.projectKey}`} ItemComponent={({item})=>(\n                        <NftProjectCard projectKey={item.projectKey} project={item.projectMetadata} />\n                    )}/>\n                )}\n            </div>\n        </>\n    );\n};\n\n\nexport const NftProjectCard = ({projectKey, project}:{ projectKey:string, project: INftProjectMetadata }) => {\n\n    const targetId =  projectKey + '_theme';\n    useEffect(()=>{\n        changeTheme(project.theme, `#${targetId}`);\n    }, [targetId]);\n\n    return (\n        <>\n            <div id={targetId} className={'nft-card link'} onClick={()=>window.location.href=`${projectKey}`}>\n                <ProjectInfo project={project}/>\n            </div>\n        </>\n    );\n};\n\n","import { NftProjectsLoader } from \"./nft-projects\";\n\nexport const HomePage = ()=>{\n\n    return (\n        <div style={{display:'flex', flexDirection:'column', justifyContent:'space-between', alignItems:'center', minHeight:'calc(100vh - 100px)'}}>\n            <div style={{width: '100%'}}>\n            <NftProjectsLoader/>\n            </div>\n            <CharacterArea/>\n        </div>\n    );\n};\n\n\nconst CharacterArea = (props:{})=>{\n    return (\n        <>\n            <div style={{display:'flex', flexDirection:'row'}}>\n                <Character punkId={4856} name={'@NotChris'}/>\n                <Character punkId={578} name={'@RickLove'} link={`https://twitter.com/Rick_00_Love`}/>\n            </div>\n        </>\n    );\n}\n\nconst Character = ({punkId, name, link}:{punkId:number, name:string, link?:string})=>{\n    return (\n        <>\n            <div className={link ? 'link':''}\n                style={{padding: 8}}\n                onClick={(e)=>{\n                    if(!link){ return; } \n                    e.preventDefault();\n                    e.stopPropagation();\n                    window.open(link);\n                }}>\n                <div>\n                    <img style={{width: 150, height:150, objectFit:'contain'}} \n                        src={`/media/punk${punkId}.png`} alt=\"punk\"/>\n                </div>\n                <div>\n                    {!link && name}\n                    {!!link && <a href={link}>{`${name}`}</a>}\n                </div>\n                <div>\n                    {`OneDayPunk #${punkId}`}\n                </div>\n            </div>\n        </>\n    );\n}","import React from 'react';\nimport './CssReset.css';\nimport './App.css';\nimport { NftLoader } from './components/nft-loader';\nimport { NftProjectLoader } from './components/nft-project';\nimport { NftProjectsLoader } from './components/nft-projects';\nimport { Layout } from './components/layout';\nimport { HomePage } from './components/home-page';\n\nfunction App() {\n\n return (\n  <Layout>\n      <Routing/>\n  </Layout>\n );\n}\n\nconst Routing = (props:{}) => {\n  const route = window.location.pathname.split('/');\n  const projectKey = route[1] ?? undefined;\n  const tokenId = route[2] ?? undefined;\n\n  console.log('route', {route, projectKey, tokenId});\n\n  if(projectKey && tokenId){\n    return (\n      <div className=\"App\">\n        <div className='nft-container-single'>\n          <NftLoader projectKey={projectKey} tokenId={tokenId}/>\n        </div>\n      </div>\n    );\n  }\n\n  if(projectKey){\n    return (\n      <div className=\"App\">\n        <NftProjectLoader projectKey={projectKey}/>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n        <HomePage/>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}