{"version":3,"sources":["components/bar-graph.tsx","components/icons.tsx","helpers/urls.ts","helpers/delay.ts","components/lazy-component.tsx","components/smart-image.tsx","components/nft-card.tsx","helpers/open-sea.ts","helpers/theme.ts","components/nft-loader.tsx","components/lazy-list.tsx","components/types.ts","components/trait-graph.tsx","helpers/colors.ts","helpers/trait-sort.ts","components/trait-grid-image.tsx","helpers/trait-colors.ts","components/nft-project.tsx","components/layout.tsx","components/nft-projects.tsx","components/home-page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BarGraphCell","ratio","text","textRight","className","style","position","zIndex","width","toFixed","height","display","flexDirection","opacity","flex","Icon","icon","LoadingIndicator","IconLink","url","iconUrl","href","fontSize","src","alt","getProjectJsonUrl","projectKey","getNftJsonUrl","tokenId","getIpfsUrl","nftUrl","replace","delay","timeout","a","Promise","resolve","setTimeout","Date","now","globalRelayoutCallbacks","activeNotifyRelayoutId","notifyRelayout","notifyRelayoutId","i","length","callback","window","addEventListener","IntersectionObserver","observe","document","getElementsByTagName","nextLazyComponentId","LazyComponent","children","onLoad","placeholderRef","useRef","useState","shouldLoad","setShouldLoad","isDoneRef","useEffect","current","placeholder","iRelayout","push","divRect","getBoundingClientRect","screenBottom","scrollY","innerHeight","top","unsub","ref","minWidth","minHeight","SmartImage","loading","setLoading","error","setError","attemptsRef","timeoutRef","onLoadStart","clearTimeout","Math","pow","onError","Price","price","symbol","toLowerCase","color","priceUsd","NftCardPlaceholder","props","NftCard","nft","onSelect","rarityScore","rank","lastSell","listing","name","justifyContent","external_url","openSeaLink","image","textAlign","attributeRarities","map","x","Fragment","trait_type","ratioScore","onClick","e","preventDefault","stopPropagation","traitType","value","fontWeight","getOpenSeaData","contractAddress","openSeaUrl","fetch","result","json","changeTheme","projectTheme","target","toCssName","key","t","theme","Object","keys","filter","join","isDark","themeTagId","existing","getElementById","remove","newElement","createElement","innerHTML","id","head","appendChild","ThemeSubscription","_callbacks","subscribe","forEach","NftLoader","setNft","obj","sort","b","localeCompare","nftProjectUrl","project","contract","openSeaData","lastSellPrice","parseFloat","last_sale","total_price","payment_token","decimals","lastSellSymbol","lastSellPriceUsd","usd_price","order","orders","side","listingPrice","current_price","payment_token_contract","listingSymbol","listingPriceUsd","undefined","permalink","LazyList","items","getItemKey","ItemComponent","loadCount","setLoadCount","lastLoadCount","itemsLoaded","slice","index","s","onLoaded","item","ALL_TRAIT_VALUE","TraitGraph","projectRarity","tokenIds","selected","svgRef","redrawKey","JSON","stringify","rareCount","setRareCount","isExpanded","setIsExpanded","svg","isMounted","redraw","drawSankeyDiagram","nodes","links","calculateData","data","nodeIdsMap","onSelectNodeIds","nodeIds","get","console","log","trait_value","redrawOuter","removeEventListener","size","heightRatio","max","min","NumberButton","paddingLeft","v","background","borderRadius","traitValuesRaw","tokenLookups","traitValuesNotAll","tokensInSelectionSet","Set","has","getAllPairs","allPairs","lastDelay","xArray","j","y","l","r","intersectCount","unionCount","temp","allPairsSortedByRarist","pairsUsed","traitValuesUsed","flatMap","nodeIdsReverseMap","Map","getNodeId","traitTypesMap","nodeId","traitTypeIndex","traitTypeCount","traitValue","tokenCountInSelected","tokenCount","tokenCountAll","tokenCountUsed","source","svgElement","dataInput","uom","clientWidth","clientHeight","colors","d3","selectAll","d3Sankey","nodeWidth","nodePadding","extent","sankey","n","xDiff","x0","x1","wTarget","wDiff","link","append","attr","node","enter","on","d","trim","node2","y0","y1","colorFormat","hsl","hNorm","h","sNorm","lNorm","floor","g","hueToRgbNorm","p","q","rNorm","gNorm","bNorm","sortTraits","traits","traitSort","TraitGridImage","canvasRef","setTraitSort","canvas","unsubscribe","drawNftTraitGridImage","selectedTokenIds","SortButton","tokenIdsToUse","traitsRaw","traitsToUse","hRaw","wRaw","wClient","parentElement","xScale","yScale","w","hContent","ctx","getContext","clearRect","imageData","getImageData","tokenIdRankMap","rankIndex","trait","getTraitColor","tokenIdsByRank","yOffset","drawHeaderBar","xs","ys","putImageData","handleInput","rect","getClientRects","canvasXRatio","clientX","bottom","traitIndex","clientY","right","left","handleMouse","ev","handleTouch","touches","NftProjectLoader","setProjectRarity","loaded","loadProjectRarityData","doc","tokenLookupsSource","traitTypes","traitTypeTokenLookups","includedTokenIds","missingTokenIds","unshift","NftProject","setTokenIds","nftListRef","traitFilters","args","selections","tokenIdsIfAll","traitKeyIfAll","entries","traitKey","tokenLookup","find","tokenIdsSelected","onReset","marginTop","location","ProjectInfo","objectFit","external_link","opensea","openSea","twitter","discord","k","includes","description","TraitTypesList","values","some","isExpandedAll","TraitValuesList","selectedTraitItem","isAllSelected","traitTypeTokenLookupsWithCount","isSelected","count","Layout","setIsDark","padding","NftProjectsLoader","projects","NftProjects","projectMetadata","NftProjectCard","targetId","HomePage","alignItems","CharacterArea","punkId","Character","open","Routing","route","pathname","split","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6d883cdf.chunk.js","sourcesContent":["import React, { useRef } from 'react';\n\nexport const BarGraphCell = ({ ratio, text, textRight }:{ ratio: number, text?: string, textRight?: string })=>{\n    return (\n        <div className='bar-graph' style={{position:'relative'}}>\n            <div className='bar-graph-background' style={{\n                position:'absolute',\n                zIndex: 0,\n                width: `${(100 * ratio).toFixed(0)}%`,\n                height: '100%',\n                }}>\n            </div>\n            <div style={{position:'relative', zIndex: 10, display:'flex', flexDirection:'row'}}>\n                {/* Used to center main text */}\n                <div className='bar-graph-text-right' style={{opacity:0}}>\n                    {textRight}\n                </div>\n                <div className='bar-graph-text' style={{flex:1}}>\n                    {text ?? `${(100 * ratio).toFixed(2)}%`}\n                </div>\n                <div className='bar-graph-text-right' style={{}}>\n                    {textRight}\n                </div>\n            </div>\n            \n        </div>\n    );\n}","import React from 'react';\nimport { AiFillTwitterCircle } from \"react-icons/ai\";\nimport { FaDiscord, FaEthereum } from \"react-icons/fa\";\nimport { HiLink } from \"react-icons/hi\";\nimport { VscChevronDown, VscChevronRight, VscLoading } from \"react-icons/vsc\";\n\nexport type IconName = \n| 'twitter'\n| 'discord'\n| 'link'\n| 'eth'\n| 'collapsed'\n| 'expanded'\n| 'loading'\n;\nexport const Icon = ({icon}:{icon:IconName})=>{\n    switch(icon){\n        case 'twitter': return <AiFillTwitterCircle/>;\n        case 'discord': return <FaDiscord/>;\n        case 'link': return <HiLink/>;\n        case 'eth': return <FaEthereum/>;\n        case 'collapsed': return <VscChevronRight/>;\n        case 'expanded': return <VscChevronDown/>;\n        case 'loading': return <VscLoading/>;\n    }\n\n    return <></>;\n};\n\nexport const LoadingIndicator = ()=>{\n    return (\n        <div className='loading'>\n            <Icon icon='loading'/>\n        </div>\n    );\n};\n\nexport const IconLink = ({url, icon, iconUrl}: {url?:string, icon?: IconName, iconUrl?:string})=>{\n    return (\n        <>\n            {!!url && <a href={url}\n                style={{display:'inline-block', width: 32, height: 32, fontSize: 20 }}\n            >\n                {!!icon && <Icon icon={icon}/>}\n                {!!iconUrl && <img style={{width:20, height: 20}} src={iconUrl} alt='link'/>}\n            </a>}\n        </>\n    );\n};","export const getProjectsJsonUrl = ()=>`/data/projects.json`;\nexport const getProjectJsonUrl = (projectKey:string)=>`/data/${projectKey}/project.json`;\nexport const getNftJsonUrl = (projectKey:string, tokenId: string)=>`/data/${projectKey}/${tokenId}.json`;\nexport const getIpfsUrl = (nftUrl:string) => nftUrl.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/');\nexport const getOpenSeaTokenUrl = (contractAddress:string, tokenId:string) => `https://opensea.io/assets/${contractAddress}/${tokenId}`;\n\n","export async function delay(timeout: number): Promise<void> {\n    return await new Promise((resolve) => {\n        setTimeout(resolve, timeout);\n    });\n}","import React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport { delay } from '../helpers/delay';\n\nconst debug_timeStart = Date.now();\nconst globalRelayoutCallbacks = [] as (null | (()=>boolean))[];\nlet activeNotifyRelayoutId = 0;\nconst notifyRelayout = async () => {\n\n    // Cancellable\n    activeNotifyRelayoutId++;\n    let notifyRelayoutId = activeNotifyRelayoutId;\n    await delay(100);\n\n    // console.log('LazyComponent notifyRelayout', {notifyRelayoutId});\n    \n    let i = 0;\n    while(i < globalRelayoutCallbacks.length){\n        const callback = globalRelayoutCallbacks[i];\n        if(callback && callback()){\n            await delay(25);\n        }\n        i++;\n\n        if(notifyRelayoutId !== activeNotifyRelayoutId){\n            // Cancelled\n            // console.log('LazyComponent notifyRelayout - Cancelled', {notifyRelayoutId});\n            return;\n        }\n    }\n};\nwindow.addEventListener('scroll', notifyRelayout);\nwindow.addEventListener('load', ()=>{\n    const observer = new IntersectionObserver(notifyRelayout);\n    // Observe any element\n    observer.observe(document.getElementsByTagName('body')[0]);\n});\n\nlet nextLazyComponentId = 0;\n\nexport const LazyComponent = ({ \n    children,\n    onLoad,\n}:{ \n    children: ReactNode,\n    onLoad?: () => void,\n })=>{\n\n    const placeholderRef = useRef(null as null | HTMLDivElement);\n    const [shouldLoad, setShouldLoad] = useState(false);\n    const isDoneRef = useRef(false);\n    const lazyComponentId = useRef(nextLazyComponentId++);\n\n    useEffect(() => {\n        // console.log('LazyComponent useEffect', {lazyComponentId});\n\n        if( !placeholderRef.current ){ \n            // console.log('LazyComponent useEffect - SKIP placeholderRef is missing', {lazyComponentId});\n            return; \n        }\n        const placeholder = placeholderRef.current;\n        isDoneRef.current = false;\n      \n        const loadIfVisible = () => {\n            // console.log('LazyComponent useEffect:loadIfVisible', {lazyComponentId});\n\n            if( !placeholderRef.current ){ \n                // console.log('LazyComponent useEffect:loadIfVisible - SKIP placeholderRef is missing', {lazyComponentId});\n                return false; \n            }\n            if( isDoneRef.current ){ \n                // console.log('LazyComponent useEffect:loadIfVisible - SKIP isDone', {lazyComponentId});\n                return false; \n            }\n\n            const divRect = placeholder.getBoundingClientRect();\n            const screenBottom = window.scrollY + window.innerHeight;\n            const isOnScreen = divRect.top < screenBottom;\n\n            if(!isOnScreen){ return false; }\n            // console.log(`isOnScreen`,{ time: Date.now() - debug_timeStart, iRelayout, divRect, screenBottom, isOnScreen });\n            \n            isDoneRef.current = true;\n            unsub();\n            setShouldLoad(true);\n            notifyRelayout();\n            onLoad?.();\n\n            return true;\n        };\n\n        const iRelayout = globalRelayoutCallbacks.length;\n        globalRelayoutCallbacks.push(loadIfVisible);\n        const unsub = ()=>{\n            globalRelayoutCallbacks[iRelayout] = null;\n        };\n\n        notifyRelayout();\n\n        return () => {\n            isDoneRef.current = true;\n            unsub();\n        };\n    },[children, onLoad]);\n\n    // console.log('LazyComponent RENDER', {lazyComponentId});\n    return (\n        <>  \n            {!shouldLoad && <div ref={placeholderRef} style={{minWidth: 100, minHeight: 100}}/>}\n            {shouldLoad && children}\n        </>\n    );\n};","import React, { CSSProperties, useEffect, useRef, useState } from \"react\";\r\nimport { getIpfsUrl } from \"../helpers/urls\";\r\nimport { LoadingIndicator } from \"./icons\";\r\nimport { LazyComponent } from \"./lazy-component\";\r\n\r\nexport const SmartImage = ({src, alt, style}:{src:undefined |null|string, alt: string, style?: CSSProperties})=>{\r\n\r\n    const MAX_ATTEMPTS = 5;\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const attemptsRef = useRef(1);\r\n\r\n    const timeoutRef = useRef(0 as unknown as ReturnType<typeof setTimeout>);\r\n\r\n    const onRetry = () => {\r\n        clearTimeout(timeoutRef.current);\r\n        if(attemptsRef.current > MAX_ATTEMPTS){ return; }\r\n    \r\n        setError(true);\r\n        onLoadStart();\r\n    };\r\n    const onLoadStart = () => {\r\n        clearTimeout(timeoutRef.current);\r\n        if(attemptsRef.current > MAX_ATTEMPTS){ return; }\r\n\r\n        timeoutRef.current = setTimeout(()=>{\r\n            attemptsRef.current++;\r\n            setError(false);\r\n        }, Math.pow(2, attemptsRef.current) * 1000);\r\n    };\r\n    const onLoad = () => {\r\n        clearTimeout(timeoutRef.current);\r\n        setLoading(false);\r\n    };\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            clearTimeout(timeoutRef.current);\r\n        };\r\n    },[]);\r\n\r\n    if(!src){ return <></>; }\r\n    return (\r\n        <>\r\n            <LazyComponent>\r\n                {loading && (<LoadingIndicator/>)}\r\n                {!error && (\r\n                    <img key={attemptsRef.current} alt={alt} style={style} src={getIpfsUrl(src)} onLoadStart={onLoadStart} onLoad={onLoad} onError={onRetry}/>\r\n                )}\r\n            </LazyComponent>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport { INftRarity } from '@crypto-dev-amigos/common';\nimport { LazyComponent } from './lazy-component';\nimport { getIpfsUrl } from '../helpers/urls';\nimport { BarGraphCell } from './bar-graph';\nimport { Icon, IconLink, LoadingIndicator } from './icons';\nimport { SmartImage } from './smart-image';\nimport { OnSelectTraitValue } from './types';\n\nexport type INftRarityWithExtra = INftRarity & {\n    openSeaLink?: string;\n    lastSell?: {\n        price: number;\n        symbol?: string;\n        priceUsd?: number;\n    },\n    listing?: {\n        price: number;\n        symbol?: string;\n        priceUsd?: number;\n    },\n};\n\nconst Price = ({price}:{price?: {\n    price: number;\n    symbol?: string;\n    priceUsd?: number;\n}}) => {\n    \n    if(!price){ return <span>{'-?-'}</span>}\n\n    return (\n        <>\n            <div style={{display:'inline-block', minWidth: 100}}>\n                <span>{price.price.toFixed(3)}</span>\n                {price.symbol && (\n                    price.symbol.toLowerCase() === 'eth' ? <span className='black-or-white'><Icon icon='eth'/></span> \n                    : price.symbol.toLowerCase() === 'weth' ? <span style={{color: '#ca477b'}}><Icon icon='eth'/></span> \n                    : <span>{price.symbol}</span>\n                )}\n            </div>\n            <div style={{display:'inline-block', minWidth: 100}}>\n                <span>{price.priceUsd ? ` $${price.priceUsd.toFixed(2)}`:''}</span>\n            </div>\n        </>\n    );\n}\n\nexport const NftCardPlaceholder = (props:{})=>{\n    return (\n        <>\n            <div className={'nft-card'}>\n                <LoadingIndicator/>\n                <div style={{height: 300}}></div>\n            </div>\n        </>\n    );\n}\n\nexport const NftCard = ({nft, onSelect}:{ nft: INftRarityWithExtra, onSelect?: OnSelectTraitValue }) => {\n\n    return (\n        <>\n            <div className={'nft-card'}>\n                <div className='nft-card-header'>\n                    <div className='nft-card-header-item'>\n                        <div className='nft-card-header-item-label'>Rarity Score:</div>\n                        <div className='nft-card-header-item-value'>{nft.rarityScore.toFixed(2)}</div>\n                    </div>\n                    <div className='nft-card-header-item'>\n                        <div className='nft-card-header-item-label'>Rank:</div>\n                        <div className='nft-card-header-item-value'>{nft.rank}</div>\n                    </div>\n                    <div className='nft-card-header-item-2'>\n                        <div className='nft-card-header-item-label'>Last Sell:</div>\n                        <div className='nft-card-header-item-value'><Price price={nft.lastSell}/></div>\n                    </div>\n                    <div className='nft-card-header-item-2'>\n                        <div className='nft-card-header-item-label'>Listing:</div>\n                        <div className='nft-card-header-item-value'><Price price={nft.listing}/></div>\n                    </div>\n                    <div className='nft-card-header-title'>{nft.nft.name}</div>\n                </div>\n\n                <div className='nft-card-content'>\n                    <div style={{display:'flex', flexDirection:'row', justifyContent:'flex-end'}}>\n                        <IconLink url={nft.nft.external_url} icon='link'/>\n                        <IconLink url={nft.openSeaLink} iconUrl='/media/opensea.png'/>\n                    </div>\n                    <div className={'nft-card-image'}>\n                        <SmartImage alt='nft' src={nft.nft.image}/>\n                    </div>\n\n                    <div className='nft-card-stats'>\n                        <div className='nft-card-stats-row nft-card-stats-title' style={{ fontSize:`0.8em` }}>\n                            <div className='nft-card-stats-cell' style={{textAlign:'left'}}>{'Trait'}</div>\n                            <div className='nft-card-stats-cell' style={{textAlign:'right'}}>{'Rarity Score'}</div>\n                        </div>\n                        <div className='nft-card-stats-row nft-card-stats-title' style={{ fontSize:`0.8em` }}>\n                            <div className='nft-card-stats-cell' style={{textAlign:'right'}}>{''}</div>\n                            <div className='nft-card-stats-cell'>{'Commonality'}</div>\n                        </div>\n                        {nft.attributeRarities.map(x=>(\n                            <React.Fragment key={x.trait_type}>\n                                <div className='nft-card-stats-row'>\n                                    <div className='nft-card-stats-cell nft-card-stats-title' style={{textAlign:'left'}}>{x.trait_type}</div>\n                                    <div className='nft-card-stats-cell numeric-value' style={{textAlign:'right'}}>{`${x.ratioScore.toFixed(2)}`}</div>  \n                                </div>\n                                <div className='nft-card-stats-row'>\n                                    <div className={`nft-card-stats-cell ${onSelect?'link':''}`} style={{textAlign:'right'}}>\n                                        <span \n                                            onClick={(e) => {\n                                                if(!onSelect){return;}\n\n                                                e.preventDefault();\n                                                e.stopPropagation();\n                                                onSelect({traitType: x.trait_type, value: x.value});\n                                            }}\n                                            style={x.value !== \"[Missing]\"?{fontWeight:'bold'}:{}}>{x.value}</span>\n                                    </div>\n                                    <div className='nft-card-stats-cell numeric-value'>\n                                        <BarGraphCell ratio={x.ratio} />\n                                    </div>                              \n                                </div>\n                            </React.Fragment>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\n","export const getOpenSeaData = async ({contractAddress, tokenId}: {contractAddress:string, tokenId:string})=>{\n\n    const openSeaUrl = `https://api.opensea.io/api/v1/asset/${contractAddress}/${tokenId}/`;\n    const result = await fetch(openSeaUrl);\n    const json = await result.json() as {\n        token_id: string,\n        num_sales?: number,    \n        last_sale?: {\n            /** BigNumber */\n            total_price: string,\n            payment_token: {\n                symbol: string,\n                decimals: number,\n                usd_price: string,\n            },\n        },\n        orders?: {\n            current_price: string,\n            payment_token_contract: {\n                symbol: string,\n                decimals: number,\n                usd_price: string,\n            },\n            /** \n             * - 1 for buy orders \n             * - 1 for sell orders \n             * */\n            side: 0|1,\n        }[],\n        /** Open sea link */\n        permalink:string,\n    };\n\n    return json;\n};\n","import { IProjectTheme } from \"@crypto-dev-amigos/common\";\n\nexport const changeTheme = (projectTheme: undefined | null | IProjectTheme, target = ':root') => {\n\n    const toCssName = (key: string)=> key.replace(/[A-Z]/g,(x)=>'-' + x.toLowerCase());\n\n    const t = projectTheme ?? {} as Record<string,string | boolean>;\n    const theme = `\n${target} {\n    ${Object.keys(t)\n        .filter(key => t[key] && typeof t[key] === 'string')\n        .map(key => `\n    --${toCssName(key)}: ${t[key]};`).join('')}\n\n    --black-or-white: ${projectTheme?.isDark ? '#FFFFFF' : '#000000'}\n}\n    `;\n\n    const themeTagId = '__themeStyleOverride' + target;\n\n    const existing = document.getElementById(themeTagId);\n    existing?.remove();\n    \n    const newElement = document.createElement('style');\n    newElement.innerHTML = theme;\n    newElement.id = themeTagId;\n    document.head.appendChild(newElement);\n\n    ThemeSubscription.changeTheme(projectTheme?.isDark ?? true);\n};\n\n\ntype Callback = (isDark:boolean) => void;\nconst _callbacks = [] as Callback[];\nexport const ThemeSubscription = {\n    subscribe: (callback: Callback) => {\n        _callbacks.push(callback);\n    },\n    changeTheme: (isDark:boolean)=>{_callbacks.forEach(x=>x(isDark))},\n};","import React, { useEffect, useState } from 'react';\nimport { INftProjectRarityDocument, INftRarityDocument } from '@crypto-dev-amigos/common';\nimport { INftRarityWithExtra, NftCard, NftCardPlaceholder } from './nft-card';\nimport { getNftJsonUrl, getProjectJsonUrl } from '../helpers/urls';\nimport { getOpenSeaData } from '../helpers/open-sea';\nimport { changeTheme } from '../helpers/theme';\nimport { OnSelectTraitValue } from './types';\n\nexport const NftLoader = ({ \n    projectKey, tokenId, contractAddress, onSelect\n }:{ \n     projectKey: string, tokenId: string, contractAddress?: string, onSelect?: OnSelectTraitValue\n})=>{\n\n    const [nft, setNft] = useState(null as null | INftRarityWithExtra);\n\n    useEffect(() => {\n        (async () => {\n            const nftUrl = getNftJsonUrl(projectKey, tokenId);\n            // console.log('NftLoader', {nftUrl});\n            const result = await fetch(nftUrl);\n            const obj = await result.json() as INftRarityDocument;\n\n            obj.attributeRarities.sort((a,b)=>a.trait_type.localeCompare(b.trait_type));\n            setNft(obj);\n\n            // Try to get contractAddress from project data\n            if(!contractAddress){\n                // Load from project\n                const nftProjectUrl = getProjectJsonUrl(projectKey);\n                // console.log('projectKey', { projectKey, nftProjectUrl });\n                const result = await fetch(nftProjectUrl);\n                const obj = await result.json() as INftProjectRarityDocument;\n                contractAddress = obj.project.contract;\n\n                changeTheme(obj.project.theme);\n\n                if(!contractAddress){ return; }\n            }\n\n            // Load open sea data\n            const openSeaData = await getOpenSeaData({ contractAddress, tokenId });\n            const lastSellPrice = parseFloat(openSeaData.last_sale?.total_price ?? '0') / Math.pow(10, openSeaData.last_sale?.payment_token.decimals ?? 0);\n            const lastSellSymbol = openSeaData.last_sale?.payment_token.symbol;\n            const lastSellPriceUsd = lastSellPrice * parseFloat(openSeaData.last_sale?.payment_token.usd_price ?? '1');\n\n            const order = openSeaData.orders?.filter(x=>x.side===1)?.[0];\n            const listingPrice = parseFloat(order?.current_price ?? '0') / Math.pow(10, order?.payment_token_contract.decimals ?? 0);\n            const listingSymbol =order?.payment_token_contract.symbol;\n            const listingPriceUsd = listingPrice * parseFloat(order?.payment_token_contract.usd_price ?? '1');\n\n            setNft({\n                ...obj, \n                lastSell: openSeaData.last_sale ? {\n                    price: lastSellPrice, \n                    symbol: lastSellSymbol, \n                    priceUsd : lastSellPriceUsd,\n                } : undefined,\n                listing: order ? {\n                    price: listingPrice, \n                    symbol: listingSymbol, \n                    priceUsd : listingPriceUsd,\n                } : undefined,\n                openSeaLink: openSeaData.permalink,\n            })\n\n        })();\n    }, [projectKey, tokenId]);\n\n    // console.log('NftLoader RENDER', {projectKey, tokenId});\n    return (\n        <>\n            {!nft && <NftCardPlaceholder />}\n            {nft && <NftCard nft={nft} onSelect={onSelect}/>}\n        </>\n    );\n};\n\n","import React, { useRef } from 'react';\nimport { useState } from 'react';\nimport { LazyComponent } from './lazy-component';\n\nexport const LazyList = <T extends {}>({\n    items, \n    getItemKey, \n    ItemComponent \n}:{ \n    items:T[], \n    getItemKey:(item:T)=>string, \n    ItemComponent: (props:{item:T}) => JSX.Element,\n})=>{\n\n    const PAGE_SIZE = 12;\n    const NEAR_END_COUNT = 3;\n    const [loadCount, setLoadCount] = useState(PAGE_SIZE);\n    const lastLoadCount = useRef(PAGE_SIZE);\n    lastLoadCount.current = loadCount;\n\n    const onLoaded = (index:number)=>{\n        // Skip if already loaded more\n        if(lastLoadCount.current !== loadCount){ return; }\n\n        // Skip if not near the end\n        if(index + NEAR_END_COUNT < loadCount){ return; }\n\n        // Load more\n        // console.log('# LazyList: loadMore', {loadCount});\n        setLoadCount(s=> s + PAGE_SIZE);\n    }\n\n    const itemsLoaded = items.slice(0, loadCount);\n\n    \n    // console.log('LazyList RENDER', {itemsLength: items.length, loadedLength: itemsLoaded.length});\n    return (\n        <>\n            {itemsLoaded.map((x,index)=>(\n                <React.Fragment key={getItemKey(x)} >\n                    <LazyComponent onLoad={() => onLoaded(index)}>\n                        <ItemComponent item={x}/>\n                    </LazyComponent>\n                </React.Fragment>\n            ))}\n        </>\n    );\n};\n\n","export const ALL_TRAIT_VALUE ='[All]';\r\nexport type TraitFilters = { [traitType: string]: { value:string, tokenIdsIfAll: Set<number> } };\r\nexport type OnSelectTraitValue = (args:{ traitType: string, value: string }) => void;","import { INftProjectRarityDocument } from '@crypto-dev-amigos/common';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { ALL_TRAIT_VALUE, TraitFilters, OnSelectTraitValue } from './types';\r\nimport * as d3 from 'd3';\r\nimport * as d3Sankey from 'd3-sankey';\r\nimport { delay } from '../helpers/delay';\r\nimport { Icon, LoadingIndicator } from './icons';\r\n\r\n\r\nexport const TraitGraph = ({ \r\n    projectKey, projectRarity, tokenIds, selected, onSelect, \r\n }:{ \r\n     projectKey: string, projectRarity: INftProjectRarityDocument, tokenIds: Set<number>, selected: TraitFilters, onSelect:OnSelectTraitValue\r\n}) => {\r\n\r\n    const svgRef = useRef(null as null | SVGSVGElement);\r\n    const redrawKey = projectKey + JSON.stringify(selected);\r\n    const [loading, setLoading] = useState(true);\r\n    const [rareCount, setRareCount] = useState(64);\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(!isExpanded){ return; }\r\n\r\n        const svg = svgRef.current;\r\n        if(!svg){ return; }\r\n\r\n        let isMounted = true;\r\n        let redraw = () => {};\r\n\r\n        (async () => {\r\n            // Blank\r\n            drawSankeyDiagram(svg, {nodes:[], links:[]}, ()=>{});\r\n\r\n            const { data, nodeIdsMap } = await calculateData(projectRarity, tokenIds, selected, rareCount);\r\n            if(!isMounted){ return; }\r\n\r\n            const onSelectNodeIds = (nodeIds:number[]) => {\r\n                const items = nodeIds.map(x=>nodeIdsMap.get(x));\r\n                console.log('onSelect', {nodeIds, items});\r\n                items.forEach(x=>{\r\n                    if(!x){ return; }\r\n                    onSelect({traitType: x.trait_type, value: x.trait_value});\r\n                });\r\n            };\r\n    \r\n            redraw = () => { drawSankeyDiagram(svg, data, onSelectNodeIds); };\r\n            redraw();\r\n            setLoading(false);\r\n        })();\r\n\r\n        setLoading(true);\r\n        const redrawOuter = () => {redraw()};\r\n        window.addEventListener('resize', redrawOuter);\r\n        return () => {\r\n            isMounted = false;\r\n            window.removeEventListener('resize', redrawOuter);\r\n        };\r\n    },[redrawKey, tokenIds.size, rareCount, isExpanded]);\r\n\r\n    const heightRatio = Math.max(0.25,Math.min(0.75,tokenIds.size * 0.1));\r\n\r\n    const NumberButton = ({value}:{value:number})=>{\r\n        return (\r\n            <div className='link' style={{paddingLeft: 8}} \r\n                onClick={(e)=>{ \r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    setRareCount(value);\r\n                }}\r\n            >{value}</div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={{display: 'flex',flexDirection:'row'}}\r\n                onClick={()=>setIsExpanded(s=>!s)}\r\n            >\r\n                <div style={{fontSize: 18}}>\r\n                    {isExpanded ? <Icon icon='expanded'/> : <Icon icon='collapsed'/> }\r\n                </div>\r\n                <div>Rarist Trait Combinations</div>\r\n                <div style={{flex:1}}>{tokenIds.size} NFTs</div>\r\n                {[16,64,256,1024].map((v)=><NumberButton key={v} value={v}/>)}\r\n            </div>\r\n            {isExpanded && (\r\n                <div style={{ background: '#000000', borderRadius: 0 }}>\r\n                    {loading && (<LoadingIndicator/>)}\r\n                    <svg ref={svgRef} style={{width: '100%', minHeight: 600, height: `${(heightRatio*100).toFixed(0)}vh`}}></svg>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst calculateData = async (projectRarity: INftProjectRarityDocument, tokenIds: Set<number>, selected: TraitFilters, rareCount: number) => {\r\n    await delay(10);\r\n    // const selectedNotAll = new Map(Object.entries(selected).filter(([k,x])=>x.value !== ALL_TRAIT_VALUE));\r\n\r\n    const traitValuesRaw = projectRarity.tokenLookups;\r\n    const traitValuesNotAll = traitValuesRaw\r\n        .filter(x => x.trait_value !== ALL_TRAIT_VALUE)\r\n        .map(x=>({\r\n            ...x,\r\n            tokensInSelectionSet: new Set(x.tokenIds.filter(t => tokenIds.has(t))),\r\n        }))\r\n        ;\r\n\r\n    const getAllPairs = async () => {\r\n        const allPairs = [] as {\r\n            l: typeof traitValuesNotAll[number];\r\n            r: typeof traitValuesNotAll[number];\r\n            intersectCount: number;\r\n            unionCount: number;\r\n        }[];\r\n\r\n        let lastDelay = Date.now();\r\n        for(let i = 0; i < traitValuesNotAll.length; i++){\r\n            const x = traitValuesNotAll[i];\r\n            const xArray = [...x.tokensInSelectionSet];\r\n\r\n            for(let j = i + 1; j < traitValuesNotAll.length; j++){\r\n                const y = traitValuesNotAll[j];\r\n                if(x.trait_type === y.trait_type){ continue; }\r\n\r\n                if( Date.now() > lastDelay + 10){\r\n                    console.log('getAllPairs delay');\r\n\r\n                    await delay(0);\r\n                    lastDelay = Date.now();\r\n                }\r\n \r\n                const result = {\r\n                    l:x,\r\n                    r:y,\r\n                    intersectCount: xArray.filter(t => y.tokensInSelectionSet.has(t)).length,\r\n                    unionCount: xArray.filter(t => !y.tokensInSelectionSet.has(t)).length + y.tokensInSelectionSet.size,\r\n                };\r\n\r\n                // Order trait type\r\n                if(result.l.trait_type > result.r.trait_type){\r\n                    const temp = result.l;\r\n                    result.l = result.r;\r\n                    result.r = temp;\r\n                }\r\n\r\n                if(!result.intersectCount){ continue; }\r\n                allPairs.push(result);\r\n            }    \r\n        }\r\n\r\n        return allPairs;\r\n    };\r\n\r\n    const allPairs = await getAllPairs();\r\n\r\n    console.log('allPairs', {allPairs});\r\n\r\n    const allPairsSortedByRarist = allPairs.sort((a,b)=>{\r\n\r\n        if( a.intersectCount !== b.intersectCount){\r\n            return a.intersectCount - b.intersectCount;\r\n        }\r\n\r\n        if( a.unionCount !== b.unionCount ){\r\n            return a.unionCount - b.unionCount;\r\n        }\r\n\r\n        if( a.l.tokenIds.length !== b.l.tokenIds.length ){\r\n            return a.l.tokenIds.length - b.l.tokenIds.length;\r\n        }\r\n\r\n        if( a.l.trait_type !== b.l.trait_type ){\r\n            return a.l.trait_type.localeCompare(b.l.trait_type);\r\n        }\r\n        if( a.l.trait_value !== b.l.trait_value ){\r\n            return a.l.trait_value.localeCompare(b.l.trait_value);\r\n        }\r\n        if( a.r.trait_type !== b.r.trait_type ){\r\n            return a.r.trait_type.localeCompare(b.r.trait_type);\r\n        }\r\n        if( a.r.trait_value !== b.r.trait_value ){\r\n            return a.r.trait_value.localeCompare(b.r.trait_value);\r\n        }\r\n\r\n        return 0;\r\n    });\r\n\r\n    const pairsUsed = allPairsSortedByRarist.slice(0,rareCount);\r\n    const traitValuesUsed = [...new Set(pairsUsed.flatMap(x=>[x.l,x.r]))];\r\n\r\n    const nodeIdsReverseMap = new Map(traitValuesUsed.map((x,i)=>[x,i]));\r\n    const nodeIdsMap = new Map(traitValuesUsed.map((x,i)=>[i,x]));\r\n    const getNodeId = (x: typeof traitValuesUsed[number]) => nodeIdsReverseMap.get(x) ?? 0;\r\n\r\n    const traitTypesMap = new Map(\r\n        [...new Set(traitValuesUsed.map(x=>x.trait_type))].map((x,i)=>[x,i])\r\n    );\r\n\r\n    const data: DataInput = {\r\n        nodes: traitValuesUsed.map(x => ({\r\n            nodeId: getNodeId(x),\r\n            key: `${x.trait_type}:${x.trait_value}`,\r\n            traitTypeIndex: traitTypesMap.get(x.trait_type) ?? 0,\r\n            traitTypeCount: traitTypesMap.size,\r\n            traitType: x.trait_type,\r\n            traitValue: x.trait_value,\r\n            tokenCountInSelected: x.tokensInSelectionSet.size,\r\n            tokenCount: x.tokenIds.length,\r\n            tokenCountAll: projectRarity.tokenLookups.length,\r\n            tokenCountUsed: tokenIds.size,\r\n        })),\r\n        links: pairsUsed.map(x=>{\r\n            return {\r\n                source: getNodeId(x.l),\r\n                target: getNodeId(x.r),\r\n                value: x.intersectCount,\r\n            };\r\n        }),\r\n    };\r\n\r\n    return {\r\n        data,\r\n        nodeIdsMap\r\n    };\r\n};\r\n\r\ntype DataNode = {\r\n    nodeId: number;\r\n    key: string;\r\n    traitTypeIndex: number;\r\n    traitTypeCount: number;\r\n    traitType: string;\r\n    traitValue: string;\r\n    tokenCountInSelected: number;\r\n    tokenCount: number;\r\n    tokenCountAll: number;\r\n    tokenCountUsed: number;\r\n}\r\n\r\ntype DataLink = {\r\n    source: number;\r\n    target: number;\r\n    value: number;\r\n}\r\n\r\ntype DataInput = {\r\n    nodes: DataNode[];\r\n    links: DataLink[];\r\n}\r\n\r\nconst drawSankeyDiagram = (svgElement:SVGGElement, dataInput: DataInput, onSelect:(nodeIds:number[])=>void) => {\r\n\r\n    type SNode = d3Sankey.SankeyNode<DataNode, DataLink>;\r\n    type SLink = d3Sankey.SankeyLink<DataNode, DataLink>;\r\n\r\n    const data = {\r\n        nodes: dataInput.nodes as SNode[],\r\n        links: dataInput.links.map(x=>({\r\n            source: x.source,\r\n            target: x.target,\r\n            value: x.value,\r\n            uom: 'Widget(s)',\r\n        })) as SLink[],\r\n    };\r\n\r\n\r\n    const width = svgElement.clientWidth;\r\n    const height = svgElement.clientHeight;\r\n    const colors = {\r\n        link: \"#FFFFFF\",\r\n        text: \"#FFFFFF\",\r\n        nodeOutline: \"#000000\",\r\n    };\r\n\r\n    const svg = d3.select(svgElement);\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    if( !data.nodes.length ){ return; }\r\n\r\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n    const sankey = d3Sankey.sankey<SNode,SLink>()\r\n        .nodeWidth(15)\r\n        .nodePadding(2)\r\n        .extent([[4, 4], [width - 4, height - 4]]);\r\n    sankey(data);\r\n\r\n    // Override x position\r\n    data.nodes.forEach(n=>{\r\n        const xTarget = (width-8-20) *(n.traitTypeIndex / (n.traitTypeCount-1));\r\n        const xDiff = xTarget - (n.x0??0);\r\n        //console.log('override position', {xTarget, xDiff, x0:n.x0, x1:n.x1, width, traitTypeIndex: n.traitTypeIndex, traitTypeCount: n.traitTypeCount, n});\r\n        n.x0 = xDiff + (n.x0 ?? 0);\r\n        n.x1 = xDiff + (n.x1 ?? 0);\r\n    });\r\n\r\n    // // Override y height\r\n    // data.nodes.forEach(n=>{\r\n    //     const hTarget = (height-8-20) * (n.tokenCountInSelected / n.tokenCountUsed);\r\n    //     const hDiff = hTarget - ((n.y1??0) - (n.y0??0));\r\n    //     console.log('override height', {hTarget, hDiff, x0:n.x0, x1:n.x1, width, traitTypeIndex: n.traitTypeIndex, traitTypeCount: n.traitTypeCount, n});\r\n    //     n.y1 = (n.y1 ?? 0) + hDiff;\r\n    // });\r\n    // Override width\r\n    data.nodes.forEach(n=>{\r\n        const wTarget = Math.max(2,(width-8-20) * (n.tokenCountInSelected / n.tokenCountUsed) / (n.traitTypeCount-1));\r\n        const wDiff = wTarget - ((n.x1??0) - (n.x0??0));\r\n        console.log('override width', {wTarget, wDiff, x0:n.x0, x1:n.x1, width, traitTypeIndex: n.traitTypeIndex, traitTypeCount: n.traitTypeCount, n});\r\n        n.x1 = (n.x1 ?? 0) + wDiff;\r\n    });\r\n    \r\n    // Recalculate y pos\r\n    //sankey.update(data);\r\n    \r\n\r\n    // Draw\r\n    const link = svg.append(\"g\")\r\n        .attr(\"class\", \"links\")\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", colors.link)\r\n        .attr(\"stroke-opacity\", 0.2)\r\n        .selectAll(\"path\");\r\n\r\n    const node = svg.append(\"g\")\r\n        .attr(\"class\", \"nodes\")\r\n        .attr(\"font-family\", \"sans-serif\")\r\n        .attr(\"font-size\", 10)\r\n        .selectAll(\"g\")\r\n        ;\r\n\r\n\r\n    const link2 = link\r\n        .data(data.links)\r\n        .enter().append(\"path\")\r\n        .on('click', (e,d)=>{ console.log('click', {d}); onSelect([(d.source as SNode).nodeId, (d.target as SNode).nodeId]); })\r\n        .attr(\"d\", d3Sankey.sankeyLinkHorizontal())\r\n        .attr(\"stroke-width\", (d) => { return Math.max(1, d.width ?? 1); })\r\n        ;\r\n\r\n    link2.append(\"title\")\r\n        .text((d) => { return `\r\n${(d.source as DataNode)?.key}\r\n& \r\n${(d.target as DataNode)?.key}\r\n\r\n${d.value} NFTs in common`.trim() })\r\n        .attr(\"fill\", colors.text)\r\n        ;\r\n\r\n    const node2 = node\r\n        .data(data.nodes)\r\n        .enter().append(\"g\")\r\n        .on('click' , (e,d)=> { console.log('click', {d}); onSelect([d.nodeId]); })\r\n        ;\r\n\r\n    node2.append(\"rect\")\r\n        .attr(\"x\", (d) => { return d.x0??0; })\r\n        .attr(\"y\", (d) => { return d.y0??0; })\r\n        .attr(\"height\", (d) => { return (d.y1??0) - (d.y0??0); })\r\n        .attr(\"width\", (d) => { return (d.x1??0) -  (d.x0??0); })\r\n        .attr(\"fill\", (d) => { return color(d.key.replace(/ .*/, \"\")); })\r\n        .attr(\"stroke\", colors.nodeOutline)\r\n        ;\r\n\r\n    node2.append(\"text\")\r\n        .attr(\"fill\", colors.text)\r\n        .attr(\"x\", (d) => { return (d.x0??0) - 6; })\r\n        .attr(\"y\", (d) => { return ((d.y1??0) + (d.y0??0)) / 2; })\r\n        .attr(\"dy\", \"0.35em\")\r\n        .attr(\"text-anchor\", \"end\")\r\n        .text(d => `${d.traitType}: ${d.traitValue}`)\r\n        .attr(\"fill\", colors.text)\r\n        .filter((d) => { return (d.x0??0) < width / 2; })\r\n        .attr(\"x\", (d) => { return (d.x1??0) + 6; })\r\n        .attr(\"text-anchor\", \"start\")\r\n        ;\r\n\r\n    node2.append(\"title\")\r\n        .text(d => `${d.traitType}: ${d.traitValue}\\n${d.tokenCountInSelected} NFTs in Selection\\n${d.tokenCount} NFTs Total`)\r\n        .attr(\"fill\", colors.text)\r\n        ;\r\n}\r\n","\r\n/** RGB 8-bit\r\n *\r\n * - r,g,b: [0 - 255]\r\n *\r\n * */\r\n export type RgbColor = { r: number, g: number, b: number };\r\n\r\n /** Hsl float\r\n  *\r\n  * Note: float precision is required to support roundtrip back to rgb without loss\r\n  *\r\n  *  - h: [0.0 - 360.0]\r\n  *  - s: [0.0 - 100.0]\r\n  *  - l: [0.0 - 100.0]\r\n  *\r\n */\r\n export type HslColor = { h: number, s: number, l: number };\r\n \r\n /** RGB => HSL\r\n  * Based on https://en.wikipedia.org/wiki/HSL_and_HSV\r\n  * and https://gist.github.com/mjackson/5311256\r\n  */\r\n const rgbToHsl = ({ r, g, b }: RgbColor): HslColor => {\r\n     const rNorm = Math.max(0, Math.min(1, Math.floor(r) / 255));\r\n     const gNorm = Math.max(0, Math.min(1, Math.floor(g) / 255));\r\n     const bNorm = Math.max(0, Math.min(1, Math.floor(b) / 255));\r\n \r\n     const vMax = Math.max(rNorm, gNorm, bNorm);\r\n     const vMin = Math.min(rNorm, gNorm, bNorm);\r\n     const l = (vMax + vMin) / 2;\r\n \r\n     if (vMax == vMin) {\r\n         // No color\r\n         return {\r\n             h: 0,\r\n             s: 0,\r\n             l: l * 100,\r\n         };\r\n     }\r\n \r\n     /**\r\n      * (V-L) / min(L,1-L)\r\n      */\r\n     const s = (vMax - l) / Math.min(l, 1 - l);\r\n \r\n     const chroma = vMax - vMin;\r\n     let h = 0;\r\n     switch (vMax) {\r\n     /** V===R => 60deg * (0 + (G-B)/C),   0deg + 60deg * x */\r\n     case rNorm: h = (gNorm - bNorm) / chroma + 0; break;\r\n     /** V===G => 60deg * (2 + (B-R)/C), 120deg + 60deg * x */\r\n     case gNorm: h = (bNorm - rNorm) / chroma + 2; break;\r\n     /** V===B => 60deg * (4 + (R-G)/C), 240deg + 60deg * x */\r\n     case bNorm: h = (rNorm - gNorm) / chroma + 4; break;\r\n     }\r\n     // Wrap red (when G<B)\r\n     if (h < 0){ h += 6;}\r\n     // Normalize[0,1]\r\n     h /= 6;\r\n \r\n     return {\r\n         h: h * 360,\r\n         s: s * 100,\r\n         l: l * 100,\r\n     };\r\n };\r\n \r\n /** RGB => HSL\r\n  * Based on https://en.wikipedia.org/wiki/HSL_and_HSV\r\n  * and https://gist.github.com/mjackson/5311256\r\n  */\r\n const hslToRgb = (hsl: HslColor): RgbColor => {\r\n     const hNorm = Math.max(0, Math.min(hsl.h % 360 / 360, 1));\r\n     const sNorm = Math.max(0, Math.min(hsl.s / 100, 1));\r\n     const lNorm = Math.max(0, Math.min(hsl.l / 100, 1));\r\n \r\n     if (sNorm === 0) {\r\n         // No color\r\n         return {\r\n             r: Math.floor(lNorm * 255),\r\n             g: Math.floor(lNorm * 255),\r\n             b: Math.floor(lNorm * 255),\r\n         };\r\n     }\r\n \r\n     const hueToRgbNorm = (p: number, q: number, t: number) => {\r\n         if (t < 0) t += 1;\r\n         if (t > 1) t -= 1;\r\n         if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n         if (t < 1 / 2) return q;\r\n         if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n         return p;\r\n     };\r\n \r\n     const q = lNorm < 0.5 ? lNorm * (1 + sNorm) : lNorm + (1 - lNorm) * sNorm;\r\n     const p = 2 * lNorm - q;\r\n \r\n     const rNorm = hueToRgbNorm(p, q, hNorm + 1 / 3);\r\n     const gNorm = hueToRgbNorm(p, q, hNorm);\r\n     const bNorm = hueToRgbNorm(p, q, hNorm - 1 / 3);\r\n \r\n     return {\r\n         r: Math.floor(rNorm * 255),\r\n         g: Math.floor(gNorm * 255),\r\n         b: Math.floor(bNorm * 255),\r\n     };\r\n };\r\n \r\n \r\n export type RgbHexColor = string & { __type: `#FFFFFF` };\r\n const rgbToRgbHex = ({ r, g, b }: RgbColor): RgbHexColor => {\r\n     return `#${r.toString(16).padStart(2, `0`)}${g.toString(16).padStart(2, `0`)}${b.toString(16).padStart(2, `0`)}` as RgbHexColor;\r\n };\r\n const rgbHexToRgb = (rgbHex: RgbHexColor): RgbColor => {\r\n     const hex = rgbHex.startsWith(`#`) ? rgbHex.substr(1) : rgbHex;\r\n     return {\r\n         r: parseInt(hex.substr(0, 2), 16),\r\n         g: parseInt(hex.substr(2, 2), 16),\r\n         b: parseInt(hex.substr(4, 2), 16),\r\n     };\r\n };\r\n \r\n export const colorFormat = {\r\n     rgbToHsl,\r\n     hslToRgb,\r\n     rgbToRgbHex,\r\n     rgbHexToRgb,\r\n };\r\n ","import { Trait } from \"./types\";\r\n\r\nexport type TraitSortKind = 'rarity' | 'default';\r\nexport const sortTraits = (traits:Trait[], traitSort: TraitSortKind) => {\r\n\r\n    const t = [...traits]\r\n        .sort((a,b) => a.trait_value.localeCompare(b.trait_value))\r\n        .sort((a,b) => a.trait_type.localeCompare(b.trait_type))\r\n        ;\r\n\r\n    if( traitSort === 'rarity'){\r\n        return t.sort((a,b) => a.tokenIds.length - b.tokenIds.length);\r\n    }\r\n\r\n    return t;\r\n};","import { INftProjectRarityDocument } from '@crypto-dev-amigos/common';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { ALL_TRAIT_VALUE, TraitFilters, OnSelectTraitValue } from './types';\r\nimport { Icon, LoadingIndicator } from './icons';\r\nimport { colorFormat } from '../helpers/colors';\r\nimport { getTraitColor } from '../helpers/trait-colors';\r\nimport { sortTraits, TraitSortKind } from '../helpers/trait-sort';\r\n\r\n\r\nexport const TraitGridImage = ({ \r\n    projectKey, projectRarity, tokenIds, selected, onSelect, \r\n }:{ \r\n     projectKey: string, projectRarity: INftProjectRarityDocument, tokenIds: Set<number>, selected: TraitFilters, onSelect:OnSelectTraitValue\r\n}) => {\r\n\r\n    const canvasRef = useRef(null as null | HTMLCanvasElement);\r\n    const redrawKey = projectKey + JSON.stringify(selected);\r\n    const [loading, setLoading] = useState(true);\r\n    const [traitSort, setTraitSort] = useState('default' as TraitSortKind);\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(!isExpanded){ return; }\r\n\r\n        const canvas = canvasRef.current;\r\n        if(!canvas){ return; }\r\n\r\n        let isMounted = true;\r\n        let redraw = () => {};\r\n        let unsubscribe = () => {};\r\n        setLoading(true);\r\n\r\n        (async () => {\r\n            // Blank\r\n            // drawSankeyDiagram(canvas, {nodes:[], links:[]}, ()=>{});\r\n\r\n            // const { data, nodeIdsMap } = await calculateData(projectRarity, tokenIds, selected, rareCount);\r\n            // if(!isMounted){ return; }\r\n\r\n            // const onSelectNodeIds = (nodeIds:number[]) => {\r\n            //     const items = nodeIds.map(x=>nodeIdsMap.get(x));\r\n            //     console.log('onSelect', {nodeIds, items});\r\n            //     items.forEach(x=>{\r\n            //         if(!x){ return; }\r\n            //         onSelect({traitType: x.trait_type, value: x.trait_value});\r\n            //     });\r\n            // };\r\n    \r\n            redraw = () => { \r\n                unsubscribe();\r\n                const result = drawNftTraitGridImage({canvas, projectRarity, selectedTokenIds: tokenIds, traitSort}); \r\n                unsubscribe = result?.unsubscribe ?? (()=>{});\r\n            };\r\n            redraw();\r\n            setLoading(false);\r\n        })();\r\n\r\n        const redrawOuter = () => {redraw()};\r\n        window.addEventListener('resize', redrawOuter);\r\n        return () => {\r\n            isMounted = false;\r\n            window.removeEventListener('resize', redrawOuter);\r\n            unsubscribe();\r\n        };\r\n    },[redrawKey, tokenIds.size, traitSort, isExpanded]);\r\n\r\n    const heightRatio = Math.max(0.25,Math.min(0.75,tokenIds.size * 0.1));\r\n\r\n    const SortButton = ({value}:{value:TraitSortKind})=>{\r\n        return (\r\n            <div className='link' style={{paddingLeft: 8}} \r\n                onClick={(e)=>{ \r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    setTraitSort(value);\r\n                }}\r\n            >{value}</div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={{display: 'flex',flexDirection:'row'}}\r\n                onClick={()=>setIsExpanded(s=>!s)}\r\n            >\r\n                <div style={{fontSize: 18}}>\r\n                    {isExpanded ? <Icon icon='expanded'/> : <Icon icon='collapsed'/> }\r\n                </div>\r\n                <div>Rarity Waterfall: Nft Trait Grid</div>\r\n                <div style={{flex:1}}>{tokenIds.size} NFTs</div>\r\n                {(['rarity','default'] as const).map((v)=><SortButton key={v} value={v}/>)}\r\n            </div>\r\n            {isExpanded && (\r\n                <div style={{ background: '#000000', borderRadius: 0 }}>\r\n                    {loading && (<LoadingIndicator/>)}\r\n                    <canvas ref={canvasRef} style={{width:'100%', minHeight: 100}}></canvas>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst drawNftTraitGridImage = ({\r\n    canvas,\r\n    projectRarity,\r\n    selectedTokenIds,\r\n    traitSort,\r\n}:{ \r\n    canvas:HTMLCanvasElement,\r\n    projectRarity: INftProjectRarityDocument\r\n    selectedTokenIds: Set<number>,\r\n    traitSort:TraitSortKind,\r\n}) => {\r\n    // const tokenIdsToUse = projectRarity.tokenIdsByRank.length;\r\n    const tokenIdsToUse = selectedTokenIds;\r\n    //const traitsToUse = projectRarity.tokenLookups.filter(x=>x.tokenIds.some(t=>selectedTokenIds.has(t)));\r\n    const traitsRaw = projectRarity.tokenLookups\r\n        .filter(x=>x.trait_value!==ALL_TRAIT_VALUE);\r\n        \r\n    const traitsToUse = sortTraits(traitsRaw, traitSort);\r\n\r\n    const hRaw = tokenIdsToUse.size;\r\n    const wRaw = traitsToUse.length;\r\n\r\n    const wClient = canvas.parentElement?.clientWidth;\r\n    const hClient = 100;\r\n    if(!wClient||!hClient){return;}\r\n\r\n    const xScale = Math.max(1,Math.floor(wClient / wRaw));\r\n    const yScale = Math.max(1,Math.floor(hClient / hRaw));\r\n\r\n    const HEADER_SIZE = 8;\r\n    const BLANK_SIZE = 4;\r\n    \r\n    const w = wRaw * xScale;\r\n    const hContent = hRaw * yScale;\r\n    const h = hContent + 2 * (HEADER_SIZE+BLANK_SIZE);\r\n\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    const ctx = canvas.getContext('2d');\r\n    if(!ctx){return;}\r\n\r\n    ctx.clearRect(0,0,w,h);\r\n    const imageData = ctx.getImageData(0,0,w,h);\r\n    const data = imageData.data;\r\n\r\n\r\n    const tokenIdRankMap = new Map([...tokenIdsToUse].map((tokenId,rankIndex)=>[tokenId,rankIndex]));\r\n\r\n\r\n    for(let x = 0; x < traitsToUse.length; x++){\r\n        const trait = traitsToUse[x];\r\n\r\n        const {r,g,b} = getTraitColor(trait, traitsToUse, projectRarity.tokenIdsByRank.length);\r\n        let yOffset = 0;\r\n\r\n        const drawHeaderBar = ()=>{\r\n            for(let y = 0; y < HEADER_SIZE; y++){\r\n                for( let i = 0; i < xScale; i++){\r\n                    for( let j = 0; j < 1; j++){\r\n                        const xs = x*xScale+i;\r\n                        const ys = y*1     +j + yOffset;\r\n                        data[(xs+ys*w) * 4 + 0] = r;\r\n                        data[(xs+ys*w) * 4 + 1] = g;\r\n                        data[(xs+ys*w) * 4 + 2] = b;\r\n                        data[(xs+ys*w) * 4 + 3] = 255;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n   \r\n        drawHeaderBar(); \r\n        yOffset+=HEADER_SIZE;\r\n        yOffset+=BLANK_SIZE;\r\n\r\n        for( const tokenId of trait.tokenIds){\r\n            const y = tokenIdRankMap.get(tokenId);\r\n            if(y==null){ continue; }\r\n\r\n            for( let i = 0; i < xScale; i++){\r\n                for( let j = 0; j < yScale; j++){\r\n                    const xs = x*xScale+i;\r\n                    const ys = y*yScale+j + yOffset;\r\n                    data[(xs+ys*w) * 4 + 0] = r;\r\n                    data[(xs+ys*w) * 4 + 1] = g;\r\n                    data[(xs+ys*w) * 4 + 2] = b;\r\n                    data[(xs+ys*w) * 4 + 3] = 255;\r\n                }\r\n            }\r\n        }\r\n        yOffset+=hContent;\r\n        yOffset+=BLANK_SIZE;\r\n        drawHeaderBar(); \r\n        yOffset+=HEADER_SIZE;\r\n    }\r\n\r\n    ctx.putImageData(imageData,0,0);\r\n\r\n    // Events\r\n\r\n    const handleInput = (position: {clientX:number, clientY:number}) => {\r\n        const rect = canvas.getClientRects()[0];\r\n        const canvasXRatio = (position.clientX - rect.top) / (rect.bottom-rect.top);\r\n        const canvasYRatio = (position.clientY - rect.right) / (rect.bottom-rect.left);\r\n        \r\n        const traitIndex = Math.floor(canvasXRatio * traitsToUse.length);\r\n        const trait = traitsToUse[traitIndex];\r\n\r\n        // TODO: Finish handling inputs\r\n    };\r\n\r\n    const handleMouse = (ev: MouseEvent) => handleInput(ev);\r\n    const handleTouch = (ev: TouchEvent) => handleInput(ev.touches[0]);\r\n    window.addEventListener('mousemove', handleMouse);\r\n    window.addEventListener('touchstart', handleTouch);\r\n    window.addEventListener('touchmove', handleTouch);\r\n\r\n    return {\r\n        unsubscribe: ()=>{\r\n            window.removeEventListener('mousemove', handleMouse);\r\n            window.removeEventListener('touchstart', handleTouch);  \r\n            window.removeEventListener('touchmove', handleTouch);\r\n        }\r\n    };\r\n};","import { colorFormat } from \"./colors\";\r\nimport { Trait } from \"./types\";\r\n\r\nexport const getTraitColor = (trait: Trait, traits:Trait[], tokenCount:number) => {\r\n\r\n    const traitTypeIndexMap = new Map([...new Set(traits.map(x=>x.trait_type))].sort().map((x,i)=>[x,i]));\r\n    const traitIndex = traitTypeIndexMap.get(trait.trait_type) ?? 0;\r\n\r\n    const h = traitIndex * 71 % 360;\r\n    const s = 100 - Math.floor(75 * trait.tokenIds.length / tokenCount);\r\n    const l = 50;\r\n    return colorFormat.hslToRgb({h,s,l});\r\n};","import React, { useEffect, useRef, useState } from 'react';\nimport type { INftProjectMetadataDocument, INftProjectRarityDocument, INftRarity, MISSING_ATTRIBUTE_VALUE as MISSING_ATTRIBUTE_VALUE_TYPE } from '@crypto-dev-amigos/common';\nimport { NftCard } from './nft-card';\nimport { LazyList } from './lazy-list';\nimport { NftLoader } from './nft-loader';\nimport { getIpfsUrl, getNftJsonUrl, getProjectJsonUrl } from '../helpers/urls';\nimport { BarGraphCell } from './bar-graph';\nimport { changeTheme } from '../helpers/theme';\nimport { Icon, IconLink, IconName, LoadingIndicator } from './icons';\nimport { SmartImage } from './smart-image';\nimport { ALL_TRAIT_VALUE, OnSelectTraitValue, TraitFilters } from './types';\nimport { TraitGraph } from './trait-graph';\nimport { TraitGridImage } from './trait-grid-image';\nimport { sortTraits } from '../helpers/trait-sort';\n\n// Workaround for importing implementation\nconst MISSING_ATTRIBUTE_VALUE: typeof MISSING_ATTRIBUTE_VALUE_TYPE = `[Missing]`;\n\nexport const NftProjectLoader = ({ projectKey }:{ projectKey:string })=>{\n\n    const [projectRarity, setProjectRarity] = useState(null as null | INftProjectRarityData);\n\n    useEffect(() => {\n        (async () => {\n            const nftProjectUrl = getProjectJsonUrl(projectKey);\n            // console.log('projectKey', { projectKey, nftProjectUrl });\n            const result = await fetch(nftProjectUrl);\n            const obj = await result.json() as INftProjectRarityDocument;\n\n            changeTheme(obj.project.theme);\n\n            const loaded = loadProjectRarityData(obj);\n\n            setProjectRarity(loaded);\n        })();\n    }, [projectKey]);\n\nreturn (\n    <>\n        {!projectRarity && <LoadingIndicator/>}\n        {projectRarity && <NftProject projectKey={projectKey} projectRarity={projectRarity} />}\n    </>\n);\n};\n\ntype INftProjectRarityData = {\n    project: INftProjectMetadataDocument;\n    tokenIdsByRank: INftProjectRarityDocument['tokenIdsByRank']\n    tokenLookups: (INftProjectRarityDocument['tokenLookups'][number] & {\n        ratio: number;\n    })[],\n    traitTypes: string[];\n    contractAddress?: string;\n};\nconst loadProjectRarityData = (doc: INftProjectRarityDocument): INftProjectRarityData => {\n    const tokenLookupsSource = sortTraits(doc.tokenLookups,'default');\n\n    const traitTypes = [...new Set(tokenLookupsSource.map(x=>x.trait_type))];\n\n    // Add [Missing] and [All]\n    traitTypes.forEach(traitType => {\n        const traitTypeTokenLookups = tokenLookupsSource\n            .filter(x=>x.trait_type === traitType);\n\n        const includedTokenIds = new Set(traitTypeTokenLookups.flatMap(x=>x.tokenIds));\n        const missingTokenIds = doc.tokenIdsByRank.filter(t => !includedTokenIds.has(t));\n        // Missing\n        if(missingTokenIds.length){\n            tokenLookupsSource.unshift({\n                trait_type: traitType,\n                trait_value: MISSING_ATTRIBUTE_VALUE,\n                tokenIds: missingTokenIds\n            });\n        }\n\n        // All\n        tokenLookupsSource.unshift({\n            trait_type: traitType,\n            trait_value: ALL_TRAIT_VALUE,\n            tokenIds: doc.tokenIdsByRank,\n        });\n    });\n\n    const tokenLookups = tokenLookupsSource.map(x=>({\n        ...x,\n        ratio: x.tokenIds.length / doc.tokenIdsByRank.length,\n    }));\n\n    // Sort tokenLookups\n    tokenLookups.sort();\n\n    return {\n        project: doc.project,\n        contractAddress: doc.project.contract,\n        tokenIdsByRank: doc.tokenIdsByRank,\n        tokenLookups,\n        traitTypes,\n    };\n};\n\nexport const NftProject = ({ projectKey, projectRarity }:{ projectKey:string, projectRarity:INftProjectRarityData}) => {\n\n    const [tokenIds, setTokenIds] = useState(new Set(projectRarity.tokenIdsByRank));\n    const nftListRef = useRef(null as null | HTMLDivElement)\n    const traitFilters = useRef({} as TraitFilters);\n\n    const onSelect = (args: { traitType: string, value: string }) => {\n        const selections = traitFilters.current;\n        selections[args.traitType] = {value: args.value, tokenIdsIfAll: new Set([]) };\n\n        // Calculate tokenIdsIfAll\n        Object.keys(selections).forEach(traitKeyIfAll => {\n            let tokenIdsIfAll = new Set(projectRarity.tokenIdsByRank);\n            Object.entries(selections).forEach(([traitKey,traitValue])=>{\n                const tokenLookup = projectRarity.tokenLookups.find(v => v.trait_type === traitKey && v.trait_value === traitValue.value);\n                if(!tokenLookup){ return; }\n                if(traitKey === traitKeyIfAll){ return; }\n    \n                tokenIdsIfAll = new Set(tokenLookup.tokenIds.filter(t => tokenIdsIfAll.has(t) ));\n            });\n            selections[traitKeyIfAll].tokenIdsIfAll = tokenIdsIfAll;\n        });\n\n        let tokenIdsSelected = new Set(projectRarity.tokenIdsByRank);\n        Object.entries(selections).forEach(([traitKey,traitValue])=>{\n            const tokenLookup = projectRarity.tokenLookups.find(v => v.trait_type === traitKey && v.trait_value === traitValue.value);\n            if(!tokenLookup){ return; }\n\n            tokenIdsSelected = new Set(tokenLookup.tokenIds.filter(t => tokenIdsSelected.has(t) ));\n        });\n\n        setTokenIds(tokenIdsSelected);\n        // nftListRef.current?.scrollIntoView({behavior:'smooth'});\n    };\n    const onReset = () => {\n        traitFilters.current = {};\n        setTokenIds(new Set(projectRarity.tokenIdsByRank));\n    };\n\n    return (\n        <>\n            <div className='panel-container'>\n                <div className='panel-project-info'>\n                    <ProjectInfo project={projectRarity.project}/>\n                </div>\n                <div className='panel-trait-types'>\n                    <TraitTypesList projectRarity={projectRarity} tokenIds={tokenIds} selected={traitFilters.current} onSelect={onSelect} onReset={onReset}/>\n                </div>\n                <div className='panel-nft-list'>\n                    <div style={{marginTop: 8}}>Analysis</div>\n                    <div>\n                        <TraitGraph projectKey={projectKey} projectRarity={projectRarity} tokenIds={tokenIds} selected={traitFilters.current} onSelect={onSelect}/>\n                    </div>\n                    <div>\n                        <TraitGridImage projectKey={projectKey} projectRarity={projectRarity} tokenIds={tokenIds} selected={traitFilters.current} onSelect={onSelect}/>\n                    </div>\n                    <div style={{marginTop: 32}}>Nfts</div>\n                    <div className='nft-list' ref={nftListRef}>\n                        {projectRarity && (\n                            <LazyList items={[...tokenIds]} getItemKey={x=>`${x}`} ItemComponent={({item})=>(\n                                <div\n                                    className='link'\n                                    onClick={()=>window.location.href=`${projectKey}/${item}`}\n                                >\n                                    <NftLoader projectKey={projectKey} tokenId={`${item}`} contractAddress={projectRarity.contractAddress} onSelect={onSelect} />\n                                </div>\n                            )}/>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport const ProjectInfo = ({project}:{ project:INftProjectMetadataDocument})=>{\n    return (\n        <>\n            <div className='project-info'>\n                <div style={{}}>\n                    <SmartImage alt='project' src={project.image} style={{objectFit:'contain', width: 150}}/>\n                </div>\n                <div style={{}}>\n                    <div style={{display:'flex', flexDirection:'row', justifyContent:'flex-end'}}>\n                        <IconLink url={project.external_link} icon='link'/>\n                        <IconLink url={project.links?.opensea} iconUrl='/media/opensea.png'/>\n                        <IconLink url={project.links?.openSea} iconUrl='/media/opensea.png'/>\n                        <IconLink url={project.links?.twitter} icon='twitter'/>\n                        <IconLink url={project.links?.discord} icon='discord'/>\n                        {Object.entries(project.links??{})\n                            .filter(([k])=> !'opensea openSea discord twitter'.includes(k))\n                            .map(([k,v])=>(\n                                <IconLink key={k} url={v} icon='link'/>\n                            ))}\n                    </div>\n                    <div className='project-info-title'>{project.name}</div>\n                    <div className='project-info-description'>{project.description}</div>\n                    {!!project.external_link && (\n                        <div className='project-info-link'>\n                            <a href={getIpfsUrl(project.external_link)}>{project.external_link}</a>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport const TraitTypesList = ({ \n    projectRarity, tokenIds, selected, onSelect, onReset\n}:{ \n    projectRarity:INftProjectRarityData, tokenIds: Set<number>, \n    selected:TraitFilters, \n    onSelect: OnSelectTraitValue,\n    onReset: () => void,\n})=>{\n    const [isExpanded, setIsExpanded] = useState(true);\n   \n    return (\n        <>\n            <div className='nft-trait-types-header'>\n                <div className='nft-trait-types-header-expandable link' onClick={()=>setIsExpanded(s=>!s)}>\n                    <div style={{position:'relative'}}>\n                        <div style={{\n                            position:'absolute',\n                            left: 4,\n                            fontSize: 18\n                            }}>\n                            {isExpanded ? <Icon icon='expanded'/> : <Icon icon='collapsed'/> }\n                        </div>\n                        Trait Filters \n                    </div>\n                </div>\n                <div className='nft-trait-types-header-simple'>\n                    <div>Trait Filters</div>\n                </div>\n            </div>\n                <div className='nft-trait-type-header link' onClick={onReset}>\n                    <div style={{position:'relative'}}>\n                        {Object.values(selected).some(x => x.value !== ALL_TRAIT_VALUE) && (\n                            <>\n                                <div style={{\n                                    position:'absolute',\n                                    right: 4,\n                                    }}>\n                                    {'❌'}\n                                </div>\n                                <span>Reset</span>\n                            </>\n                        )}\n                        <span>&nbsp;</span>\n                    </div>\n                </div>\n            <div className='nft-trait-types'>\n                {projectRarity.traitTypes.map(x=>(\n                    <React.Fragment key={x}>\n                        <TraitValuesList traitType={x} projectRarity={projectRarity} \n                            isExpandedAll={isExpanded}\n                            tokenIds={tokenIds} selected={selected} onSelect={onSelect} />\n                    </React.Fragment>\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport const TraitValuesList = ({ \n    traitType, projectRarity, \n    isExpandedAll,\n    tokenIds, selected, onSelect\n}:{ \n     traitType: string, projectRarity:INftProjectRarityData, \n     isExpandedAll: boolean,\n     tokenIds: Set<number>, selected:TraitFilters, onSelect: OnSelectTraitValue\n})=>{\n   \n    const [isExpanded, setIsExpanded] = useState(isExpandedAll);\n    const toggleIsExpanded = ()=>{setIsExpanded(s=>!s)};\n    useEffect(()=>{\n        setIsExpanded(isExpandedAll);\n    },[isExpandedAll]);\n\n    const traitTypeTokenLookups = projectRarity.tokenLookups\n        .filter(x=>x.trait_type === traitType);\n   \n    const selectedTraitItem = selected[traitType] ?? {\n        value: ALL_TRAIT_VALUE,\n        tokenIdsIfAll: tokenIds,\n    };\n    const isAllSelected = selectedTraitItem.value === ALL_TRAIT_VALUE;\n    console.log('TraitValuesList', {isAllSelected, selectedTraitItem});\n\n    const traitTypeTokenLookupsWithCount = traitTypeTokenLookups.map(x=>({\n        x, \n        isSelected: selectedTraitItem.value === x.trait_value,\n        count: x.tokenIds.filter(t => (selectedTraitItem.tokenIdsIfAll??tokenIds).has(t)).length\n    }));\n\n    return (\n        <div className='nft-trait-type'>\n            <div className='nft-trait-type-header link' onClick={()=>toggleIsExpanded()}>\n                <div style={{position:'relative'}}>\n                    <div style={{\n                            position:'absolute',\n                            left: 4,\n                            fontSize: 18\n                            }}>\n                            {isExpanded ? <Icon icon='expanded'/> : <Icon icon='collapsed'/> }\n                    </div>\n                    {!isAllSelected && (\n                        <div style={{\n                            position:'absolute',\n                            right: 4,\n                            }}\n                            onClick={(e)=>{ \n                                e.preventDefault();\n                                e.stopPropagation();\n                                onSelect({traitType, value: ALL_TRAIT_VALUE});\n                            }}\n                        >\n                            {'❌'}\n                        </div>\n                    )}\n                    {traitType}\n                </div>\n                {!isExpanded && (\n                    <div className='nft-trait-value'>\n                        {selectedTraitItem.value}\n                    </div>\n                )}\n            </div>\n            {isExpanded && (\n                <div className='nft-trait-values'>\n                    {traitTypeTokenLookupsWithCount\n                    .filter(({count,isSelected})=>count||isSelected)\n                    .map(({x,count,isSelected})=>(\n                        <React.Fragment key={`${x.trait_type}:${x.trait_value}`}>\n                            <div className={`nft-trait-value link ${isSelected ? 'nft-trait-value-selected':''}`} onClick={()=>onSelect({traitType: x.trait_type, value: x.trait_value})}>\n                                <BarGraphCell ratio={x.ratio} text={x.trait_value} textRight={`${count}`}/>\n                            </div>\n                        </React.Fragment>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport { ThemeSubscription } from \"../helpers/theme\";\n\nexport const Layout = ({ children }:{ children:JSX.Element }) => {\n\n    const [isDark, setIsDark] = useState(true);\n\n    useEffect(()=>{\n        ThemeSubscription.subscribe(setIsDark);\n    },[]);\n\n    return (\n        <>\n            <div style={{display: 'flex', flexDirection:'row', padding: 8}}>\n                <a href=\"/\">\n                 <img style={{width: 256}}\n                    src={isDark ? '/media/logo_white.png' : '/media/logo_black.png'} alt='site-logo'/>\n                </a>\n            </div>\n            <div>\n                {children}\n            </div>\n        </>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { INftProjectMetadata, INftProjectsDocument } from '@crypto-dev-amigos/common';\nimport { LazyList } from './lazy-list';\nimport { NftLoader } from './nft-loader';\nimport { getIpfsUrl, getProjectsJsonUrl } from '../helpers/urls';\nimport { LazyComponent } from './lazy-component';\nimport { changeTheme } from '../helpers/theme';\nimport { SmartImage } from './smart-image';\nimport { LoadingIndicator } from './icons';\nimport { ProjectInfo } from './nft-project';\n\nexport const NftProjectsLoader = (props:{ })=>{\n\n    const [projects, setProjectRarity] = useState(null as null | INftProjectsDocument);\n\n    useEffect(() => {\n        (async () => {\n            const nftProjectUrl = getProjectsJsonUrl();\n            // console.log('projectKey', { projectKey, nftProjectUrl });\n            const result = await fetch(nftProjectUrl);\n            const obj = await result.json() as INftProjectsDocument;\n            setProjectRarity(obj);\n        })();\n    }, []);\n\nreturn (\n    <>\n        {!projects && <LoadingIndicator/>}\n        {projects && <NftProjects projects={projects} />}\n    </>\n);\n};\n\nexport const NftProjects = ({ projects }:{ projects: INftProjectsDocument }) => {\n    return (\n        <>\n            <div className='project-list'>\n                {projects && (\n                    <LazyList items={projects.projects} getItemKey={x=>`${x.projectKey}`} ItemComponent={({item})=>(\n                        <NftProjectCard projectKey={item.projectKey} project={item.projectMetadata} />\n                    )}/>\n                )}\n            </div>\n        </>\n    );\n};\n\n\nexport const NftProjectCard = ({projectKey, project}:{ projectKey:string, project: INftProjectMetadata }) => {\n\n    const targetId =  projectKey + '_theme';\n    useEffect(()=>{\n        changeTheme(project.theme, `#${targetId}`);\n    }, [targetId]);\n\n    return (\n        <>\n            <div id={targetId} className={'nft-card link'} \n                style={{position:'relative'}} \n                onClick={()=>window.location.href=`${projectKey}`}\n            >\n                {/* Disable Links */}\n                <div style={{position:'absolute', top:0, bottom:0, left:0, right: 0, opacity: 0}}></div>\n                <ProjectInfo project={project}/>\n            </div>\n        </>\n    );\n};\n\n","import { NftProjectsLoader } from \"./nft-projects\";\n\nexport const HomePage = ()=>{\n\n    return (\n        <div style={{display:'flex', flexDirection:'column', justifyContent:'space-between', alignItems:'center', minHeight:'calc(100vh - 100px)'}}>\n            <div style={{width: '100%'}}>\n            <NftProjectsLoader/>\n            </div>\n            <CharacterArea/>\n        </div>\n    );\n};\n\n\nconst CharacterArea = (props:{})=>{\n    return (\n        <>\n            <div style={{display:'flex', flexDirection:'row'}}>\n                <Character punkId={4856} name={'@NotChris'}/>\n                <Character punkId={578} name={'@RickLove'} link={`https://twitter.com/Rick_00_Love`}/>\n            </div>\n        </>\n    );\n}\n\nconst Character = ({punkId, name, link}:{punkId:number, name:string, link?:string})=>{\n    return (\n        <>\n            <div className={link ? 'link':''}\n                style={{padding: 8}}\n                onClick={(e)=>{\n                    if(!link){ return; } \n                    e.preventDefault();\n                    e.stopPropagation();\n                    window.open(link);\n                }}>\n                <div>\n                    <img style={{width: 150, height:150, objectFit:'contain'}} \n                        src={`/media/punk${punkId}.png`} alt=\"punk\"/>\n                </div>\n                <div>\n                    {!link && name}\n                    {!!link && <a href={link}>{`${name}`}</a>}\n                </div>\n                <div>\n                    {`OneDayPunk #${punkId}`}\n                </div>\n            </div>\n        </>\n    );\n}","import React from 'react';\nimport './CssReset.css';\nimport './App.css';\nimport { NftLoader } from './components/nft-loader';\nimport { NftProjectLoader } from './components/nft-project';\nimport { NftProjectsLoader } from './components/nft-projects';\nimport { Layout } from './components/layout';\nimport { HomePage } from './components/home-page';\n\nfunction App() {\n\n return (\n  <Layout>\n      <Routing/>\n  </Layout>\n );\n}\n\nconst Routing = (props:{}) => {\n  const route = window.location.pathname.split('/');\n  const projectKey = route[1] ?? undefined;\n  const tokenId = route[2] ?? undefined;\n\n  console.log('route', {route, projectKey, tokenId});\n\n  if(projectKey && tokenId){\n    return (\n      <div className=\"App\">\n        <div className='nft-container-single'>\n          <NftLoader projectKey={projectKey} tokenId={tokenId}/>\n        </div>\n      </div>\n    );\n  }\n\n  if(projectKey){\n    return (\n      <div className=\"App\">\n        <NftProjectLoader projectKey={projectKey}/>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n        <HomePage/>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}