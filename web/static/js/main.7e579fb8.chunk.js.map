{"version":3,"sources":["helpers/delay.ts","components/lazy-component.tsx","helpers/urls.ts","components/bar-graph.tsx","components/icons.tsx","components/nft-card.tsx","helpers/open-sea.ts","components/nft-loader.tsx","components/lazy-list.tsx","helpers/theme.ts","components/nft-project.tsx","components/layout.tsx","components/nft-projects.tsx","components/home-page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["delay","timeout","a","Promise","resolve","setTimeout","globalRelayoutCallbacks","Date","now","activeNotifyRelayoutId","notifyRelayout","notifyRelayoutId","i","length","callback","window","addEventListener","IntersectionObserver","observe","document","getElementsByTagName","nextLazyComponentId","LazyComponent","children","onLoad","placeholderRef","useRef","useState","shouldLoad","setShouldLoad","isDoneRef","useEffect","current","placeholder","iRelayout","push","divRect","getBoundingClientRect","screenBottom","scrollY","innerHeight","top","unsub","ref","style","minWidth","minHeight","getProjectJsonUrl","projectKey","getNftJsonUrl","tokenId","getIpfsUrl","nftUrl","replace","BarGraphCell","ratio","text","textRight","position","className","zIndex","width","toFixed","height","display","flexDirection","opacity","flex","Icon","icon","IconLink","url","iconUrl","href","fontSize","src","alt","formatPrice","x","price","symbol","priceUsd","NftCardPlaceholder","props","NftCard","nft","name","rarityScore","listing","lastSell","justifyContent","external_url","openSeaLink","image","textAlign","attributeRarities","map","Fragment","trait_type","ratioScore","value","fontWeight","getOpenSeaData","contractAddress","openSeaUrl","fetch","result","json","NftLoader","setNft","obj","sort","b","localeCompare","nftProjectUrl","project","contract","openSeaData","lastSellPrice","parseFloat","last_sale","total_price","Math","pow","payment_token","decimals","lastSellSymbol","lastSellPriceUsd","usd_price","order","orders","listingPrice","current_price","payment_token_contract","listingSymbol","listingPriceUsd","undefined","permalink","LazyList","items","getItemKey","ItemComponent","loadCount","setLoadCount","lastLoadCount","itemsLoaded","slice","index","s","onLoaded","item","changeTheme","projectTheme","t","theme","Object","keys","filter","key","toLowerCase","toCssName","join","themeTagId","existing","getElementById","remove","newElement","createElement","innerHTML","id","head","appendChild","ThemeSubscription","isDark","_callbacks","subscribe","forEach","NftProjectLoader","projectRarity","setProjectRarity","loaded","loadProjectRarityData","ALL_TRAIT_VALUE","doc","traitTypes","Set","tokenLookups","traitType","traitTypeTokenLookups","includedTokenIds","flatMap","tokenIds","missingTokenIds","tokenIdsByRank","has","unshift","trait_value","NftProject","setTokenIds","nftListRef","traitFilters","selected","onSelect","args","tokenIdsSelected","entries","traitKey","traitValue","tokenLookup","find","v","onClick","location","ProjectInfo","alignItems","objectFit","external_link","links","opensea","openSea","twitter","discord","k","includes","description","TraitTypesList","isExpanded","setIsExpanded","left","TraitValuesList","tokenIdsOfAll","selectedTraitValue","isAllSelected","tokens","right","Layout","setIsDark","padding","NftProjectsLoader","projects","NftProjects","projectMetadata","NftProjectCard","HomePage","CharacterArea","punkId","link","Character","Routing","route","pathname","split","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7e579fb8.chunk.js","sourcesContent":["export async function delay(timeout: number): Promise<void> {\n    return await new Promise((resolve) => {\n        setTimeout(resolve, timeout);\n    });\n}","import React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport { delay } from '../helpers/delay';\n\nconst debug_timeStart = Date.now();\nconst globalRelayoutCallbacks = [] as (null | (()=>boolean))[];\nlet activeNotifyRelayoutId = 0;\nconst notifyRelayout = async () => {\n\n    // Cancellable\n    activeNotifyRelayoutId++;\n    let notifyRelayoutId = activeNotifyRelayoutId;\n    await delay(100);\n\n    // console.log('LazyComponent notifyRelayout', {notifyRelayoutId});\n    \n    let i = 0;\n    while(i < globalRelayoutCallbacks.length){\n        const callback = globalRelayoutCallbacks[i];\n        if(callback && callback()){\n            await delay(25);\n        }\n        i++;\n\n        if(notifyRelayoutId !== activeNotifyRelayoutId){\n            // Cancelled\n            // console.log('LazyComponent notifyRelayout - Cancelled', {notifyRelayoutId});\n            return;\n        }\n    }\n};\nwindow.addEventListener('scroll', notifyRelayout);\nwindow.addEventListener('load', ()=>{\n    const observer = new IntersectionObserver(notifyRelayout);\n    // Observe any element\n    observer.observe(document.getElementsByTagName('body')[0]);\n});\n\nlet nextLazyComponentId = 0;\n\nexport const LazyComponent = ({ \n    children,\n    onLoad,\n}:{ \n    children: ReactNode,\n    onLoad?: () => void,\n })=>{\n\n    const placeholderRef = useRef(null as null | HTMLDivElement);\n    const [shouldLoad, setShouldLoad] = useState(false);\n    const isDoneRef = useRef(false);\n    const lazyComponentId = useRef(nextLazyComponentId++);\n\n    useEffect(() => {\n        // console.log('LazyComponent useEffect', {lazyComponentId});\n\n        if( !placeholderRef.current ){ \n            // console.log('LazyComponent useEffect - SKIP placeholderRef is missing', {lazyComponentId});\n            return; \n        }\n        const placeholder = placeholderRef.current;\n        isDoneRef.current = false;\n      \n        const loadIfVisible = () => {\n            // console.log('LazyComponent useEffect:loadIfVisible', {lazyComponentId});\n\n            if( !placeholderRef.current ){ \n                // console.log('LazyComponent useEffect:loadIfVisible - SKIP placeholderRef is missing', {lazyComponentId});\n                return false; \n            }\n            if( isDoneRef.current ){ \n                // console.log('LazyComponent useEffect:loadIfVisible - SKIP isDone', {lazyComponentId});\n                return false; \n            }\n\n            const divRect = placeholder.getBoundingClientRect();\n            const screenBottom = window.scrollY + window.innerHeight;\n            const isOnScreen = divRect.top < screenBottom;\n\n            if(!isOnScreen){ return false; }\n            // console.log(`isOnScreen`,{ time: Date.now() - debug_timeStart, iRelayout, divRect, screenBottom, isOnScreen });\n            \n            isDoneRef.current = true;\n            unsub();\n            setShouldLoad(true);\n            notifyRelayout();\n            onLoad?.();\n\n            return true;\n        };\n\n        const iRelayout = globalRelayoutCallbacks.length;\n        globalRelayoutCallbacks.push(loadIfVisible);\n        const unsub = ()=>{\n            globalRelayoutCallbacks[iRelayout] = null;\n        };\n\n        notifyRelayout();\n\n        return () => {\n            isDoneRef.current = true;\n            unsub();\n        };\n    },[children, onLoad]);\n\n    // console.log('LazyComponent RENDER', {lazyComponentId});\n    return (\n        <>  \n            {!shouldLoad && <div ref={placeholderRef} style={{minWidth: 100, minHeight: 100}}/>}\n            {shouldLoad && children}\n        </>\n    );\n};","export const getProjectsJsonUrl = ()=>`/data/projects.json`;\nexport const getProjectJsonUrl = (projectKey:string)=>`/data/${projectKey}/project.json`;\nexport const getNftJsonUrl = (projectKey:string, tokenId: string)=>`/data/${projectKey}/${tokenId}.json`;\nexport const getIpfsUrl = (nftUrl:string) => nftUrl.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/');\nexport const getOpenSeaTokenUrl = (contractAddress:string, tokenId:string) => `https://opensea.io/assets/${contractAddress}/${tokenId}`;\n\n","import React, { useRef } from 'react';\n\nexport const BarGraphCell = ({ ratio, text, textRight }:{ ratio: number, text?: string, textRight?: string })=>{\n    return (\n        <div style={{position:'relative'}}>\n            <div className='bar-background' style={{\n                position:'absolute',\n                zIndex: 0,\n                width: `${(100 * ratio).toFixed(0)}%`,\n                height: '100%',\n                }}>\n            </div>\n            <div style={{position:'relative', zIndex: 10, display:'flex', flexDirection:'row'}}>\n                {/* Used to center main text */}\n                <div className='bar-text' style={{opacity:0}}>\n                    {textRight}\n                </div>\n                <div className='bar-text' style={{flex:1}}>\n                    {text ?? `${(100 * ratio).toFixed(2)}%`}\n                </div>\n                <div className='bar-text' style={{}}>\n                    {textRight}\n                </div>\n            </div>\n            \n        </div>\n    );\n}","import React from 'react';\r\nimport { AiFillTwitterCircle } from \"react-icons/ai\";\r\nimport { FaDiscord, FaEthereum } from \"react-icons/fa\";\r\nimport { HiLink } from \"react-icons/hi\";\r\nimport { VscChevronDown, VscChevronRight } from \"react-icons/vsc\";\r\n\r\nexport type IconName = \r\n| 'twitter'\r\n| 'discord'\r\n| 'link'\r\n| 'eth'\r\n| 'collapsed'\r\n| 'expanded'\r\n;\r\nexport const Icon = ({icon}:{icon:IconName})=>{\r\n    switch(icon){\r\n        case 'twitter': return <AiFillTwitterCircle/>;\r\n        case 'discord': return <FaDiscord/>;\r\n        case 'link': return <HiLink/>;\r\n        case 'eth': return <FaEthereum/>;\r\n        case 'collapsed': return <VscChevronRight/>;\r\n        case 'expanded': return <VscChevronDown/>;\r\n    }\r\n\r\n    return <></>;\r\n};\r\n\r\nexport const IconLink = ({url, icon, iconUrl}: {url?:string, icon?: IconName, iconUrl?:string})=>{\r\n    return (\r\n        <>\r\n            {!!url && <a href={url}\r\n                style={{display:'inline-block', width: 32, height: 32, fontSize: 20 }}\r\n            >\r\n                {!!icon && <Icon icon={icon}/>}\r\n                {!!iconUrl && <img style={{width:20, height: 20}} src={iconUrl} alt='link'/>}\r\n            </a>}\r\n        </>\r\n    );\r\n};","import React from 'react';\nimport { INftRarity } from '@crypto-dev-amigos/common';\nimport { LazyComponent } from './lazy-component';\nimport { getIpfsUrl } from '../helpers/urls';\nimport { BarGraphCell } from './bar-graph';\nimport { IconLink } from './icons';\n\nexport type INftRarityWithExtra = INftRarity & {\n    openSeaLink?: string;\n    lastSell?: {\n        price: number;\n        symbol?: string;\n        priceUsd?: number;\n    },\n    listing?: {\n        price: number;\n        symbol?: string;\n        priceUsd?: number;\n    },\n};\n\nconst formatPrice = (x?: {\n    price: number;\n    symbol?: string;\n    priceUsd?: number;\n}) => x ? `${x.price.toFixed(3)}${x.symbol??''}${x.priceUsd ? ` $${x.priceUsd.toFixed(2)}`:''}` : ' -?- '\n\nexport const NftCardPlaceholder = (props:{})=>{\n    return (\n        <>\n            <div className={'nft-card'}>\n                <div style={{height: 300}}>Loading...</div>\n            </div>\n        </>\n    );\n}\n\nexport const NftCard = ({nft}:{ nft: INftRarityWithExtra }) => {\n\n    return (\n        <>\n            <div className={'nft-card'}>\n                <div><b>{nft.nft.name}</b></div>\n                <div><b>Rarity Score:</b> {nft.rarityScore.toFixed(2)}</div>\n                <div><b>Listing:</b> {formatPrice(nft.listing)}</div>\n                <div><b>Last Sell:</b> {formatPrice(nft.lastSell)}</div>\n\n                <div style={{display:'flex', flexDirection:'row', justifyContent:'flex-end'}}>\n                    <IconLink url={nft.nft.external_url} icon='link'/>\n                    <IconLink url={nft.openSeaLink} iconUrl='/media/opensea.png'/>\n                </div>\n                <div className={'nft-card-image'}>\n                    <LazyComponent>\n                        <img alt='nft' src={getIpfsUrl(nft.nft.image)}/>\n                    </LazyComponent>\n                </div>\n\n                <div className='nft-card-stats'>\n                    <div className='nft-card-stats-row nft-card-stats-title' style={{ fontSize:`0.8em` }}>\n                        <div className='nft-card-stats-cell' style={{textAlign:'left'}}>{'Trait'}</div>\n                        <div className='nft-card-stats-cell' style={{textAlign:'right'}}>{'Rarity Score'}</div>\n                    </div>\n                    <div className='nft-card-stats-row nft-card-stats-title' style={{ fontSize:`0.8em` }}>\n                        <div className='nft-card-stats-cell' style={{textAlign:'right'}}>{''}</div>\n                        <div className='nft-card-stats-cell'>{'Commonality'}</div>\n                    </div>\n                    {nft.attributeRarities.map(x=>(\n                        <React.Fragment key={x.trait_type}>\n                            <div className='nft-card-stats-row'>\n                                <div className='nft-card-stats-cell nft-card-stats-title' style={{textAlign:'left'}}>{x.trait_type}</div>\n                                <div className='nft-card-stats-cell' style={{textAlign:'right'}}>{`${x.ratioScore.toFixed(2)}`}</div>  \n                            </div>\n                            <div className='nft-card-stats-row'>\n                                <div className='nft-card-stats-cell' style={{textAlign:'right'}}>\n                                    <span style={x.value !== \"[Missing]\"?{fontWeight:'bold'}:{}}>{x.value}</span>\n                                </div>\n                                <div className='nft-card-stats-cell'>\n                                    <BarGraphCell ratio={x.ratio} />\n                                </div>                              \n                            </div>\n                        </React.Fragment>\n                    ))}\n                </div>\n            </div>\n        </>\n    );\n};\n\n","export const getOpenSeaData = async ({contractAddress, tokenId}: {contractAddress:string, tokenId:string})=>{\n\n    const openSeaUrl = `https://api.opensea.io/api/v1/asset/${contractAddress}/${tokenId}/`;\n    const result = await fetch(openSeaUrl);\n    const json = await result.json() as {\n        token_id: string,\n        num_sales?: number,    \n        last_sale?: {\n            /** BigNumber */\n            total_price: string,\n            payment_token: {\n                symbol: string,\n                decimals: number,\n                usd_price: string,\n            },\n        },\n        orders?: {\n            current_price: string,\n            payment_token_contract: {\n                symbol: string,\n                decimals: number,\n                usd_price: string,\n            },\n        }[],\n        /** Open sea link */\n        permalink:string,\n    };\n\n    return json;\n};\n\n/** Example Order:\n * \n * \n */\nconst exampleOrder = {\n    \"created_date\": \"2021-09-16T20:23:50.536372\",\n    \"closing_date\": null,\n    \"closing_extendable\": false,\n    \"expiration_time\": 0,\n    \"listing_time\": 1631823727,\n    \"order_hash\": \"0xbf2f687150ee6444c3a63a8f0fd4c18f65a23ca7efb079f83d91c3572e44ce68\",\n    \"metadata\": {\n        \"asset\": {\n            \"id\": \"4\",\n            \"address\": \"0x5537d90a4a2dc9d9b37bab49b490cf67d4c54e91\"\n        },\n        \"schema\": \"ERC721\"\n    },\n    \"exchange\": \"0x7be8076f4ea4a4ad08075c2508e481d6c946d12b\",\n    \"maker\": {\n        \"user\": {\n            \"username\": \"IP20000\"\n        },\n        \"profile_img_url\": \"https://storage.googleapis.com/opensea-static/opensea-profile/2.png\",\n        \"address\": \"0x351a8d846a01dbd783537df2aae850cf2919abe5\",\n        \"config\": \"\"\n    },\n    \"taker\": {\n        \"user\": {\n            \"username\": \"NullAddress\"\n        },\n        \"profile_img_url\": \"https://storage.googleapis.com/opensea-static/opensea-profile/1.png\",\n        \"address\": \"0x0000000000000000000000000000000000000000\",\n        \"config\": \"\"\n    },\n    \"current_price\": \"150000000000000000\",\n    \"current_bounty\": \"1500000000000000\",\n    \"bounty_multiple\": \"0.01\",\n    \"maker_relayer_fee\": \"750\",\n    \"taker_relayer_fee\": \"0\",\n    \"maker_protocol_fee\": \"0\",\n    \"taker_protocol_fee\": \"0\",\n    \"maker_referrer_fee\": \"0\",\n    \"fee_recipient\": {\n        \"user\": {\n            \"username\": \"OS-Wallet\"\n        },\n        \"profile_img_url\": \"https://storage.googleapis.com/opensea-static/opensea-profile/28.png\",\n        \"address\": \"0x5b3256965e7c3cf26e11fcaf296dfc8807c01073\",\n        \"config\": \"verified\"\n    },\n    \"fee_method\": 1,\n    \"side\": 1,\n    \"sale_kind\": 0,\n    \"target\": \"0x5537d90a4a2dc9d9b37bab49b490cf67d4c54e91\",\n    \"how_to_call\": 0,\n    \"calldata\": \"0x23b872dd000000000000000000000000351a8d846a01dbd783537df2aae850cf2919abe500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004\",\n    \"replacement_pattern\": \"0x000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000\",\n    \"static_target\": \"0x0000000000000000000000000000000000000000\",\n    \"static_extradata\": \"0x\",\n    \"payment_token\": \"0x0000000000000000000000000000000000000000\",\n    \"payment_token_contract\": {\n        \"id\": 1,\n        \"symbol\": \"ETH\",\n        \"address\": \"0x0000000000000000000000000000000000000000\",\n        \"image_url\": \"https://storage.opensea.io/files/6f8e2979d428180222796ff4a33ab929.svg\",\n        \"name\": \"Ether\",\n        \"decimals\": 18,\n        \"eth_price\": \"1.000000000000000\",\n        \"usd_price\": \"3026.789999999999964000\"\n    },\n    \"base_price\": \"150000000000000000\",\n    \"extra\": \"0\",\n    \"quantity\": \"1\",\n    \"salt\": \"9705624739486272129529506929616367068676233907983681506014294982163780059829\",\n    \"v\": 28,\n    \"r\": \"0xff39941c66195b61595e46d980bd2d63e7f563befacdf5946a15594897be6c17\",\n    \"s\": \"0x3110ba9fa6dba3bc7292a3faec4d0225722dc02a111c83e9a14f24c78e2d2a9a\",\n    \"approved_on_chain\": false,\n    \"cancelled\": false,\n    \"finalized\": false,\n    \"marked_invalid\": false,\n    \"prefixed_hash\": \"0xd24bdb201fc29d52a4bef10a9a075d63e4075313def340236e3e7c888eda02ce\"\n};","import React, { useEffect, useState } from 'react';\nimport { INftProjectRarityDocument, INftRarityDocument } from '@crypto-dev-amigos/common';\nimport { INftRarityWithExtra, NftCard, NftCardPlaceholder } from './nft-card';\nimport { getNftJsonUrl, getProjectJsonUrl } from '../helpers/urls';\nimport { getOpenSeaData } from '../helpers/open-sea';\n\nexport const NftLoader = ({ projectKey, tokenId, contractAddress }:{ projectKey: string, tokenId: string, contractAddress?: string })=>{\n\n    const [nft, setNft] = useState(null as null | INftRarityWithExtra);\n\n    useEffect(() => {\n        (async () => {\n            const nftUrl = getNftJsonUrl(projectKey, tokenId);\n            // console.log('NftLoader', {nftUrl});\n            const result = await fetch(nftUrl);\n            const obj = await result.json() as INftRarityDocument;\n\n            obj.attributeRarities.sort((a,b)=>a.trait_type.localeCompare(b.trait_type));\n            setNft(obj);\n\n            // Try to get contractAddress from project data\n            if(!contractAddress){\n                // Load from project\n                const nftProjectUrl = getProjectJsonUrl(projectKey);\n                // console.log('projectKey', { projectKey, nftProjectUrl });\n                const result = await fetch(nftProjectUrl);\n                const obj = await result.json() as INftProjectRarityDocument;\n                contractAddress = obj.project.contract;\n\n                if(!contractAddress){ return; }\n            }\n\n            // Load open sea data\n            const openSeaData = await getOpenSeaData({ contractAddress, tokenId });\n            const lastSellPrice = parseFloat(openSeaData.last_sale?.total_price ?? '0') / Math.pow(10, openSeaData.last_sale?.payment_token.decimals ?? 0);\n            const lastSellSymbol = openSeaData.last_sale?.payment_token.symbol;\n            const lastSellPriceUsd = lastSellPrice * parseFloat(openSeaData.last_sale?.payment_token.usd_price ?? '1');\n\n            const order = openSeaData.orders?.[0];\n            const listingPrice = parseFloat(order?.current_price ?? '0') / Math.pow(10, order?.payment_token_contract.decimals ?? 0);\n            const listingSymbol =order?.payment_token_contract.symbol;\n            const listingPriceUsd = listingPrice * parseFloat(order?.payment_token_contract.usd_price ?? '1');\n\n            setNft({\n                ...obj, \n                lastSell: openSeaData.last_sale ? {\n                    price: lastSellPrice, \n                    symbol: lastSellSymbol, \n                    priceUsd : lastSellPriceUsd,\n                } : undefined,\n                listing: order ? {\n                    price: listingPrice, \n                    symbol: listingSymbol, \n                    priceUsd : listingPriceUsd,\n                } : undefined,\n                openSeaLink: openSeaData.permalink,\n            })\n\n        })();\n    }, [projectKey, tokenId]);\n\n    // console.log('NftLoader RENDER', {projectKey, tokenId});\n    return (\n        <>\n            {!nft && <NftCardPlaceholder />}\n            {nft && <NftCard nft={nft}/>}\n        </>\n    );\n};\n\n","import React, { useRef } from 'react';\nimport { useState } from 'react';\nimport { LazyComponent } from './lazy-component';\n\nexport const LazyList = <T extends {}>({\n    items, \n    getItemKey, \n    ItemComponent \n}:{ \n    items:T[], \n    getItemKey:(item:T)=>string, \n    ItemComponent: (props:{item:T}) => JSX.Element,\n})=>{\n\n    const PAGE_SIZE = 12;\n    const NEAR_END_COUNT = 3;\n    const [loadCount, setLoadCount] = useState(PAGE_SIZE);\n    const lastLoadCount = useRef(PAGE_SIZE);\n    lastLoadCount.current = loadCount;\n\n    const onLoaded = (index:number)=>{\n        // Skip if already loaded more\n        if(lastLoadCount.current !== loadCount){ return; }\n\n        // Skip if not near the end\n        if(index + NEAR_END_COUNT < loadCount){ return; }\n\n        // Load more\n        // console.log('# LazyList: loadMore', {loadCount});\n        setLoadCount(s=> s + PAGE_SIZE);\n    }\n\n    const itemsLoaded = items.slice(0, loadCount);\n\n    \n    // console.log('LazyList RENDER', {itemsLength: items.length, loadedLength: itemsLoaded.length});\n    return (\n        <>\n            {itemsLoaded.map((x,index)=>(\n                <React.Fragment key={getItemKey(x)} >\n                    <LazyComponent onLoad={() => onLoaded(index)}>\n                        <ItemComponent item={x}/>\n                    </LazyComponent>\n                </React.Fragment>\n            ))}\n        </>\n    );\n};\n\n","import { IProjectTheme } from \"@crypto-dev-amigos/common\";\r\n\r\nexport const changeTheme = (projectTheme: undefined | null | IProjectTheme) => {\r\n\r\n    const toCssName = (key: string)=> key.replace(/[A-Z]/g,(x)=>'_' + x.toLowerCase());\r\n\r\n    const t = projectTheme ?? {} as Record<string,string | boolean>;\r\n    const theme = `\r\n:root {\r\n    ${Object.keys(t)\r\n        .filter(key => t[key] && typeof t[key] === 'string')\r\n        .map(key => `\r\n    --${toCssName(key)}: ${t[key]};`).join('')}\r\n}\r\n    `;\r\n\r\n    const themeTagId = '__themeStyleOverride';\r\n\r\n    const existing = document.getElementById(themeTagId);\r\n    existing?.remove();\r\n    \r\n    const newElement = document.createElement('style');\r\n    newElement.innerHTML = theme;\r\n    newElement.id = themeTagId;\r\n    document.head.appendChild(newElement);\r\n\r\n    ThemeSubscription.changeTheme(projectTheme?.isDark ?? true);\r\n};\r\n\r\n\r\ntype Callback = (isDark:boolean) => void;\r\nconst _callbacks = [] as Callback[];\r\nexport const ThemeSubscription = {\r\n    subscribe: (callback: Callback) => {\r\n        _callbacks.push(callback);\r\n    },\r\n    changeTheme: (isDark:boolean)=>{_callbacks.forEach(x=>x(isDark))},\r\n};","import React, { useEffect, useRef, useState } from 'react';\nimport type { INftProjectMetadataDocument, INftProjectRarityDocument, INftRarity, MISSING_ATTRIBUTE_VALUE as MISSING_ATTRIBUTE_VALUE_TYPE } from '@crypto-dev-amigos/common';\nimport { NftCard } from './nft-card';\nimport { LazyList } from './lazy-list';\nimport { NftLoader } from './nft-loader';\nimport { getIpfsUrl, getNftJsonUrl, getProjectJsonUrl } from '../helpers/urls';\nimport { BarGraphCell } from './bar-graph';\nimport { changeTheme } from '../helpers/theme';\nimport { getOpenSeaData } from '../helpers/open-sea';\nimport { Icon, IconLink, IconName } from './icons';\n\n// Workaround for importing implementation\nconst MISSING_ATTRIBUTE_VALUE: typeof MISSING_ATTRIBUTE_VALUE_TYPE = `[Missing]`;\n\nexport const NftProjectLoader = ({ projectKey }:{ projectKey:string })=>{\n\n    const [projectRarity, setProjectRarity] = useState(null as null | INftProjectRarityData);\n\n    useEffect(() => {\n        (async () => {\n            const nftProjectUrl = getProjectJsonUrl(projectKey);\n            // console.log('projectKey', { projectKey, nftProjectUrl });\n            const result = await fetch(nftProjectUrl);\n            const obj = await result.json() as INftProjectRarityDocument;\n\n            changeTheme(obj.project.theme);\n\n            const loaded = loadProjectRarityData(obj);\n\n            setProjectRarity(loaded);\n        })();\n    }, [projectKey]);\n\nreturn (\n    <>\n        {projectRarity && <NftProject projectKey={projectKey} projectRarity={projectRarity} />}\n    </>\n);\n};\n\nconst ALL_TRAIT_VALUE ='[All]';\ntype INftProjectRarityData = {\n    project: INftProjectMetadataDocument;\n    tokenIdsByRank: INftProjectRarityDocument['tokenIdsByRank']\n    tokenLookups: (INftProjectRarityDocument['tokenLookups'][number] & {\n        ratio: number;\n    })[],\n    traitTypes: string[];\n    contractAddress?: string;\n};\nconst loadProjectRarityData = (doc: INftProjectRarityDocument): INftProjectRarityData => {\n    const traitTypes = [...new Set(doc.tokenLookups.map(x=>x.trait_type))];\n\n    // Add [Missing] and [All]\n    traitTypes.forEach(traitType => {\n        const traitTypeTokenLookups = doc.tokenLookups\n            .filter(x=>x.trait_type === traitType);\n        const includedTokenIds = new Set(traitTypeTokenLookups.flatMap(x=>x.tokenIds));\n        const missingTokenIds = doc.tokenIdsByRank.filter(t => !includedTokenIds.has(t));\n        // Missing\n        if(missingTokenIds.length){\n            doc.tokenLookups.unshift({\n                trait_type: traitType,\n                trait_value: MISSING_ATTRIBUTE_VALUE,\n                tokenIds: missingTokenIds\n            });\n        }\n\n        // All\n        doc.tokenLookups.unshift({\n            trait_type: traitType,\n            trait_value: ALL_TRAIT_VALUE,\n            tokenIds: doc.tokenIdsByRank,\n        });\n    });\n\n    const tokenLookups = doc.tokenLookups.map(x=>({\n        ...x,\n        ratio: x.tokenIds.length / doc.tokenIdsByRank.length,\n    }));\n\n    // Sort tokenLookups\n    tokenLookups.sort();\n\n    return {\n        project: doc.project,\n        contractAddress: doc.project.contract,\n        tokenIdsByRank: doc.tokenIdsByRank,\n        tokenLookups,\n        traitTypes,\n    };\n};\n\ntype TraitFilters = { [traitType: string]: string };\nexport const NftProject = ({ projectKey, projectRarity }:{ projectKey:string, projectRarity:INftProjectRarityData}) => {\n\n    const [tokenIds, setTokenIds] = useState(new Set(projectRarity.tokenIdsByRank));\n    const nftListRef = useRef(null as null | HTMLDivElement)\n    const traitFilters = useRef({} as TraitFilters);\n\n    const onSelect = (args: { traitType: string, value: string }) => {\n        traitFilters.current[args.traitType] = args.value;\n        let tokenIdsSelected = new Set(projectRarity.tokenIdsByRank);\n        Object.entries(traitFilters.current).forEach(([traitKey,traitValue])=>{\n            const tokenLookup = projectRarity.tokenLookups.find(v => v.trait_type === traitKey && v.trait_value === traitValue);\n            if(!tokenLookup){ return; }\n\n            tokenIdsSelected = new Set(tokenLookup.tokenIds.filter(t => tokenIdsSelected.has(t) ));\n        });\n        setTokenIds(tokenIdsSelected);\n        // nftListRef.current?.scrollIntoView({behavior:'smooth'});\n    };\n\n    return (\n        <>\n            <div className='panel-container'>\n                <div className='panel-project-info'>\n                    <ProjectInfo projectRarity={projectRarity}/>\n                </div>\n                <div className='panel-trait-types'>\n                    <TraitTypesList projectRarity={projectRarity} tokenIds={tokenIds} selected={traitFilters.current} onSelect={onSelect}/>\n                </div>\n                <div className='panel-nft-list'>\n                    <div className='nft-list' ref={nftListRef}>\n                        {projectRarity && (\n                            <LazyList items={[...tokenIds]} getItemKey={x=>`${x}`} ItemComponent={({item})=>(\n                                <div\n                                    onClick={()=>window.location.href=`${projectKey}/${item}`}\n                                >\n                                    <NftLoader projectKey={projectKey} tokenId={`${item}`} contractAddress={projectRarity.contractAddress} />\n                                </div>\n                            )}/>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport const ProjectInfo = ({projectRarity}:{ projectRarity:INftProjectRarityData})=>{\n    const {project} = projectRarity;\n    return (\n        <>\n            <div style={{display:'flex', flexDirection:'row', justifyContent:'center', alignItems:'center'}}>\n                <div style={{}}>\n                    <img \n                        src={getIpfsUrl(project.image)} \n                        alt='project'\n                        style={{objectFit:'contain', width: 150}}\n                    />\n                </div>\n                <div style={{}}>\n                    <div style={{display:'flex', flexDirection:'row', justifyContent:'flex-end'}}>\n                        <IconLink url={project.external_link} icon='link'/>\n                        <IconLink url={project.links?.opensea} iconUrl='/media/opensea.png'/>\n                        <IconLink url={project.links?.openSea} iconUrl='/media/opensea.png'/>\n                        <IconLink url={project.links?.twitter} icon='twitter'/>\n                        <IconLink url={project.links?.discord} icon='discord'/>\n                        {Object.entries(project.links??{})\n                            .filter(([k])=> !'opensea openSea discord twitter'.includes(k))\n                            .map(([k,v])=>(\n                                <IconLink key={k} url={v} icon='link'/>\n                            ))}\n                    </div>\n                    <div style={{fontSize: '1.6em'}}>{project.name}</div>\n                    <div style={{fontSize: '1.0em'}}>{project.description}</div>\n                    <div style={{fontSize: '1.0em'}}>\n                        <a href={getIpfsUrl(project.external_link)}>{project.external_link}</a>\n                    </div>\n                </div>\n\n            </div>\n        </>\n    );\n};\n\nexport const TraitTypesList = ({ projectRarity, tokenIds, selected, onSelect }:{ projectRarity:INftProjectRarityData, tokenIds: Set<number>, selected:TraitFilters, onSelect: (args:{ traitType: string, value: string, tokens: number[] })=>void })=>{\n    const [isExpanded, setIsExpanded] = useState(true);\n   \n    return (\n        <>\n            <div className='nft-trait-types-header'>\n                <div className='nft-trait-types-header-expandable' onClick={()=>setIsExpanded(s=>!s)}>\n                    <div style={{position:'relative'}}>\n                        <div style={{\n                            position:'absolute',\n                            left: 4,\n                            fontSize: 18\n                            }}>\n                            {isExpanded ? <Icon icon='expanded'/> : <Icon icon='collapsed'/> }\n                        </div>\n                        Trait Filters \n                    </div>\n                </div>\n                <div className='nft-trait-types-header-simple'>\n                    <div>Trait Filters</div>\n                </div>\n            </div>\n            <div className='nft-trait-types'>\n                {projectRarity.traitTypes.map(x=>(\n                    <React.Fragment key={x}>\n                        <TraitValuesList traitType={x} projectRarity={projectRarity} isExpanded={isExpanded} tokenIds={tokenIds} selected={selected} onSelect={onSelect} />\n                    </React.Fragment>\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport const TraitValuesList = ({ traitType, projectRarity, isExpanded, tokenIds, selected, onSelect }:{ traitType: string, projectRarity:INftProjectRarityData, isExpanded: boolean, tokenIds: Set<number>, selected:TraitFilters, onSelect: (args:{ traitType: string, value: string, tokens: number[] })=>void })=>{\n   \n    const traitTypeTokenLookups = projectRarity.tokenLookups\n        .filter(x=>x.trait_type === traitType);\n    const tokenIdsOfAll = traitTypeTokenLookups\n        .find(x => x.trait_value===ALL_TRAIT_VALUE)\n        ?.tokenIds.filter(x => tokenIds.has(x)) ?? [];\n   \n    const selectedTraitValue = selected[traitType] ?? ALL_TRAIT_VALUE;\n    const isAllSelected = selectedTraitValue === ALL_TRAIT_VALUE;\n\n    if(!isExpanded){\n\n        if(!selectedTraitValue || isAllSelected){\n            return <></>;\n        }\n\n        return (\n            <div className='nft-trait-type' onClick={()=>onSelect({traitType, value: ALL_TRAIT_VALUE, tokens: tokenIdsOfAll})}>\n                <div style={{position:'relative'}}>\n                    <div style={{\n                        position:'absolute',\n                        right: 4,\n                        }}>\n                        {'❌'}\n                    </div>\n                    {traitType} = {selectedTraitValue}\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className='nft-trait-type'>\n            <div className='nft-trait-type-header' onClick={()=>onSelect({traitType, value: ALL_TRAIT_VALUE, tokens: tokenIdsOfAll})}>\n                <div style={{position:'relative'}}>\n                    <div style={{\n                        position:'absolute',\n                        right: 4,\n                        }}>\n                        {isAllSelected ? '':'❌'}\n                    </div>\n                    {traitType}\n                </div>\n            </div>\n            <div className='nft-trait-values'>\n                {traitTypeTokenLookups.map(x=>(\n                    <React.Fragment key={`${x.trait_type}:${x.trait_value}`}>\n                        <div className={`nft-trait-value ${selectedTraitValue === x.trait_value ? 'nft-trait-value-selected':''}`} onClick={()=>onSelect({traitType: x.trait_type, value: x.trait_value, tokens: x.tokenIds})}>\n                            <BarGraphCell ratio={x.ratio} text={x.trait_value} textRight={isAllSelected || selectedTraitValue === x.trait_value ? `${x.tokenIds.filter(t=>tokenIds.has(t)).length}`:``}/>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\n","import React, { useEffect, useState } from \"react\";\r\nimport { ThemeSubscription } from \"../helpers/theme\";\r\n\r\nexport const Layout = ({ children }:{ children:JSX.Element }) => {\r\n\r\n    const [isDark, setIsDark] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        ThemeSubscription.subscribe(setIsDark);\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n            <div style={{display: 'flex', flexDirection:'row', padding: 8}}>\r\n                <a href=\"/\">\r\n                 <img style={{width: 256}}\r\n                    src={isDark ? '/media/logo_white.png' : '/media/logo_black.png'} alt='site-logo'/>\r\n                </a>\r\n            </div>\r\n            <div>\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\nimport { INftProjectMetadata, INftProjectsDocument } from '@crypto-dev-amigos/common';\nimport { LazyList } from './lazy-list';\nimport { NftLoader } from './nft-loader';\nimport { getIpfsUrl, getProjectsJsonUrl } from '../helpers/urls';\nimport { LazyComponent } from './lazy-component';\n\nexport const NftProjectsLoader = (props:{ })=>{\n\n    const [projects, setProjectRarity] = useState(null as null | INftProjectsDocument);\n\n    useEffect(() => {\n        (async () => {\n            const nftProjectUrl = getProjectsJsonUrl();\n            // console.log('projectKey', { projectKey, nftProjectUrl });\n            const result = await fetch(nftProjectUrl);\n            const obj = await result.json() as INftProjectsDocument;\n            setProjectRarity(obj);\n        })();\n    }, []);\n\nreturn (\n    <>\n        {projects && <NftProjects projects={projects} />}\n    </>\n);\n};\n\nexport const NftProjects = ({ projects }:{ projects: INftProjectsDocument }) => {\n    return (\n        <>\n            <div className='nft-list'>\n                {projects && (\n                    <LazyList items={projects.projects} getItemKey={x=>`${x.projectKey}`} ItemComponent={({item})=>(\n                        <NftProjectCard projectKey={item.projectKey} project={item.projectMetadata} />\n                    )}/>\n                )}\n            </div>\n        </>\n    );\n};\n\n\nexport const NftProjectCard = ({projectKey, project}:{ projectKey:string, project: INftProjectMetadata }) => {\n\n    return (\n        <>\n            <div className={'nft-card'}>\n                {/* <div><b>Token ID:</b> {nft.nft.id}</div> */}\n                <div><b>{project.name}</b></div>\n                <div>\n                    <a href={getIpfsUrl(project.external_link)}>External Link</a>\n                </div>\n\n                <div className={'nft-card-image'} onClick={()=>window.location.href=`${projectKey}`}>\n                    <LazyComponent>\n                        <img alt='nft' src={getIpfsUrl(project.image)}/>\n                    </LazyComponent>\n                </div>\n            </div>\n        </>\n    );\n};\n\n","import { NftProjectsLoader } from \"./nft-projects\";\r\n\r\nexport const HomePage = ()=>{\r\n\r\n    return (\r\n        <div style={{display:'flex', flexDirection:'column', justifyContent:'space-between', alignItems:'center', minHeight:'calc(100vh - 100px)'}}>\r\n            <div style={{width: '100%'}}>\r\n            <NftProjectsLoader/>\r\n            </div>\r\n            <CharacterArea/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst CharacterArea = (props:{})=>{\r\n    return (\r\n        <>\r\n            <div style={{display:'flex', flexDirection:'row'}}>\r\n                <Character punkId={4856} name={'@NotChris'}/>\r\n                <Character punkId={578} name={'@RickLove'} link={`https://twitter.com/Rick_00_Love`}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Character = ({punkId, name, link}:{punkId:number, name:string, link?:string})=>{\r\n    return (\r\n        <>\r\n            <div>\r\n                <div>\r\n                    <img style={{width: 150, height:150, objectFit:'contain'}} \r\n                        src={`/media/punk${punkId}.png`} alt=\"punk\"/>\r\n                </div>\r\n                <div>\r\n                    {!link && name}\r\n                    {!!link && <a href={link}>{`${name}`}</a>}\r\n                </div>\r\n                <div>\r\n                    {`OneDayPunk #${punkId}`}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport './CssReset.css';\nimport './App.css';\nimport { NftLoader } from './components/nft-loader';\nimport { NftProjectLoader } from './components/nft-project';\nimport { NftProjectsLoader } from './components/nft-projects';\nimport { Layout } from './components/layout';\nimport { HomePage } from './components/home-page';\n\nfunction App() {\n\n return (\n  <Layout>\n      <Routing/>\n  </Layout>\n );\n}\n\nconst Routing = (props:{}) => {\n  const route = window.location.pathname.split('/');\n  const projectKey = route[1] ?? undefined;\n  const tokenId = route[2] ?? undefined;\n\n  console.log('route', {route, projectKey, tokenId});\n\n  if(projectKey && tokenId){\n    return (\n      <div className=\"App\">\n        <div className='nft-container-single'>\n          <NftLoader projectKey={projectKey} tokenId={tokenId}/>\n        </div>\n      </div>\n    );\n  }\n\n  if(projectKey){\n    return (\n      <div className=\"App\">\n        <NftProjectLoader projectKey={projectKey}/>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n        <HomePage/>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}