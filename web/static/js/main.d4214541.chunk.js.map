{"version":3,"sources":["components/bar-graph.tsx","components/icons.tsx","helpers/urls.ts","helpers/delay.ts","components/lazy-component.tsx","components/smart-image.tsx","components/nft-card.tsx","helpers/open-sea.ts","helpers/theme.ts","components/nft-loader.tsx","components/lazy-list.tsx","components/types.ts","components/trait-graph.tsx","helpers/colors.ts","helpers/trait-sort.ts","components/trait-grid.tsx","helpers/trait-colors.ts","components/nft-project.tsx","components/layout.tsx","components/nft-projects.tsx","components/home-page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BarGraphCell","ratio","text","textRight","className","style","position","zIndex","width","toFixed","height","display","flexDirection","opacity","flex","Icon","icon","LoadingIndicator","IconLink","url","iconUrl","href","fontSize","src","alt","getProjectJsonUrl","projectKey","getNftJsonUrl","tokenId","getIpfsUrl","nftUrl","replace","delay","timeout","a","Promise","resolve","setTimeout","Date","now","globalRelayoutCallbacks","activeNotifyRelayoutId","notifyRelayout","notifyRelayoutId","i","length","callback","window","addEventListener","IntersectionObserver","observe","document","getElementsByTagName","nextLazyComponentId","LazyComponent","children","onLoad","placeholderRef","useRef","useState","shouldLoad","setShouldLoad","isDoneRef","useEffect","current","placeholder","iRelayout","push","divRect","getBoundingClientRect","screenBottom","scrollY","innerHeight","top","unsub","ref","minWidth","minHeight","SmartImage","loading","setLoading","error","setError","attemptsRef","timeoutRef","onLoadStart","clearTimeout","Math","pow","onError","Price","price","symbol","toLowerCase","color","priceUsd","NftCardPlaceholder","props","NftCard","nft","onSelect","rarityScore","rank","lastSell","listing","name","justifyContent","external_url","openSeaLink","image","textAlign","attributeRarities","map","x","Fragment","trait_type","ratioScore","onClick","e","preventDefault","stopPropagation","traitType","value","fontWeight","getOpenSeaData","contractAddress","openSeaUrl","fetch","result","json","changeTheme","projectTheme","target","toCssName","key","t","theme","Object","keys","filter","join","isDark","themeTagId","existing","getElementById","remove","newElement","createElement","innerHTML","id","head","appendChild","ThemeSubscription","_callbacks","subscribe","forEach","NftLoader","setNft","obj","sort","b","localeCompare","nftProjectUrl","project","contract","openSeaData","lastSellPrice","parseFloat","last_sale","total_price","payment_token","decimals","lastSellSymbol","lastSellPriceUsd","usd_price","order","orders","side","listingPrice","current_price","payment_token_contract","listingSymbol","listingPriceUsd","undefined","permalink","LazyList","items","getItemKey","ItemComponent","loadCount","setLoadCount","lastLoadCount","itemsLoaded","slice","index","s","onLoaded","item","ALL_TRAIT_VALUE","TraitGraph","projectRarity","tokenIds","selected","svgRef","redrawKey","JSON","stringify","rareCount","setRareCount","isExpanded","setIsExpanded","svg","isMounted","redraw","drawSankeyDiagram","nodes","links","calculateData","data","nodeIdsMap","onSelectNodeIds","nodeIds","get","console","log","trait_value","redrawOuter","removeEventListener","size","heightRatio","max","min","NumberButton","paddingLeft","v","background","borderRadius","traitValuesRaw","tokenLookups","traitValuesNotAll","tokensInSelectionSet","Set","has","getAllPairs","allPairs","lastDelay","xArray","j","y","l","r","intersectCount","unionCount","temp","allPairsSortedByRarest","pairsUsed","traitValuesUsed","flatMap","nodeIdsReverseMap","Map","getNodeId","traitTypesMap","nodeId","traitTypeIndex","traitTypeCount","traitValue","tokenCountInSelected","tokenCount","tokenCountAll","tokenCountUsed","source","svgElement","dataInput","uom","clientWidth","clientHeight","colors","d3","selectAll","d3Sankey","nodeWidth","nodePadding","extent","sankey","n","xDiff","x0","x1","wTarget","wDiff","link","append","attr","node","enter","on","d","trim","node2","y0","y1","colorFormat","hsl","hNorm","h","sNorm","lNorm","floor","g","hueToRgbNorm","p","q","rNorm","gNorm","bNorm","sortTraits","traits","traitSort","TraitGrid","HoverComponent","canvasRef","setTraitSort","hoverArgs","setHoverArgs","canvas","unsubscribe","onHover","args","drawNftTraitGridImage","selectedTokenIds","traitFilters","trait","SortButton","left","clientX","clientY","tokenIdsToUse","traitsRaw","traitsToUse","hRaw","wRaw","wClient","parentElement","xScale","yScale","w","hContent","ctx","getContext","clearRect","imageData","getImageData","tokenIdRankMap","rankIndex","getTraitColor","tokenIdsByRank","yOffset","alpha","drawHeaderBar","xs","ys","putImageData","setHighlightAlpha","xColumn","yRow","fillStyle","fillRect","eraseHighlight","handleInput","isSelect","rect","getClientRects","canvasXRatio","right","canvasYRatio","bottom","isInRect","traitIndex","tokenIdIndex","drawHighlight","handleMouseClick","ev","handleMouse","handleTouch","touches","NftProjectLoader","setProjectRarity","loaded","loadProjectRarityData","doc","tokenLookupsSource","traitTypes","traitTypeTokenLookups","includedTokenIds","missingTokenIds","unshift","NftProject","setTokenIds","nftListRef","selections","tokenIdsIfAll","traitKeyIfAll","entries","traitKey","tokenLookup","find","tokenIdsSelected","onReset","marginTop","location","traitInfo","isSelected","nftCount","findIndex","ProjectInfo","objectFit","external_link","opensea","openSea","twitter","discord","k","includes","description","TraitTypesList","values","some","isExpandedAll","TraitValuesList","selectedTraitItem","isAllSelected","traitTypeTokenLookupsWithCount","count","Layout","setIsDark","padding","NftProjectsLoader","projects","NftProjects","projectMetadata","NftProjectCard","targetId","HomePage","alignItems","CharacterArea","punkId","Character","open","Routing","route","pathname","split","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d4214541.chunk.js","sourcesContent":["import React, { useRef } from 'react';\n\nexport const BarGraphCell = ({ ratio, text, textRight }:{ ratio: number, text?: string, textRight?: string })=>{\n    return (\n        <div className='bar-graph' style={{position:'relative'}}>\n            <div className='bar-graph-background' style={{\n                position:'absolute',\n                zIndex: 0,\n                width: `${(100 * ratio).toFixed(0)}%`,\n                height: '100%',\n                }}>\n            </div>\n            <div style={{position:'relative', zIndex: 10, display:'flex', flexDirection:'row'}}>\n                {/* Used to center main text */}\n                <div className='bar-graph-text-right' style={{opacity:0}}>\n                    {textRight}\n                </div>\n                <div className='bar-graph-text' style={{flex:1}}>\n                    {text ?? `${(100 * ratio).toFixed(2)}%`}\n                </div>\n                <div className='bar-graph-text-right' style={{}}>\n                    {textRight}\n                </div>\n            </div>\n            \n        </div>\n    );\n}","import React from 'react';\nimport { AiFillTwitterCircle } from \"react-icons/ai\";\nimport { FaDiscord, FaEthereum } from \"react-icons/fa\";\nimport { HiLink } from \"react-icons/hi\";\nimport { VscChevronDown, VscChevronRight, VscLoading } from \"react-icons/vsc\";\n\nexport type IconName = \n| 'twitter'\n| 'discord'\n| 'link'\n| 'eth'\n| 'collapsed'\n| 'expanded'\n| 'loading'\n;\nexport const Icon = ({icon}:{icon:IconName})=>{\n    switch(icon){\n        case 'twitter': return <AiFillTwitterCircle/>;\n        case 'discord': return <FaDiscord/>;\n        case 'link': return <HiLink/>;\n        case 'eth': return <FaEthereum/>;\n        case 'collapsed': return <VscChevronRight/>;\n        case 'expanded': return <VscChevronDown/>;\n        case 'loading': return <VscLoading/>;\n    }\n\n    return <></>;\n};\n\nexport const LoadingIndicator = ()=>{\n    return (\n        <div className='loading'>\n            <Icon icon='loading'/>\n        </div>\n    );\n};\n\nexport const IconLink = ({url, icon, iconUrl}: {url?:string, icon?: IconName, iconUrl?:string})=>{\n    return (\n        <>\n            {!!url && <a href={url}\n                style={{display:'inline-block', width: 32, height: 32, fontSize: 20 }}\n            >\n                {!!icon && <Icon icon={icon}/>}\n                {!!iconUrl && <img style={{width:20, height: 20}} src={iconUrl} alt='link'/>}\n            </a>}\n        </>\n    );\n};","export const getProjectsJsonUrl = ()=>`/data/projects.json`;\nexport const getProjectJsonUrl = (projectKey:string)=>`/data/${projectKey}/project.json`;\nexport const getNftJsonUrl = (projectKey:string, tokenId: string)=>`/data/${projectKey}/${tokenId}.json`;\nexport const getIpfsUrl = (nftUrl:string) => nftUrl.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/');\nexport const getOpenSeaTokenUrl = (contractAddress:string, tokenId:string) => `https://opensea.io/assets/${contractAddress}/${tokenId}`;\n\n","export async function delay(timeout: number): Promise<void> {\n    return await new Promise((resolve) => {\n        setTimeout(resolve, timeout);\n    });\n}","import React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport { delay } from '../helpers/delay';\n\nconst debug_timeStart = Date.now();\nconst globalRelayoutCallbacks = [] as (null | (()=>boolean))[];\nlet activeNotifyRelayoutId = 0;\nconst notifyRelayout = async () => {\n\n    // Cancellable\n    activeNotifyRelayoutId++;\n    let notifyRelayoutId = activeNotifyRelayoutId;\n    await delay(100);\n\n    // console.log('LazyComponent notifyRelayout', {notifyRelayoutId});\n    \n    let i = 0;\n    while(i < globalRelayoutCallbacks.length){\n        const callback = globalRelayoutCallbacks[i];\n        if(callback && callback()){\n            await delay(25);\n        }\n        i++;\n\n        if(notifyRelayoutId !== activeNotifyRelayoutId){\n            // Cancelled\n            // console.log('LazyComponent notifyRelayout - Cancelled', {notifyRelayoutId});\n            return;\n        }\n    }\n};\nwindow.addEventListener('scroll', notifyRelayout);\nwindow.addEventListener('load', ()=>{\n    const observer = new IntersectionObserver(notifyRelayout);\n    // Observe any element\n    observer.observe(document.getElementsByTagName('body')[0]);\n});\n\nlet nextLazyComponentId = 0;\n\nexport const LazyComponent = ({ \n    children,\n    onLoad,\n}:{ \n    children: ReactNode,\n    onLoad?: () => void,\n })=>{\n\n    const placeholderRef = useRef(null as null | HTMLDivElement);\n    const [shouldLoad, setShouldLoad] = useState(false);\n    const isDoneRef = useRef(false);\n    const lazyComponentId = useRef(nextLazyComponentId++);\n\n    useEffect(() => {\n        // console.log('LazyComponent useEffect', {lazyComponentId});\n\n        if( !placeholderRef.current ){ \n            // console.log('LazyComponent useEffect - SKIP placeholderRef is missing', {lazyComponentId});\n            return; \n        }\n        const placeholder = placeholderRef.current;\n        isDoneRef.current = false;\n      \n        const loadIfVisible = () => {\n            // console.log('LazyComponent useEffect:loadIfVisible', {lazyComponentId});\n\n            if( !placeholderRef.current ){ \n                // console.log('LazyComponent useEffect:loadIfVisible - SKIP placeholderRef is missing', {lazyComponentId});\n                return false; \n            }\n            if( isDoneRef.current ){ \n                // console.log('LazyComponent useEffect:loadIfVisible - SKIP isDone', {lazyComponentId});\n                return false; \n            }\n\n            const divRect = placeholder.getBoundingClientRect();\n            const screenBottom = window.scrollY + window.innerHeight;\n            const isOnScreen = divRect.top < screenBottom;\n\n            if(!isOnScreen){ return false; }\n            // console.log(`isOnScreen`,{ time: Date.now() - debug_timeStart, iRelayout, divRect, screenBottom, isOnScreen });\n            \n            isDoneRef.current = true;\n            unsub();\n            setShouldLoad(true);\n            notifyRelayout();\n            onLoad?.();\n\n            return true;\n        };\n\n        const iRelayout = globalRelayoutCallbacks.length;\n        globalRelayoutCallbacks.push(loadIfVisible);\n        const unsub = ()=>{\n            globalRelayoutCallbacks[iRelayout] = null;\n        };\n\n        notifyRelayout();\n\n        return () => {\n            isDoneRef.current = true;\n            unsub();\n        };\n    },[children, onLoad]);\n\n    // console.log('LazyComponent RENDER', {lazyComponentId});\n    return (\n        <>  \n            {!shouldLoad && <div ref={placeholderRef} style={{minWidth: 100, minHeight: 100}}/>}\n            {shouldLoad && children}\n        </>\n    );\n};","import React, { CSSProperties, useEffect, useRef, useState } from \"react\";\nimport { getIpfsUrl } from \"../helpers/urls\";\nimport { LoadingIndicator } from \"./icons\";\nimport { LazyComponent } from \"./lazy-component\";\n\nexport const SmartImage = ({src, alt, style}:{src:undefined |null|string, alt: string, style?: CSSProperties})=>{\n\n    const MAX_ATTEMPTS = 5;\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    const attemptsRef = useRef(1);\n\n    const timeoutRef = useRef(0 as unknown as ReturnType<typeof setTimeout>);\n\n    const onRetry = () => {\n        clearTimeout(timeoutRef.current);\n        if(attemptsRef.current > MAX_ATTEMPTS){ return; }\n    \n        setError(true);\n        onLoadStart();\n    };\n    const onLoadStart = () => {\n        clearTimeout(timeoutRef.current);\n        if(attemptsRef.current > MAX_ATTEMPTS){ return; }\n\n        timeoutRef.current = setTimeout(()=>{\n            attemptsRef.current++;\n            setError(false);\n        }, Math.pow(2, attemptsRef.current) * 1000);\n    };\n    const onLoad = () => {\n        clearTimeout(timeoutRef.current);\n        setLoading(false);\n    };\n    useEffect(()=>{\n        return ()=>{\n            clearTimeout(timeoutRef.current);\n        };\n    },[]);\n\n    if(!src){ return <></>; }\n    return (\n        <>\n            <LazyComponent>\n                {loading && (<LoadingIndicator/>)}\n                {!error && (\n                    <img key={attemptsRef.current} alt={alt} style={style} src={getIpfsUrl(src)} onLoadStart={onLoadStart} onLoad={onLoad} onError={onRetry}/>\n                )}\n            </LazyComponent>\n        </>\n    );\n}\n","import React from 'react';\nimport { INftRarity } from '@crypto-dev-amigos/common';\nimport { LazyComponent } from './lazy-component';\nimport { getIpfsUrl } from '../helpers/urls';\nimport { BarGraphCell } from './bar-graph';\nimport { Icon, IconLink, LoadingIndicator } from './icons';\nimport { SmartImage } from './smart-image';\nimport { OnSelectTraitValue } from './types';\n\nexport type INftRarityWithExtra = INftRarity & {\n    openSeaLink?: string;\n    lastSell?: {\n        price: number;\n        symbol?: string;\n        priceUsd?: number;\n    },\n    listing?: {\n        price: number;\n        symbol?: string;\n        priceUsd?: number;\n    },\n};\n\nconst Price = ({price}:{price?: {\n    price: number;\n    symbol?: string;\n    priceUsd?: number;\n}}) => {\n    \n    if(!price){ return <span>{'-?-'}</span>}\n\n    return (\n        <>\n            <div style={{display:'inline-block', minWidth: 100}}>\n                <span>{price.price.toFixed(3)}</span>\n                {price.symbol && (\n                    price.symbol.toLowerCase() === 'eth' ? <span className='black-or-white'><Icon icon='eth'/></span> \n                    : price.symbol.toLowerCase() === 'weth' ? <span style={{color: '#ca477b'}}><Icon icon='eth'/></span> \n                    : <span>{price.symbol}</span>\n                )}\n            </div>\n            <div style={{display:'inline-block', minWidth: 100}}>\n                <span>{price.priceUsd ? ` $${price.priceUsd.toFixed(2)}`:''}</span>\n            </div>\n        </>\n    );\n}\n\nexport const NftCardPlaceholder = (props:{})=>{\n    return (\n        <>\n            <div className={'nft-card'}>\n                <LoadingIndicator/>\n                <div style={{height: 300}}></div>\n            </div>\n        </>\n    );\n}\n\nexport const NftCard = ({nft, onSelect}:{ nft: INftRarityWithExtra, onSelect?: OnSelectTraitValue }) => {\n\n    return (\n        <>\n            <div className={'nft-card'}>\n                <div className='nft-card-header'>\n                    <div className='nft-card-header-item'>\n                        <div className='nft-card-header-item-label'>Rarity Score:</div>\n                        <div className='nft-card-header-item-value'>{nft.rarityScore.toFixed(2)}</div>\n                    </div>\n                    <div className='nft-card-header-item'>\n                        <div className='nft-card-header-item-label'>Rank:</div>\n                        <div className='nft-card-header-item-value'>{nft.rank}</div>\n                    </div>\n                    <div className='nft-card-header-item-2'>\n                        <div className='nft-card-header-item-label'>Last Sell:</div>\n                        <div className='nft-card-header-item-value'><Price price={nft.lastSell}/></div>\n                    </div>\n                    <div className='nft-card-header-item-2'>\n                        <div className='nft-card-header-item-label'>Listing:</div>\n                        <div className='nft-card-header-item-value'><Price price={nft.listing}/></div>\n                    </div>\n                    <div className='nft-card-header-title'>{nft.nft.name}</div>\n                </div>\n\n                <div className='nft-card-content'>\n                    <div style={{display:'flex', flexDirection:'row', justifyContent:'flex-end'}}>\n                        <IconLink url={nft.nft.external_url} icon='link'/>\n                        <IconLink url={nft.openSeaLink} iconUrl='/media/opensea.png'/>\n                    </div>\n                    <div className={'nft-card-image'}>\n                        <SmartImage alt='nft' src={nft.nft.image}/>\n                    </div>\n\n                    <div className='nft-card-stats'>\n                        <div className='nft-card-stats-row nft-card-stats-title' style={{ fontSize:`0.8em` }}>\n                            <div className='nft-card-stats-cell' style={{textAlign:'left'}}>{'Trait'}</div>\n                            <div className='nft-card-stats-cell' style={{textAlign:'right'}}>{'Rarity Score'}</div>\n                        </div>\n                        <div className='nft-card-stats-row nft-card-stats-title' style={{ fontSize:`0.8em` }}>\n                            <div className='nft-card-stats-cell' style={{textAlign:'right'}}>{''}</div>\n                            <div className='nft-card-stats-cell'>{'Commonality'}</div>\n                        </div>\n                        {nft.attributeRarities.map(x=>(\n                            <React.Fragment key={x.trait_type}>\n                                <div className='nft-card-stats-row'>\n                                    <div className='nft-card-stats-cell nft-card-stats-title' style={{textAlign:'left'}}>{x.trait_type}</div>\n                                    <div className='nft-card-stats-cell numeric-value' style={{textAlign:'right'}}>{`${x.ratioScore.toFixed(2)}`}</div>  \n                                </div>\n                                <div className='nft-card-stats-row'>\n                                    <div className={`nft-card-stats-cell ${onSelect?'link':''}`} style={{textAlign:'right'}}>\n                                        <span \n                                            onClick={(e) => {\n                                                if(!onSelect){return;}\n\n                                                e.preventDefault();\n                                                e.stopPropagation();\n                                                onSelect({traitType: x.trait_type, value: x.value});\n                                            }}\n                                            style={x.value !== \"[Missing]\"?{fontWeight:'bold'}:{}}>{x.value}</span>\n                                    </div>\n                                    <div className='nft-card-stats-cell numeric-value'>\n                                        <BarGraphCell ratio={x.ratio} />\n                                    </div>                              \n                                </div>\n                            </React.Fragment>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\n","export const getOpenSeaData = async ({contractAddress, tokenId}: {contractAddress:string, tokenId:string})=>{\n\n    const openSeaUrl = `https://api.opensea.io/api/v1/asset/${contractAddress}/${tokenId}/`;\n    const result = await fetch(openSeaUrl);\n    const json = await result.json() as {\n        token_id: string,\n        num_sales?: number,    \n        last_sale?: {\n            /** BigNumber */\n            total_price: string,\n            payment_token: {\n                symbol: string,\n                decimals: number,\n                usd_price: string,\n            },\n        },\n        orders?: {\n            current_price: string,\n            payment_token_contract: {\n                symbol: string,\n                decimals: number,\n                usd_price: string,\n            },\n            /** \n             * - 1 for buy orders \n             * - 1 for sell orders \n             * */\n            side: 0|1,\n        }[],\n        /** Open sea link */\n        permalink:string,\n    };\n\n    return json;\n};\n","import { IProjectTheme } from \"@crypto-dev-amigos/common\";\n\nexport const changeTheme = (projectTheme: undefined | null | IProjectTheme, target = ':root') => {\n\n    const toCssName = (key: string)=> key.replace(/[A-Z]/g,(x)=>'-' + x.toLowerCase());\n\n    const t = projectTheme ?? {} as Record<string,string | boolean>;\n    const theme = `\n${target} {\n    ${Object.keys(t)\n        .filter(key => t[key] && typeof t[key] === 'string')\n        .map(key => `\n    --${toCssName(key)}: ${t[key]};`).join('')}\n\n    --black-or-white: ${projectTheme?.isDark ? '#FFFFFF' : '#000000'}\n}\n    `;\n\n    const themeTagId = '__themeStyleOverride' + target;\n\n    const existing = document.getElementById(themeTagId);\n    existing?.remove();\n    \n    const newElement = document.createElement('style');\n    newElement.innerHTML = theme;\n    newElement.id = themeTagId;\n    document.head.appendChild(newElement);\n\n    ThemeSubscription.changeTheme(projectTheme?.isDark ?? true);\n};\n\n\ntype Callback = (isDark:boolean) => void;\nconst _callbacks = [] as Callback[];\nexport const ThemeSubscription = {\n    subscribe: (callback: Callback) => {\n        _callbacks.push(callback);\n    },\n    changeTheme: (isDark:boolean)=>{_callbacks.forEach(x=>x(isDark))},\n};","import React, { useEffect, useState } from 'react';\nimport { INftProjectRarityDocument, INftRarityDocument } from '@crypto-dev-amigos/common';\nimport { INftRarityWithExtra, NftCard, NftCardPlaceholder } from './nft-card';\nimport { getNftJsonUrl, getProjectJsonUrl } from '../helpers/urls';\nimport { getOpenSeaData } from '../helpers/open-sea';\nimport { changeTheme } from '../helpers/theme';\nimport { OnSelectTraitValue } from './types';\n\nexport const NftLoader = ({ \n    projectKey, tokenId, contractAddress, onSelect\n }:{ \n     projectKey: string, tokenId: string, contractAddress?: string, onSelect?: OnSelectTraitValue\n})=>{\n\n    const [nft, setNft] = useState(null as null | INftRarityWithExtra);\n\n    useEffect(() => {\n        (async () => {\n            const nftUrl = getNftJsonUrl(projectKey, tokenId);\n            // console.log('NftLoader', {nftUrl});\n            const result = await fetch(nftUrl);\n            const obj = await result.json() as INftRarityDocument;\n\n            obj.attributeRarities.sort((a,b)=>a.trait_type.localeCompare(b.trait_type));\n            setNft(obj);\n\n            // Try to get contractAddress from project data\n            if(!contractAddress){\n                // Load from project\n                const nftProjectUrl = getProjectJsonUrl(projectKey);\n                // console.log('projectKey', { projectKey, nftProjectUrl });\n                const result = await fetch(nftProjectUrl);\n                const obj = await result.json() as INftProjectRarityDocument;\n                contractAddress = obj.project.contract;\n\n                changeTheme(obj.project.theme);\n\n                if(!contractAddress){ return; }\n            }\n\n            // Load open sea data\n            const openSeaData = await getOpenSeaData({ contractAddress, tokenId });\n            const lastSellPrice = parseFloat(openSeaData.last_sale?.total_price ?? '0') / Math.pow(10, openSeaData.last_sale?.payment_token.decimals ?? 0);\n            const lastSellSymbol = openSeaData.last_sale?.payment_token.symbol;\n            const lastSellPriceUsd = lastSellPrice * parseFloat(openSeaData.last_sale?.payment_token.usd_price ?? '1');\n\n            const order = openSeaData.orders?.filter(x=>x.side===1)?.[0];\n            const listingPrice = parseFloat(order?.current_price ?? '0') / Math.pow(10, order?.payment_token_contract.decimals ?? 0);\n            const listingSymbol =order?.payment_token_contract.symbol;\n            const listingPriceUsd = listingPrice * parseFloat(order?.payment_token_contract.usd_price ?? '1');\n\n            setNft({\n                ...obj, \n                lastSell: openSeaData.last_sale ? {\n                    price: lastSellPrice, \n                    symbol: lastSellSymbol, \n                    priceUsd : lastSellPriceUsd,\n                } : undefined,\n                listing: order ? {\n                    price: listingPrice, \n                    symbol: listingSymbol, \n                    priceUsd : listingPriceUsd,\n                } : undefined,\n                openSeaLink: openSeaData.permalink,\n            })\n\n        })();\n    }, [projectKey, tokenId]);\n\n    // console.log('NftLoader RENDER', {projectKey, tokenId});\n    return (\n        <>\n            {!nft && <NftCardPlaceholder />}\n            {nft && <NftCard nft={nft} onSelect={onSelect}/>}\n        </>\n    );\n};\n\n","import React, { useRef } from 'react';\nimport { useState } from 'react';\nimport { LazyComponent } from './lazy-component';\n\nexport const LazyList = <T extends {}>({\n    items, \n    getItemKey, \n    ItemComponent \n}:{ \n    items:T[], \n    getItemKey:(item:T)=>string, \n    ItemComponent: (props:{item:T}) => JSX.Element,\n})=>{\n\n    const PAGE_SIZE = 12;\n    const NEAR_END_COUNT = 3;\n    const [loadCount, setLoadCount] = useState(PAGE_SIZE);\n    const lastLoadCount = useRef(PAGE_SIZE);\n    lastLoadCount.current = loadCount;\n\n    const onLoaded = (index:number)=>{\n        // Skip if already loaded more\n        if(lastLoadCount.current !== loadCount){ return; }\n\n        // Skip if not near the end\n        if(index + NEAR_END_COUNT < loadCount){ return; }\n\n        // Load more\n        // console.log('# LazyList: loadMore', {loadCount});\n        setLoadCount(s=> s + PAGE_SIZE);\n    }\n\n    const itemsLoaded = items.slice(0, loadCount);\n\n    \n    // console.log('LazyList RENDER', {itemsLength: items.length, loadedLength: itemsLoaded.length});\n    return (\n        <>\n            {itemsLoaded.map((x,index)=>(\n                <React.Fragment key={getItemKey(x)} >\n                    <LazyComponent onLoad={() => onLoaded(index)}>\n                        <ItemComponent item={x}/>\n                    </LazyComponent>\n                </React.Fragment>\n            ))}\n        </>\n    );\n};\n\n","export const ALL_TRAIT_VALUE ='[All]';\nexport type TraitFilters = { [traitType: string]: { value:string, tokenIdsIfAll: Set<number> } };\nexport type OnSelectTraitValue = (args:{ traitType: string, value: string }) => void;","import { INftProjectRarityDocument } from '@crypto-dev-amigos/common';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { ALL_TRAIT_VALUE, TraitFilters, OnSelectTraitValue } from './types';\nimport * as d3 from 'd3';\nimport * as d3Sankey from 'd3-sankey';\nimport { delay } from '../helpers/delay';\nimport { Icon, LoadingIndicator } from './icons';\n\n\nexport const TraitGraph = ({ \n    projectKey, projectRarity, tokenIds, selected, onSelect, \n }:{ \n     projectKey: string, projectRarity: INftProjectRarityDocument, tokenIds: Set<number>, selected: TraitFilters, onSelect:OnSelectTraitValue\n}) => {\n\n    const svgRef = useRef(null as null | SVGSVGElement);\n    const redrawKey = projectKey + JSON.stringify(selected);\n    const [loading, setLoading] = useState(true);\n    const [rareCount, setRareCount] = useState(64);\n    const [isExpanded, setIsExpanded] = useState(false);\n\n    useEffect(() => {\n        if(!isExpanded){ return; }\n\n        const svg = svgRef.current;\n        if(!svg){ return; }\n\n        let isMounted = true;\n        let redraw = () => {};\n\n        (async () => {\n            // Blank\n            drawSankeyDiagram(svg, {nodes:[], links:[]}, ()=>{});\n\n            const { data, nodeIdsMap } = await calculateData(projectRarity, tokenIds, selected, rareCount);\n            if(!isMounted){ return; }\n\n            const onSelectNodeIds = (nodeIds:number[]) => {\n                const items = nodeIds.map(x=>nodeIdsMap.get(x));\n                console.log('onSelect', {nodeIds, items});\n                items.forEach(x=>{\n                    if(!x){ return; }\n                    onSelect({traitType: x.trait_type, value: x.trait_value});\n                });\n            };\n    \n            redraw = () => { drawSankeyDiagram(svg, data, onSelectNodeIds); };\n            redraw();\n            setLoading(false);\n        })();\n\n        setLoading(true);\n        const redrawOuter = () => {redraw()};\n        window.addEventListener('resize', redrawOuter);\n        return () => {\n            isMounted = false;\n            window.removeEventListener('resize', redrawOuter);\n        };\n    },[redrawKey, tokenIds.size, rareCount, isExpanded]);\n\n    const heightRatio = Math.max(0.25,Math.min(0.75,tokenIds.size * 0.1));\n\n    const NumberButton = ({value}:{value:number})=>{\n        return (\n            <div className='link' style={{paddingLeft: 8}} \n                onClick={(e)=>{ \n                    e.preventDefault();\n                    e.stopPropagation();\n                    setRareCount(value);\n                }}\n            >{value}</div>\n        );\n    };\n\n    return (\n        <div>\n            <div style={{display: 'flex',flexDirection:'row'}}\n                onClick={()=>setIsExpanded(s=>!s)}\n            >\n                <div style={{fontSize: 18}}>\n                    {isExpanded ? <Icon icon='expanded'/> : <Icon icon='collapsed'/> }\n                </div>\n                <div>Rarest Trait Combinations</div>\n                <div style={{flex:1}}>{tokenIds.size} NFTs</div>\n                {[16,64,256,1024].map((v)=><NumberButton key={v} value={v}/>)}\n            </div>\n            {isExpanded && (\n                <div style={{ background: '#000000', borderRadius: 0 }}>\n                    {loading && (<LoadingIndicator/>)}\n                    <svg ref={svgRef} style={{width: '100%', minHeight: 600, height: `${(heightRatio*100).toFixed(0)}vh`}}></svg>\n                </div>\n            )}\n        </div>\n    );\n}\n\n\nconst calculateData = async (projectRarity: INftProjectRarityDocument, tokenIds: Set<number>, selected: TraitFilters, rareCount: number) => {\n    await delay(10);\n    // const selectedNotAll = new Map(Object.entries(selected).filter(([k,x])=>x.value !== ALL_TRAIT_VALUE));\n\n    const traitValuesRaw = projectRarity.tokenLookups;\n    const traitValuesNotAll = traitValuesRaw\n        .filter(x => x.trait_value !== ALL_TRAIT_VALUE)\n        .map(x=>({\n            ...x,\n            tokensInSelectionSet: new Set(x.tokenIds.filter(t => tokenIds.has(t))),\n        }))\n        ;\n\n    const getAllPairs = async () => {\n        const allPairs = [] as {\n            l: typeof traitValuesNotAll[number];\n            r: typeof traitValuesNotAll[number];\n            intersectCount: number;\n            unionCount: number;\n        }[];\n\n        let lastDelay = Date.now();\n        for(let i = 0; i < traitValuesNotAll.length; i++){\n            const x = traitValuesNotAll[i];\n            const xArray = [...x.tokensInSelectionSet];\n\n            for(let j = i + 1; j < traitValuesNotAll.length; j++){\n                const y = traitValuesNotAll[j];\n                if(x.trait_type === y.trait_type){ continue; }\n\n                if( Date.now() > lastDelay + 10){\n                    console.log('getAllPairs delay');\n\n                    await delay(0);\n                    lastDelay = Date.now();\n                }\n \n                const result = {\n                    l:x,\n                    r:y,\n                    intersectCount: xArray.filter(t => y.tokensInSelectionSet.has(t)).length,\n                    unionCount: xArray.filter(t => !y.tokensInSelectionSet.has(t)).length + y.tokensInSelectionSet.size,\n                };\n\n                // Order trait type\n                if(result.l.trait_type > result.r.trait_type){\n                    const temp = result.l;\n                    result.l = result.r;\n                    result.r = temp;\n                }\n\n                if(!result.intersectCount){ continue; }\n                allPairs.push(result);\n            }    \n        }\n\n        return allPairs;\n    };\n\n    const allPairs = await getAllPairs();\n\n    console.log('allPairs', {allPairs});\n\n    const allPairsSortedByRarest = allPairs.sort((a,b)=>{\n\n        if( a.intersectCount !== b.intersectCount){\n            return a.intersectCount - b.intersectCount;\n        }\n\n        if( a.unionCount !== b.unionCount ){\n            return a.unionCount - b.unionCount;\n        }\n\n        if( a.l.tokenIds.length !== b.l.tokenIds.length ){\n            return a.l.tokenIds.length - b.l.tokenIds.length;\n        }\n\n        if( a.l.trait_type !== b.l.trait_type ){\n            return a.l.trait_type.localeCompare(b.l.trait_type);\n        }\n        if( a.l.trait_value !== b.l.trait_value ){\n            return a.l.trait_value.localeCompare(b.l.trait_value);\n        }\n        if( a.r.trait_type !== b.r.trait_type ){\n            return a.r.trait_type.localeCompare(b.r.trait_type);\n        }\n        if( a.r.trait_value !== b.r.trait_value ){\n            return a.r.trait_value.localeCompare(b.r.trait_value);\n        }\n\n        return 0;\n    });\n\n    const pairsUsed = allPairsSortedByRarest.slice(0,rareCount);\n    const traitValuesUsed = [...new Set(pairsUsed.flatMap(x=>[x.l,x.r]))];\n\n    const nodeIdsReverseMap = new Map(traitValuesUsed.map((x,i)=>[x,i]));\n    const nodeIdsMap = new Map(traitValuesUsed.map((x,i)=>[i,x]));\n    const getNodeId = (x: typeof traitValuesUsed[number]) => nodeIdsReverseMap.get(x) ?? 0;\n\n    const traitTypesMap = new Map(\n        [...new Set(traitValuesUsed.map(x=>x.trait_type))].map((x,i)=>[x,i])\n    );\n\n    const data: DataInput = {\n        nodes: traitValuesUsed.map(x => ({\n            nodeId: getNodeId(x),\n            key: `${x.trait_type}:${x.trait_value}`,\n            traitTypeIndex: traitTypesMap.get(x.trait_type) ?? 0,\n            traitTypeCount: traitTypesMap.size,\n            traitType: x.trait_type,\n            traitValue: x.trait_value,\n            tokenCountInSelected: x.tokensInSelectionSet.size,\n            tokenCount: x.tokenIds.length,\n            tokenCountAll: projectRarity.tokenLookups.length,\n            tokenCountUsed: tokenIds.size,\n        })),\n        links: pairsUsed.map(x=>{\n            return {\n                source: getNodeId(x.l),\n                target: getNodeId(x.r),\n                value: x.intersectCount,\n            };\n        }),\n    };\n\n    return {\n        data,\n        nodeIdsMap\n    };\n};\n\ntype DataNode = {\n    nodeId: number;\n    key: string;\n    traitTypeIndex: number;\n    traitTypeCount: number;\n    traitType: string;\n    traitValue: string;\n    tokenCountInSelected: number;\n    tokenCount: number;\n    tokenCountAll: number;\n    tokenCountUsed: number;\n}\n\ntype DataLink = {\n    source: number;\n    target: number;\n    value: number;\n}\n\ntype DataInput = {\n    nodes: DataNode[];\n    links: DataLink[];\n}\n\nconst drawSankeyDiagram = (svgElement:SVGGElement, dataInput: DataInput, onSelect:(nodeIds:number[])=>void) => {\n\n    type SNode = d3Sankey.SankeyNode<DataNode, DataLink>;\n    type SLink = d3Sankey.SankeyLink<DataNode, DataLink>;\n\n    const data = {\n        nodes: dataInput.nodes as SNode[],\n        links: dataInput.links.map(x=>({\n            source: x.source,\n            target: x.target,\n            value: x.value,\n            uom: 'Widget(s)',\n        })) as SLink[],\n    };\n\n\n    const width = svgElement.clientWidth;\n    const height = svgElement.clientHeight;\n    const colors = {\n        link: \"#FFFFFF\",\n        text: \"#FFFFFF\",\n        nodeOutline: \"#000000\",\n    };\n\n    const svg = d3.select(svgElement);\n    svg.selectAll(\"*\").remove();\n\n    if( !data.nodes.length ){ return; }\n\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    const sankey = d3Sankey.sankey<SNode,SLink>()\n        .nodeWidth(15)\n        .nodePadding(2)\n        .extent([[4, 4], [width - 4, height - 4]]);\n    sankey(data);\n\n    // Override x position\n    data.nodes.forEach(n=>{\n        const xTarget = (width-8-20) *(n.traitTypeIndex / (n.traitTypeCount-1));\n        const xDiff = xTarget - (n.x0??0);\n        //console.log('override position', {xTarget, xDiff, x0:n.x0, x1:n.x1, width, traitTypeIndex: n.traitTypeIndex, traitTypeCount: n.traitTypeCount, n});\n        n.x0 = xDiff + (n.x0 ?? 0);\n        n.x1 = xDiff + (n.x1 ?? 0);\n    });\n\n    // // Override y height\n    // data.nodes.forEach(n=>{\n    //     const hTarget = (height-8-20) * (n.tokenCountInSelected / n.tokenCountUsed);\n    //     const hDiff = hTarget - ((n.y1??0) - (n.y0??0));\n    //     console.log('override height', {hTarget, hDiff, x0:n.x0, x1:n.x1, width, traitTypeIndex: n.traitTypeIndex, traitTypeCount: n.traitTypeCount, n});\n    //     n.y1 = (n.y1 ?? 0) + hDiff;\n    // });\n    // Override width\n    data.nodes.forEach(n=>{\n        const wTarget = Math.max(2,(width-8-20) * (n.tokenCountInSelected / n.tokenCountUsed) / (n.traitTypeCount-1));\n        const wDiff = wTarget - ((n.x1??0) - (n.x0??0));\n        console.log('override width', {wTarget, wDiff, x0:n.x0, x1:n.x1, width, traitTypeIndex: n.traitTypeIndex, traitTypeCount: n.traitTypeCount, n});\n        n.x1 = (n.x1 ?? 0) + wDiff;\n    });\n    \n    // Recalculate y pos\n    //sankey.update(data);\n    \n\n    // Draw\n    const link = svg.append(\"g\")\n        .attr(\"class\", \"links\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", colors.link)\n        .attr(\"stroke-opacity\", 0.2)\n        .selectAll(\"path\");\n\n    const node = svg.append(\"g\")\n        .attr(\"class\", \"nodes\")\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", 10)\n        .selectAll(\"g\")\n        ;\n\n\n    const link2 = link\n        .data(data.links)\n        .enter().append(\"path\")\n        .on('click', (e,d)=>{ console.log('click', {d}); onSelect([(d.source as SNode).nodeId, (d.target as SNode).nodeId]); })\n        .attr(\"d\", d3Sankey.sankeyLinkHorizontal())\n        .attr(\"stroke-width\", (d) => { return Math.max(1, d.width ?? 1); })\n        ;\n\n    link2.append(\"title\")\n        .text((d) => { return `\n${(d.source as DataNode)?.key}\n& \n${(d.target as DataNode)?.key}\n\n${d.value} NFTs in common`.trim() })\n        .attr(\"fill\", colors.text)\n        ;\n\n    const node2 = node\n        .data(data.nodes)\n        .enter().append(\"g\")\n        .on('click' , (e,d)=> { console.log('click', {d}); onSelect([d.nodeId]); })\n        ;\n\n    node2.append(\"rect\")\n        .attr(\"x\", (d) => { return d.x0??0; })\n        .attr(\"y\", (d) => { return d.y0??0; })\n        .attr(\"height\", (d) => { return (d.y1??0) - (d.y0??0); })\n        .attr(\"width\", (d) => { return (d.x1??0) -  (d.x0??0); })\n        .attr(\"fill\", (d) => { return color(d.key.replace(/ .*/, \"\")); })\n        .attr(\"stroke\", colors.nodeOutline)\n        ;\n\n    node2.append(\"text\")\n        .attr(\"fill\", colors.text)\n        .attr(\"x\", (d) => { return (d.x0??0) - 6; })\n        .attr(\"y\", (d) => { return ((d.y1??0) + (d.y0??0)) / 2; })\n        .attr(\"dy\", \"0.35em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(d => `${d.traitType}: ${d.traitValue}`)\n        .attr(\"fill\", colors.text)\n        .filter((d) => { return (d.x0??0) < width / 2; })\n        .attr(\"x\", (d) => { return (d.x1??0) + 6; })\n        .attr(\"text-anchor\", \"start\")\n        ;\n\n    node2.append(\"title\")\n        .text(d => `${d.traitType}: ${d.traitValue}\\n${d.tokenCountInSelected} NFTs in Selection\\n${d.tokenCount} NFTs Total`)\n        .attr(\"fill\", colors.text)\n        ;\n}\n","\n/** RGB 8-bit\n *\n * - r,g,b: [0 - 255]\n *\n * */\n export type RgbColor = { r: number, g: number, b: number };\n\n /** Hsl float\n  *\n  * Note: float precision is required to support roundtrip back to rgb without loss\n  *\n  *  - h: [0.0 - 360.0]\n  *  - s: [0.0 - 100.0]\n  *  - l: [0.0 - 100.0]\n  *\n */\n export type HslColor = { h: number, s: number, l: number };\n \n /** RGB => HSL\n  * Based on https://en.wikipedia.org/wiki/HSL_and_HSV\n  * and https://gist.github.com/mjackson/5311256\n  */\n const rgbToHsl = ({ r, g, b }: RgbColor): HslColor => {\n     const rNorm = Math.max(0, Math.min(1, Math.floor(r) / 255));\n     const gNorm = Math.max(0, Math.min(1, Math.floor(g) / 255));\n     const bNorm = Math.max(0, Math.min(1, Math.floor(b) / 255));\n \n     const vMax = Math.max(rNorm, gNorm, bNorm);\n     const vMin = Math.min(rNorm, gNorm, bNorm);\n     const l = (vMax + vMin) / 2;\n \n     if (vMax == vMin) {\n         // No color\n         return {\n             h: 0,\n             s: 0,\n             l: l * 100,\n         };\n     }\n \n     /**\n      * (V-L) / min(L,1-L)\n      */\n     const s = (vMax - l) / Math.min(l, 1 - l);\n \n     const chroma = vMax - vMin;\n     let h = 0;\n     switch (vMax) {\n     /** V===R => 60deg * (0 + (G-B)/C),   0deg + 60deg * x */\n     case rNorm: h = (gNorm - bNorm) / chroma + 0; break;\n     /** V===G => 60deg * (2 + (B-R)/C), 120deg + 60deg * x */\n     case gNorm: h = (bNorm - rNorm) / chroma + 2; break;\n     /** V===B => 60deg * (4 + (R-G)/C), 240deg + 60deg * x */\n     case bNorm: h = (rNorm - gNorm) / chroma + 4; break;\n     }\n     // Wrap red (when G<B)\n     if (h < 0){ h += 6;}\n     // Normalize[0,1]\n     h /= 6;\n \n     return {\n         h: h * 360,\n         s: s * 100,\n         l: l * 100,\n     };\n };\n \n /** RGB => HSL\n  * Based on https://en.wikipedia.org/wiki/HSL_and_HSV\n  * and https://gist.github.com/mjackson/5311256\n  */\n const hslToRgb = (hsl: HslColor): RgbColor => {\n     const hNorm = Math.max(0, Math.min(hsl.h % 360 / 360, 1));\n     const sNorm = Math.max(0, Math.min(hsl.s / 100, 1));\n     const lNorm = Math.max(0, Math.min(hsl.l / 100, 1));\n \n     if (sNorm === 0) {\n         // No color\n         return {\n             r: Math.floor(lNorm * 255),\n             g: Math.floor(lNorm * 255),\n             b: Math.floor(lNorm * 255),\n         };\n     }\n \n     const hueToRgbNorm = (p: number, q: number, t: number) => {\n         if (t < 0) t += 1;\n         if (t > 1) t -= 1;\n         if (t < 1 / 6) return p + (q - p) * 6 * t;\n         if (t < 1 / 2) return q;\n         if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n         return p;\n     };\n \n     const q = lNorm < 0.5 ? lNorm * (1 + sNorm) : lNorm + (1 - lNorm) * sNorm;\n     const p = 2 * lNorm - q;\n \n     const rNorm = hueToRgbNorm(p, q, hNorm + 1 / 3);\n     const gNorm = hueToRgbNorm(p, q, hNorm);\n     const bNorm = hueToRgbNorm(p, q, hNorm - 1 / 3);\n \n     return {\n         r: Math.floor(rNorm * 255),\n         g: Math.floor(gNorm * 255),\n         b: Math.floor(bNorm * 255),\n     };\n };\n \n \n export type RgbHexColor = string & { __type: `#FFFFFF` };\n const rgbToRgbHex = ({ r, g, b }: RgbColor): RgbHexColor => {\n     return `#${r.toString(16).padStart(2, `0`)}${g.toString(16).padStart(2, `0`)}${b.toString(16).padStart(2, `0`)}` as RgbHexColor;\n };\n const rgbHexToRgb = (rgbHex: RgbHexColor): RgbColor => {\n     const hex = rgbHex.startsWith(`#`) ? rgbHex.substr(1) : rgbHex;\n     return {\n         r: parseInt(hex.substr(0, 2), 16),\n         g: parseInt(hex.substr(2, 2), 16),\n         b: parseInt(hex.substr(4, 2), 16),\n     };\n };\n \n export const colorFormat = {\n     rgbToHsl,\n     hslToRgb,\n     rgbToRgbHex,\n     rgbHexToRgb,\n };\n ","import { Trait } from \"./types\";\n\nexport type TraitSortKind = 'rarity' | 'default';\nexport const sortTraits = (traits:Trait[], traitSort: TraitSortKind) => {\n\n    const t = [...traits]\n        .sort((a,b) => a.trait_value.localeCompare(b.trait_value))\n        .sort((a,b) => a.trait_type.localeCompare(b.trait_type))\n        ;\n\n    if( traitSort === 'rarity'){\n        return t.sort((a,b) => a.tokenIds.length - b.tokenIds.length);\n    }\n\n    return t;\n};","import { INftProjectRarityDocument } from '@crypto-dev-amigos/common';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { ALL_TRAIT_VALUE, TraitFilters, OnSelectTraitValue } from './types';\nimport { Icon, LoadingIndicator } from './icons';\nimport { colorFormat } from '../helpers/colors';\nimport { getTraitColor } from '../helpers/trait-colors';\nimport { sortTraits, TraitSortKind } from '../helpers/trait-sort';\nimport { Trait } from '../helpers/types';\n\n\nexport const TraitGrid = ({ \n    projectKey, projectRarity, tokenIds, selected, onSelect, HoverComponent,\n }:{ \n     projectKey: string, projectRarity: INftProjectRarityDocument, tokenIds: Set<number>, selected: TraitFilters, onSelect:OnSelectTraitValue,\n     HoverComponent: (props:{args:HoverArgs})=>JSX.Element,\n}) => {\n\n    const canvasRef = useRef(null as null | HTMLCanvasElement);\n    const redrawKey = projectKey + JSON.stringify(selected);\n    const [loading, setLoading] = useState(true);\n    const [traitSort, setTraitSort] = useState('default' as TraitSortKind);\n    const [isExpanded, setIsExpanded] = useState(false);\n\n    const [hoverArgs, setHoverArgs] = useState(null as null | HoverArgs);\n\n    useEffect(() => {\n        if(!isExpanded){ return; }\n\n        const canvas = canvasRef.current;\n        if(!canvas){ return; }\n\n        let isMounted = true;\n        let redraw = () => {};\n        let unsubscribe = () => {};\n        setLoading(true);\n\n        (async () => {\n            // Blank\n            // drawSankeyDiagram(canvas, {nodes:[], links:[]}, ()=>{});\n\n            // const { data, nodeIdsMap } = await calculateData(projectRarity, tokenIds, selected, rareCount);\n            // if(!isMounted){ return; }\n\n            const onHover = (args: null | HoverArgs) => {\n                setHoverArgs(args);\n                // items.forEach(x=>{\n                //     if(!x){ return; }\n                //     onSelect({traitType: x.trait_type, value: x.trait_value});\n                // });\n            };\n            // const onSelect = (args: null | HoverArgs) => {\n            //     setHoverArgs(args);\n            //     // items.forEach(x=>{\n            //     //     if(!x){ return; }\n            //     //     onSelect({traitType: x.trait_type, value: x.trait_value});\n            //     // });\n            // };\n    \n            redraw = () => { \n                unsubscribe();\n                const result = drawNftTraitGridImage({\n                    canvas, projectRarity, selectedTokenIds: tokenIds, traitFilters: selected, traitSort, onHover, \n                    onSelect: (args => args && onSelect({traitType: args.trait.trait_type, value: args.trait.trait_value\n                    }))}); \n                unsubscribe = result?.unsubscribe ?? (()=>{});\n            };\n            redraw();\n            setLoading(false);\n        })();\n\n        const redrawOuter = () => {redraw()};\n        window.addEventListener('resize', redrawOuter);\n        return () => {\n            isMounted = false;\n            window.removeEventListener('resize', redrawOuter);\n            unsubscribe();\n        };\n    },[redrawKey, tokenIds.size, traitSort, isExpanded]);\n\n    const heightRatio = Math.max(0.25,Math.min(0.75,tokenIds.size * 0.1));\n\n    const SortButton = ({value}:{value:TraitSortKind})=>{\n        return (\n            <div className='link' style={{paddingLeft: 8}} \n                onClick={(e)=>{ \n                    e.preventDefault();\n                    e.stopPropagation();\n                    setTraitSort(value);\n                }}\n            >{value}</div>\n        );\n    };\n\n    return (\n        <div>\n            <div style={{display: 'flex',flexDirection:'row'}}\n                onClick={()=>setIsExpanded(s=>!s)}\n            >\n                <div style={{fontSize: 18}}>\n                    {isExpanded ? <Icon icon='expanded'/> : <Icon icon='collapsed'/> }\n                </div>\n                <div>Rarity Waterfall: Nft Trait Grid</div>\n                <div style={{flex:1}}>{tokenIds.size} NFTs</div>\n                {(['rarity','default'] as const).map((v)=><SortButton key={v} value={v}/>)}\n            </div>\n            {isExpanded && (\n                <div style={{ background: '#000000', borderRadius: 0 }}>\n                    {loading && (<LoadingIndicator/>)}\n                    <canvas ref={canvasRef} style={{width:'100%', minHeight: 100}}></canvas>\n                </div>\n            )}\n            {hoverArgs && (\n                <div style={{\n                    position: 'fixed', \n                    left: Math.max(0,-300 + hoverArgs.position.clientX), \n                    top: Math.max(0,-160 + hoverArgs.position.clientY),\n                    width: 300,\n                    height: 160,\n                    zIndex: 10000,\n                    }}>\n                    <HoverComponent args={hoverArgs}/>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport type HoverArgs = {position: {clientX:number, clientY:number}, trait:Trait, tokenId: number};\nconst drawNftTraitGridImage = ({\n    canvas,\n    projectRarity,\n    selectedTokenIds,\n    traitFilters,\n    traitSort,\n    onHover,\n    onSelect,\n}:{ \n    canvas:HTMLCanvasElement,\n    projectRarity: INftProjectRarityDocument\n    selectedTokenIds: Set<number>,\n    traitFilters: TraitFilters,\n    traitSort:TraitSortKind,\n    onHover: (args:null|HoverArgs) => void,\n    onSelect: (args:null|HoverArgs) => void,\n}) => {\n    // const tokenIdsToUse = projectRarity.tokenIdsByRank.length;\n    const tokenIdsToUse = selectedTokenIds;\n    //const traitsToUse = projectRarity.tokenLookups.filter(x=>x.tokenIds.some(t=>selectedTokenIds.has(t)));\n    const traitsRaw = projectRarity.tokenLookups\n        .filter(x=>x.trait_value!==ALL_TRAIT_VALUE);\n        \n    const traitsToUse = sortTraits(traitsRaw, traitSort);\n\n    const hRaw = tokenIdsToUse.size;\n    const wRaw = traitsToUse.length;\n\n    const wClient = canvas.parentElement?.clientWidth;\n    const hClient = 100;\n    if(!wClient||!hClient){return;}\n\n    const xScale = Math.max(1,Math.floor(wClient / wRaw));\n    const yScale = Math.max(1,Math.floor(hClient / hRaw));\n\n    const HEADER_SIZE = 8;\n    const BLANK_SIZE = 4;\n    \n    const w = wRaw * xScale;\n    const hContent = hRaw * yScale;\n    const h = hContent + 2 * (HEADER_SIZE+BLANK_SIZE);\n\n    canvas.width = w;\n    canvas.height = h;\n    const ctx = canvas.getContext('2d');\n    if(!ctx){return;}\n\n    ctx.clearRect(0,0,w,h);\n    const imageData = ctx.getImageData(0,0,w,h);\n    const data = imageData.data;\n\n\n    const tokenIdRankMap = new Map([...tokenIdsToUse].map((tokenId,rankIndex)=>[tokenId,rankIndex]));\n\n\n    for(let x = 0; x < traitsToUse.length; x++){\n        const trait = traitsToUse[x];\n        const {r,g,b} = getTraitColor(trait, traitsToUse, projectRarity.tokenIdsByRank.length);\n        let yOffset = 0;\n\n        const hasSelection = (traitFilters[trait.trait_type]?.value ?? ALL_TRAIT_VALUE) !== ALL_TRAIT_VALUE;\n        const isSelected = !hasSelection || traitFilters[trait.trait_type]?.value === trait.trait_value;\n        const alpha = isSelected ? 255 : 200;\n\n        const drawHeaderBar = ()=>{\n            for(let y = 0; y < HEADER_SIZE; y++){\n                for( let i = 0; i < xScale; i++){\n                    for( let j = 0; j < 1; j++){\n                        const xs = x*xScale+i;\n                        const ys = y*1     +j + yOffset;\n                        data[(xs+ys*w) * 4 + 0] = r;\n                        data[(xs+ys*w) * 4 + 1] = g;\n                        data[(xs+ys*w) * 4 + 2] = b;\n                        data[(xs+ys*w) * 4 + 3] = alpha;\n                    }\n                }\n            }\n        };\n   \n        drawHeaderBar(); \n        yOffset+=HEADER_SIZE;\n        yOffset+=BLANK_SIZE;\n\n        for( const tokenId of trait.tokenIds){\n            const y = tokenIdRankMap.get(tokenId);\n            if(y==null){ continue; }\n\n            for( let i = 0; i < xScale; i++){\n                for( let j = 0; j < yScale; j++){\n                    const xs = x*xScale+i;\n                    const ys = y*yScale+j + yOffset;\n                    data[(xs+ys*w) * 4 + 0] = r;\n                    data[(xs+ys*w) * 4 + 1] = g;\n                    data[(xs+ys*w) * 4 + 2] = b;\n                    data[(xs+ys*w) * 4 + 3] = alpha;\n                }\n            }\n        }\n        yOffset+=hContent;\n        yOffset+=BLANK_SIZE;\n        drawHeaderBar(); \n        yOffset+=HEADER_SIZE;\n    }\n\n    ctx.putImageData(imageData,0,0);\n\n    // Events\n    const setHighlightAlpha = (xColumn:number, yRow:number, alpha: number) => {\n\n        ctx.putImageData(imageData,0,0);\n\n        ctx.fillStyle = 'rgba(255,255,255,0.5)';\n        ctx.fillRect(xColumn * xScale, 0, xScale, imageData.height);\n        ctx.fillRect(0, yRow * yScale + HEADER_SIZE + BLANK_SIZE, imageData.width, yScale);\n    };\n\n    const eraseHighlight = () => {\n        setHighlightAlpha(-1, -1, 255);\n    };\n\n    const drawHighlight = (x:number, y:number)=>{\n        setHighlightAlpha(x, y, 125);\n    };\n\n    const handleInput = (position: {clientX:number, clientY:number}, isSelect: boolean) => {\n        const rect = canvas.getClientRects()[0];\n        if(!rect){ eraseHighlight(); onHover(null); return; }\n\n        const canvasXRatio = (position.clientX - rect.left) / (rect.right-rect.left);\n        const canvasYRatio = (position.clientY - rect.top - (HEADER_SIZE+BLANK_SIZE)) / (rect.bottom-rect.top - 2 * (HEADER_SIZE+BLANK_SIZE));\n\n        const isInRect = \n           canvasXRatio >= 0 \n        && canvasXRatio <= 1\n        && canvasYRatio >= 0\n        && canvasYRatio <= 1;\n\n        console.log(`handleInput`, {isInRect, canvasXRatio, canvasYRatio, rect});\n        if(!isInRect){ eraseHighlight(); onHover(null); return; }\n\n        \n        const traitIndex = Math.floor(canvasXRatio * traitsToUse.length);\n        const trait = traitsToUse[traitIndex];\n\n        const tokenIdIndex = Math.floor(canvasYRatio * tokenIdsToUse.size);\n        const tokenId = [...tokenIdsToUse][tokenIdIndex];\n\n\n        if(!trait){ eraseHighlight(); onHover(null); return; }\n\n        drawHighlight(traitIndex, tokenIdIndex);\n        if( isSelect){\n            onSelect({\n                trait,\n                tokenId,\n                position: {clientX: position.clientX, clientY: position.clientY},\n            });\n            return;\n        }\n        onHover({\n            trait,\n            tokenId,\n            position: {clientX: position.clientX, clientY: position.clientY},\n        });\n    };\n\n    const handleMouseClick = (ev: MouseEvent) => handleInput(ev, true);\n    const handleMouse = (ev: MouseEvent) => handleInput(ev, false);\n    const handleTouch = (ev: TouchEvent) => handleInput(ev.touches[0], false);\n    window.addEventListener('mousemove', handleMouse);\n    window.addEventListener('mousedown', handleMouseClick);\n    window.addEventListener('touchstart', handleTouch);\n    window.addEventListener('touchmove', handleTouch);\n\n    return {\n        unsubscribe: ()=>{\n            window.removeEventListener('mousemove', handleMouse);\n            window.removeEventListener('mousedown', handleMouseClick);\n            window.removeEventListener('touchstart', handleTouch);  \n            window.removeEventListener('touchmove', handleTouch);\n        }\n    };\n};","import { colorFormat } from \"./colors\";\nimport { Trait } from \"./types\";\n\nexport const getTraitColor = (trait: Trait, traits:Trait[], tokenCount:number) => {\n\n    const traitTypeIndexMap = new Map([...new Set(traits.map(x=>x.trait_type))].sort().map((x,i)=>[x,i]));\n    const traitIndex = traitTypeIndexMap.get(trait.trait_type) ?? 0;\n\n    const h = traitIndex * 71 % 360;\n    const s = 100 - Math.floor(75 * trait.tokenIds.length / tokenCount);\n    const l = 50;\n    return colorFormat.hslToRgb({h,s,l});\n};","import React, { useEffect, useRef, useState } from 'react';\nimport type { INftProjectMetadataDocument, INftProjectRarityDocument, INftRarity, MISSING_ATTRIBUTE_VALUE as MISSING_ATTRIBUTE_VALUE_TYPE } from '@crypto-dev-amigos/common';\nimport { NftCard } from './nft-card';\nimport { LazyList } from './lazy-list';\nimport { NftLoader } from './nft-loader';\nimport { getIpfsUrl, getNftJsonUrl, getProjectJsonUrl } from '../helpers/urls';\nimport { BarGraphCell } from './bar-graph';\nimport { changeTheme } from '../helpers/theme';\nimport { Icon, IconLink, IconName, LoadingIndicator } from './icons';\nimport { SmartImage } from './smart-image';\nimport { ALL_TRAIT_VALUE, OnSelectTraitValue, TraitFilters } from './types';\nimport { TraitGraph } from './trait-graph';\nimport { HoverArgs, TraitGrid } from './trait-grid';\nimport { sortTraits } from '../helpers/trait-sort';\n\n// Workaround for importing implementation\nconst MISSING_ATTRIBUTE_VALUE: typeof MISSING_ATTRIBUTE_VALUE_TYPE = `[Missing]`;\n\nexport const NftProjectLoader = ({ projectKey }:{ projectKey:string })=>{\n\n    const [projectRarity, setProjectRarity] = useState(null as null | INftProjectRarityData);\n\n    useEffect(() => {\n        (async () => {\n            const nftProjectUrl = getProjectJsonUrl(projectKey);\n            // console.log('projectKey', { projectKey, nftProjectUrl });\n            const result = await fetch(nftProjectUrl);\n            const obj = await result.json() as INftProjectRarityDocument;\n\n            changeTheme(obj.project.theme);\n\n            const loaded = loadProjectRarityData(obj);\n\n            setProjectRarity(loaded);\n        })();\n    }, [projectKey]);\n\nreturn (\n    <>\n        {!projectRarity && <LoadingIndicator/>}\n        {projectRarity && <NftProject projectKey={projectKey} projectRarity={projectRarity} />}\n    </>\n);\n};\n\ntype INftProjectRarityData = {\n    project: INftProjectMetadataDocument;\n    tokenIdsByRank: INftProjectRarityDocument['tokenIdsByRank']\n    tokenLookups: (INftProjectRarityDocument['tokenLookups'][number] & {\n        ratio: number;\n    })[],\n    traitTypes: string[];\n    contractAddress?: string;\n};\nconst loadProjectRarityData = (doc: INftProjectRarityDocument): INftProjectRarityData => {\n    const tokenLookupsSource = sortTraits(doc.tokenLookups,'default');\n\n    const traitTypes = [...new Set(tokenLookupsSource.map(x=>x.trait_type))];\n\n    // Add [Missing] and [All]\n    traitTypes.forEach(traitType => {\n        const traitTypeTokenLookups = tokenLookupsSource\n            .filter(x=>x.trait_type === traitType);\n\n        const includedTokenIds = new Set(traitTypeTokenLookups.flatMap(x=>x.tokenIds));\n        const missingTokenIds = doc.tokenIdsByRank.filter(t => !includedTokenIds.has(t));\n        // Missing\n        if(missingTokenIds.length){\n            tokenLookupsSource.unshift({\n                trait_type: traitType,\n                trait_value: MISSING_ATTRIBUTE_VALUE,\n                tokenIds: missingTokenIds\n            });\n        }\n\n        // All\n        tokenLookupsSource.unshift({\n            trait_type: traitType,\n            trait_value: ALL_TRAIT_VALUE,\n            tokenIds: doc.tokenIdsByRank,\n        });\n    });\n\n    const tokenLookups = tokenLookupsSource.map(x=>({\n        ...x,\n        ratio: x.tokenIds.length / doc.tokenIdsByRank.length,\n    }));\n\n    // Sort tokenLookups\n    tokenLookups.sort();\n\n    return {\n        project: doc.project,\n        contractAddress: doc.project.contract,\n        tokenIdsByRank: doc.tokenIdsByRank,\n        tokenLookups,\n        traitTypes,\n    };\n};\n\nexport const NftProject = ({ projectKey, projectRarity }:{ projectKey:string, projectRarity:INftProjectRarityData}) => {\n\n    const [tokenIds, setTokenIds] = useState(new Set(projectRarity.tokenIdsByRank));\n    const nftListRef = useRef(null as null | HTMLDivElement)\n    const traitFilters = useRef({} as TraitFilters);\n\n    const onSelect = (args: { traitType: string, value: string }) => {\n        const selections = traitFilters.current;\n        selections[args.traitType] = {value: args.value, tokenIdsIfAll: new Set([]) };\n\n        // Calculate tokenIdsIfAll\n        Object.keys(selections).forEach(traitKeyIfAll => {\n            let tokenIdsIfAll = new Set(projectRarity.tokenIdsByRank);\n            Object.entries(selections).forEach(([traitKey,traitValue])=>{\n                const tokenLookup = projectRarity.tokenLookups.find(v => v.trait_type === traitKey && v.trait_value === traitValue.value);\n                if(!tokenLookup){ return; }\n                if(traitKey === traitKeyIfAll){ return; }\n    \n                tokenIdsIfAll = new Set(tokenLookup.tokenIds.filter(t => tokenIdsIfAll.has(t) ));\n            });\n            selections[traitKeyIfAll].tokenIdsIfAll = tokenIdsIfAll;\n        });\n\n        let tokenIdsSelected = new Set(projectRarity.tokenIdsByRank);\n        Object.entries(selections).forEach(([traitKey,traitValue])=>{\n            const tokenLookup = projectRarity.tokenLookups.find(v => v.trait_type === traitKey && v.trait_value === traitValue.value);\n            if(!tokenLookup){ return; }\n\n            tokenIdsSelected = new Set(tokenLookup.tokenIds.filter(t => tokenIdsSelected.has(t) ));\n        });\n\n        setTokenIds(tokenIdsSelected);\n        // nftListRef.current?.scrollIntoView({behavior:'smooth'});\n    };\n    const onReset = () => {\n        traitFilters.current = {};\n        setTokenIds(new Set(projectRarity.tokenIdsByRank));\n    };\n\n    return (\n        <>\n            <div className='panel-container'>\n                <div className='panel-project-info'>\n                    <ProjectInfo project={projectRarity.project}/>\n                </div>\n                <div className='panel-trait-types'>\n                    <TraitTypesList projectRarity={projectRarity} tokenIds={tokenIds} selected={traitFilters.current} onSelect={onSelect} onReset={onReset}/>\n                </div>\n                <div className='panel-nft-list'>\n                    <div style={{marginTop: 8}}>Analysis</div>\n                    <div>\n                        <TraitGraph projectKey={projectKey} projectRarity={projectRarity} tokenIds={tokenIds} selected={traitFilters.current} onSelect={onSelect}/>\n                    </div>\n                    <div>\n                        <TraitGrid projectKey={projectKey} projectRarity={projectRarity} tokenIds={tokenIds} selected={traitFilters.current} onSelect={onSelect}\n                            HoverComponent={({args})=><HoverComponent hoverArgs={args} projectRarity={projectRarity} tokenIds={tokenIds} selected={traitFilters.current} onSelect={onSelect}/>}\n                        />\n                    </div>\n                    <div style={{marginTop: 32}}>Nfts</div>\n                    <div className='nft-list' ref={nftListRef}>\n                        {projectRarity && (\n                            <LazyList items={[...tokenIds]} getItemKey={x=>`${x}`} ItemComponent={({item})=>(\n                                <div\n                                    className='link'\n                                    onClick={()=>window.location.href=`${projectKey}/${item}`}\n                                >\n                                    <NftLoader projectKey={projectKey} tokenId={`${item}`} contractAddress={projectRarity.contractAddress} onSelect={onSelect} />\n                                </div>\n                            )}/>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nconst HoverComponent = ({ \n    projectRarity, \n    tokenIds, selected, onSelect,\n    hoverArgs,\n}:{ \n     projectRarity:INftProjectRarityData, \n     tokenIds: Set<number>, selected:TraitFilters, onSelect: OnSelectTraitValue,\n     hoverArgs: HoverArgs,\n})=>{\n    // const traitInfo = traitFilters.current.\n\n    const {trait,tokenId} = hoverArgs;\n    const traitInfo = selected?.[trait.trait_type];\n    const isSelected = traitInfo?.value === trait.trait_value;\n    const nftCount = trait.tokenIds.length;\n    const ratio = trait.tokenIds.length / projectRarity.tokenIdsByRank.length;\n\n    return (\n        <div className='hover-popup'>\n            <div style={{textAlign:'left'}}>{trait.trait_type}</div>\n            <div className={`nft-trait-value link ${isSelected ? 'nft-trait-value-selected':''}`} \n                onClick={()=>onSelect({traitType: trait.trait_type, value: trait.trait_value})}>\n                <BarGraphCell ratio={ratio} text={trait.trait_value} textRight={`${nftCount}`}/>\n            </div>\n            <div style={{textAlign:'left'}}>#{tokenId}</div>\n            <div style={{textAlign:'right'}}>Rank {projectRarity.tokenIdsByRank.findIndex(x=>x === tokenId) + 1}</div>\n        </div>\n    );\n};\n\nexport const ProjectInfo = ({project}:{ project:INftProjectMetadataDocument})=>{\n    return (\n        <>\n            <div className='project-info'>\n                <div style={{}}>\n                    <SmartImage alt='project' src={project.image} style={{objectFit:'contain', width: 150}}/>\n                </div>\n                <div style={{}}>\n                    <div style={{display:'flex', flexDirection:'row', justifyContent:'flex-end'}}>\n                        <IconLink url={project.external_link} icon='link'/>\n                        <IconLink url={project.links?.opensea} iconUrl='/media/opensea.png'/>\n                        <IconLink url={project.links?.openSea} iconUrl='/media/opensea.png'/>\n                        <IconLink url={project.links?.twitter} icon='twitter'/>\n                        <IconLink url={project.links?.discord} icon='discord'/>\n                        {Object.entries(project.links??{})\n                            .filter(([k])=> !'opensea openSea discord twitter'.includes(k))\n                            .map(([k,v])=>(\n                                <IconLink key={k} url={v} icon='link'/>\n                            ))}\n                    </div>\n                    <div className='project-info-title'>{project.name}</div>\n                    <div className='project-info-description'>{project.description}</div>\n                    {!!project.external_link && (\n                        <div className='project-info-link'>\n                            <a href={getIpfsUrl(project.external_link)}>{project.external_link}</a>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport const TraitTypesList = ({ \n    projectRarity, tokenIds, selected, onSelect, onReset\n}:{ \n    projectRarity:INftProjectRarityData, tokenIds: Set<number>, \n    selected:TraitFilters, \n    onSelect: OnSelectTraitValue,\n    onReset: () => void,\n})=>{\n    const [isExpanded, setIsExpanded] = useState(true);\n   \n    return (\n        <>\n            <div className='nft-trait-types-header'>\n                <div className='nft-trait-types-header-expandable link' onClick={()=>setIsExpanded(s=>!s)}>\n                    <div style={{position:'relative'}}>\n                        <div style={{\n                            position:'absolute',\n                            left: 4,\n                            fontSize: 18\n                            }}>\n                            {isExpanded ? <Icon icon='expanded'/> : <Icon icon='collapsed'/> }\n                        </div>\n                        Trait Filters \n                    </div>\n                </div>\n                <div className='nft-trait-types-header-simple'>\n                    <div>Trait Filters</div>\n                </div>\n            </div>\n                <div className='nft-trait-type-header link' onClick={onReset}>\n                    <div style={{position:'relative'}}>\n                        {Object.values(selected).some(x => x.value !== ALL_TRAIT_VALUE) && (\n                            <>\n                                <div style={{\n                                    position:'absolute',\n                                    right: 4,\n                                    }}>\n                                    {'❌'}\n                                </div>\n                                <span>Reset</span>\n                            </>\n                        )}\n                        <span>&nbsp;</span>\n                    </div>\n                </div>\n            <div className='nft-trait-types'>\n                {projectRarity.traitTypes.map(x=>(\n                    <React.Fragment key={x}>\n                        <TraitValuesList traitType={x} projectRarity={projectRarity} \n                            isExpandedAll={isExpanded}\n                            tokenIds={tokenIds} selected={selected} onSelect={onSelect} />\n                    </React.Fragment>\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport const TraitValuesList = ({ \n    traitType, projectRarity, \n    isExpandedAll,\n    tokenIds, selected, onSelect\n}:{ \n     traitType: string, projectRarity:INftProjectRarityData, \n     isExpandedAll: boolean,\n     tokenIds: Set<number>, selected:TraitFilters, onSelect: OnSelectTraitValue\n})=>{\n   \n    const [isExpanded, setIsExpanded] = useState(isExpandedAll);\n    const toggleIsExpanded = ()=>{setIsExpanded(s=>!s)};\n    useEffect(()=>{\n        setIsExpanded(isExpandedAll);\n    },[isExpandedAll]);\n\n    const traitTypeTokenLookups = projectRarity.tokenLookups\n        .filter(x=>x.trait_type === traitType);\n   \n    const selectedTraitItem = selected[traitType] ?? {\n        value: ALL_TRAIT_VALUE,\n        tokenIdsIfAll: tokenIds,\n    };\n    const isAllSelected = selectedTraitItem.value === ALL_TRAIT_VALUE;\n    console.log('TraitValuesList', {isAllSelected, selectedTraitItem});\n\n    const traitTypeTokenLookupsWithCount = traitTypeTokenLookups.map(x=>({\n        x, \n        isSelected: selectedTraitItem.value === x.trait_value,\n        count: x.tokenIds.filter(t => (selectedTraitItem.tokenIdsIfAll??tokenIds).has(t)).length\n    }));\n\n    return (\n        <div className='nft-trait-type'>\n            <div className='nft-trait-type-header link' onClick={()=>toggleIsExpanded()}>\n                <div style={{position:'relative'}}>\n                    <div style={{\n                            position:'absolute',\n                            left: 4,\n                            fontSize: 18\n                            }}>\n                            {isExpanded ? <Icon icon='expanded'/> : <Icon icon='collapsed'/> }\n                    </div>\n                    {!isAllSelected && (\n                        <div style={{\n                            position:'absolute',\n                            right: 4,\n                            }}\n                            onClick={(e)=>{ \n                                e.preventDefault();\n                                e.stopPropagation();\n                                onSelect({traitType, value: ALL_TRAIT_VALUE});\n                            }}\n                        >\n                            {'❌'}\n                        </div>\n                    )}\n                    {traitType}\n                </div>\n                {!isExpanded && (\n                    <div className='nft-trait-value'>\n                        {selectedTraitItem.value}\n                    </div>\n                )}\n            </div>\n            {isExpanded && (\n                <div className='nft-trait-values'>\n                    {traitTypeTokenLookupsWithCount\n                    .filter(({count,isSelected})=>count||isSelected)\n                    .map(({x,count,isSelected})=>(\n                        <React.Fragment key={`${x.trait_type}:${x.trait_value}`}>\n                            <div className={`nft-trait-value link ${isSelected ? 'nft-trait-value-selected':''}`} onClick={()=>onSelect({traitType: x.trait_type, value: x.trait_value})}>\n                                <BarGraphCell ratio={x.ratio} text={x.trait_value} textRight={`${count}`}/>\n                            </div>\n                        </React.Fragment>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport { ThemeSubscription } from \"../helpers/theme\";\n\nexport const Layout = ({ children }:{ children:JSX.Element }) => {\n\n    const [isDark, setIsDark] = useState(true);\n\n    useEffect(()=>{\n        ThemeSubscription.subscribe(setIsDark);\n    },[]);\n\n    return (\n        <>\n            <div style={{display: 'flex', flexDirection:'row', padding: 8}}>\n                <a href=\"/\">\n                 <img style={{width: 256}}\n                    src={isDark ? '/media/logo_white.png' : '/media/logo_black.png'} alt='site-logo'/>\n                </a>\n            </div>\n            <div>\n                {children}\n            </div>\n        </>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { INftProjectMetadata, INftProjectsDocument } from '@crypto-dev-amigos/common';\nimport { LazyList } from './lazy-list';\nimport { NftLoader } from './nft-loader';\nimport { getIpfsUrl, getProjectsJsonUrl } from '../helpers/urls';\nimport { LazyComponent } from './lazy-component';\nimport { changeTheme } from '../helpers/theme';\nimport { SmartImage } from './smart-image';\nimport { LoadingIndicator } from './icons';\nimport { ProjectInfo } from './nft-project';\n\nexport const NftProjectsLoader = (props:{ })=>{\n\n    const [projects, setProjectRarity] = useState(null as null | INftProjectsDocument);\n\n    useEffect(() => {\n        (async () => {\n            const nftProjectUrl = getProjectsJsonUrl();\n            // console.log('projectKey', { projectKey, nftProjectUrl });\n            const result = await fetch(nftProjectUrl);\n            const obj = await result.json() as INftProjectsDocument;\n            setProjectRarity(obj);\n        })();\n    }, []);\n\nreturn (\n    <>\n        {!projects && <LoadingIndicator/>}\n        {projects && <NftProjects projects={projects} />}\n    </>\n);\n};\n\nexport const NftProjects = ({ projects }:{ projects: INftProjectsDocument }) => {\n    return (\n        <>\n            <div className='project-list'>\n                {projects && (\n                    <LazyList items={projects.projects} getItemKey={x=>`${x.projectKey}`} ItemComponent={({item})=>(\n                        <NftProjectCard projectKey={item.projectKey} project={item.projectMetadata} />\n                    )}/>\n                )}\n            </div>\n        </>\n    );\n};\n\n\nexport const NftProjectCard = ({projectKey, project}:{ projectKey:string, project: INftProjectMetadata }) => {\n\n    const targetId =  projectKey + '_theme';\n    useEffect(()=>{\n        changeTheme(project.theme, `#${targetId}`);\n    }, [targetId]);\n\n    return (\n        <>\n            <div id={targetId} className={'nft-card link'} \n                style={{position:'relative'}} \n                onClick={()=>window.location.href=`${projectKey}`}\n            >\n                {/* Disable Links */}\n                <div style={{position:'absolute', top:0, bottom:0, left:0, right: 0, opacity: 0}}></div>\n                <ProjectInfo project={project}/>\n            </div>\n        </>\n    );\n};\n\n","import { NftProjectsLoader } from \"./nft-projects\";\n\nexport const HomePage = ()=>{\n\n    return (\n        <div style={{display:'flex', flexDirection:'column', justifyContent:'space-between', alignItems:'center', minHeight:'calc(100vh - 100px)'}}>\n            <div style={{width: '100%'}}>\n            <NftProjectsLoader/>\n            </div>\n            <CharacterArea/>\n        </div>\n    );\n};\n\n\nconst CharacterArea = (props:{})=>{\n    return (\n        <>\n            <div style={{display:'flex', flexDirection:'row'}}>\n                <Character punkId={4856} name={'@NotChris'} link={`https://twitter.com/HemanCalvin`}/>\n                <Character punkId={578} name={'@RickLove'} link={`https://twitter.com/Rick_00_Love`}/>\n            </div>\n        </>\n    );\n}\n\nconst Character = ({punkId, name, link}:{punkId:number, name:string, link?:string})=>{\n    return (\n        <>\n            <div className={link ? 'link':''}\n                style={{padding: 8}}\n                onClick={(e)=>{\n                    if(!link){ return; } \n                    e.preventDefault();\n                    e.stopPropagation();\n                    window.open(link);\n                }}>\n                <div>\n                    <img style={{width: 150, height:150, objectFit:'contain'}} \n                        src={`/media/punk${punkId}.png`} alt=\"punk\"/>\n                </div>\n                <div>\n                    {!link && name}\n                    {!!link && <a href={link}>{`${name}`}</a>}\n                </div>\n                <div>\n                    {`OneDayPunk #${punkId}`}\n                </div>\n            </div>\n        </>\n    );\n}","import React from 'react';\nimport './CssReset.css';\nimport './App.css';\nimport { NftLoader } from './components/nft-loader';\nimport { NftProjectLoader } from './components/nft-project';\nimport { NftProjectsLoader } from './components/nft-projects';\nimport { Layout } from './components/layout';\nimport { HomePage } from './components/home-page';\n\nfunction App() {\n\n return (\n  <Layout>\n      <Routing/>\n  </Layout>\n );\n}\n\nconst Routing = (props:{}) => {\n  const route = window.location.pathname.split('/');\n  const projectKey = route[1] ?? undefined;\n  const tokenId = route[2] ?? undefined;\n\n  console.log('route', {route, projectKey, tokenId});\n\n  if(projectKey && tokenId){\n    return (\n      <div className=\"App\">\n        <div className='nft-container-single'>\n          <NftLoader projectKey={projectKey} tokenId={tokenId}/>\n        </div>\n      </div>\n    );\n  }\n\n  if(projectKey){\n    return (\n      <div className=\"App\">\n        <NftProjectLoader projectKey={projectKey}/>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n        <HomePage/>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}